{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"# HuSpaCy is a spaCy library providing industrial-strength Hungarian language processing facilities through spaCy models. The released pipelines consist of a tokenizer, sentence splitter, lemmatizer, tagger (predicting morphological features as well), dependency parser and a named entity recognition module. Word and phrase embeddings are also available through spaCy's API. All models have high throughput, decent memory usage and close to state-of-the-art accuracy. A live demo is available here , model releases are published to Hugging Face Hub .","title":""},{"location":"#_1","text":"HuSpaCy is a spaCy library providing industrial-strength Hungarian language processing facilities through spaCy models. The released pipelines consist of a tokenizer, sentence splitter, lemmatizer, tagger (predicting morphological features as well), dependency parser and a named entity recognition module. Word and phrase embeddings are also available through spaCy's API. All models have high throughput, decent memory usage and close to state-of-the-art accuracy. A live demo is available here , model releases are published to Hugging Face Hub .","title":""},{"location":"contact/","text":"Contact # For feature requests, issues and bugs please use the GitHub Issue Tracker . Otherwise, reach out to us in the Discussion Forum . Authors # HuSpaCy is implemented in the SzegedAI team, coordinated by Orosz Gy\u00f6rgy in the Hungarian AI National Laboratory, MILAB program.","title":"Contact"},{"location":"contact/#contact","text":"For feature requests, issues and bugs please use the GitHub Issue Tracker . Otherwise, reach out to us in the Discussion Forum .","title":" Contact"},{"location":"contact/#authors","text":"HuSpaCy is implemented in the SzegedAI team, coordinated by Orosz Gy\u00f6rgy in the Hungarian AI National Laboratory, MILAB program.","title":"Authors"},{"location":"examples/anonymizer/","text":"Text Anonymization # Using Presidio \u00b9 and Faker \u00b2 , we can easily make a simple text anonymization tool or PII (Personally Identifiable Information) removal tool. The (hu)spaCy integration of Presidio can be used to identify and remove personal data, such as names, locations, phone numbers, or even bank details. This tool uses (hu)spaCy's Named Entity Recognition facilities and further pattern matching rules. What is more, an easy-to-use de-identification method is provided by Faker as we show below. Initializing Presidio with HuSpaCy # Option 1: using only model names # // Here we use the hu_core_news_lg model , but any model supporting NER is a valid option configuration = { \"nlp_engine_name\" : \"spacy\" , \"models\" : [{ \"lang_code\" : \"hu\" , \"model_name\" : \"hu_core_news_lg\" , }], } provider = NlpEngineProvider ( nlp_configuration = configuration ) nlp_engine = provider . create_engine () analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ],) Option 2: Building on a previously initialized nlp # class HuSpaCyNlpEngine ( SpacyNlpEngine ): def __init__ ( self , nlp : Language ): self . nlp = { \"hu\" : nlp } def process (): nlp = spacy . load ( \"hu_core_news_trf\" ) nlp_engine = HuSpaCyNlpEngine ( nlp ) analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ]) Configuring Faker operators # fake = Faker ( locale = [ \"hu_HU\" ]) fake_operators = { \"PERSON\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . name ()}), \"LOCATION\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . address ()}), \"EMAIL_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . email ()}), \"PHONE_NUMBER\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . phone_number ()}), \"CRYPTO\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . password ()}), \"IP_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . ipv4 ()}), \"URL\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . url ()}), \"DATE_TIME\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . date ()}), \"CREDIT_CARD\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . credit_card_number ()}), \"IBAN_CODE\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . iban ()}), } Applying Presidio's anonymizer with Faker # anonymizer = AnonymizerEngine () anonymized_text = anonymizer . anonymize ( text = text , analyzer_results = results , operators = fake_operators ) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Anonymizer"},{"location":"examples/anonymizer/#text-anonymization","text":"Using Presidio \u00b9 and Faker \u00b2 , we can easily make a simple text anonymization tool or PII (Personally Identifiable Information) removal tool. The (hu)spaCy integration of Presidio can be used to identify and remove personal data, such as names, locations, phone numbers, or even bank details. This tool uses (hu)spaCy's Named Entity Recognition facilities and further pattern matching rules. What is more, an easy-to-use de-identification method is provided by Faker as we show below.","title":" Text Anonymization"},{"location":"examples/anonymizer/#initializing-presidio-with-huspacy","text":"","title":"Initializing Presidio with HuSpaCy"},{"location":"examples/anonymizer/#option-1-using-only-model-names","text":"// Here we use the hu_core_news_lg model , but any model supporting NER is a valid option configuration = { \"nlp_engine_name\" : \"spacy\" , \"models\" : [{ \"lang_code\" : \"hu\" , \"model_name\" : \"hu_core_news_lg\" , }], } provider = NlpEngineProvider ( nlp_configuration = configuration ) nlp_engine = provider . create_engine () analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ],)","title":"Option 1: using only model names"},{"location":"examples/anonymizer/#option-2-building-on-a-previously-initialized-nlp","text":"class HuSpaCyNlpEngine ( SpacyNlpEngine ): def __init__ ( self , nlp : Language ): self . nlp = { \"hu\" : nlp } def process (): nlp = spacy . load ( \"hu_core_news_trf\" ) nlp_engine = HuSpaCyNlpEngine ( nlp ) analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ])","title":"Option 2: Building on a previously initialized nlp"},{"location":"examples/anonymizer/#configuring-faker-operators","text":"fake = Faker ( locale = [ \"hu_HU\" ]) fake_operators = { \"PERSON\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . name ()}), \"LOCATION\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . address ()}), \"EMAIL_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . email ()}), \"PHONE_NUMBER\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . phone_number ()}), \"CRYPTO\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . password ()}), \"IP_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . ipv4 ()}), \"URL\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . url ()}), \"DATE_TIME\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . date ()}), \"CREDIT_CARD\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . credit_card_number ()}), \"IBAN_CODE\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . iban ()}), }","title":"Configuring Faker operators"},{"location":"examples/anonymizer/#applying-presidios-anonymizer-with-faker","text":"anonymizer = AnonymizerEngine () anonymized_text = anonymizer . anonymize ( text = text , analyzer_results = results , operators = fake_operators ) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Applying Presidio's anonymizer with Faker"},{"location":"examples/dbpedia/","text":"Entity Linking # Using the DBpedia Spotlight integration for SpaCy \u00b9 , we can easily extract and link DBpedia entities from any text. Initializing DBpedia Spotlight # nlp = spacy . load ( \"hu_core_news_trf\" ) nlp . add_pipe ( \"dbpedia_spotlight\" , config = { 'dbpedia_rest_endpoint' : 'https://dbpedia-spotlight.dsd.sztaki.hu/hu' , 'overwrite_ents' : False }) Presenting the entities # doc = nlp ( \"A M\u00e1trix c\u00edm\u0171 sci-fi film Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Joe Pantoliano \u00e9s Hugo Weaving f\u0151szerepl\u00e9s\u00e9vel.\" ) pd . DataFrame ([ { \"Text\" : ent . text , \"Resource\" : ent . kb_id_ , \"Similarity Score\" : ent . _ . dbpedia_raw_result [ '@similarityScore' ]} for ent in doc . spans [ \"dbpedia_spotlight\" ]]) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Entity linking"},{"location":"examples/dbpedia/#entity-linking","text":"Using the DBpedia Spotlight integration for SpaCy \u00b9 , we can easily extract and link DBpedia entities from any text.","title":" Entity Linking"},{"location":"examples/dbpedia/#initializing-dbpedia-spotlight","text":"nlp = spacy . load ( \"hu_core_news_trf\" ) nlp . add_pipe ( \"dbpedia_spotlight\" , config = { 'dbpedia_rest_endpoint' : 'https://dbpedia-spotlight.dsd.sztaki.hu/hu' , 'overwrite_ents' : False })","title":"Initializing DBpedia Spotlight"},{"location":"examples/dbpedia/#presenting-the-entities","text":"doc = nlp ( \"A M\u00e1trix c\u00edm\u0171 sci-fi film Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Joe Pantoliano \u00e9s Hugo Weaving f\u0151szerepl\u00e9s\u00e9vel.\" ) pd . DataFrame ([ { \"Text\" : ent . text , \"Resource\" : ent . kb_id_ , \"Similarity Score\" : ent . _ . dbpedia_raw_result [ '@similarityScore' ]} for ent in doc . spans [ \"dbpedia_spotlight\" ]]) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Presenting the entities"},{"location":"examples/keyphrase/","text":"Keyphrase Extraction # Keyphrase extraction is a well-studied problem of natural language processing, thus many ready-made solutions exist. textacy is higher-level NLP library (built on spaCy) implementing several keyword extraction methods. By using this tool, we can easily build a simple solution for this problem. First, you need to load a HuSpaCy model, and process the text you wish to analyze: import huspacy nlp = huspacy . load () doc = nlp ( text ) Then, you need to decide which key term extraction method should be utilized, as textacy implements several ones . For the sake of simplicity we rely on SGRank and fine-tune it through PoS and word n-gram filters. from textacy.extract.keyterms.sgrank import sgrank as keywords terms : List [ Tuple [ str , float ]] = keywords ( doc , topn = 10 , include_pos = ( \"NOUN\" , \"PROPN\" ), ngrams = ( 1 , 2 , 3 )) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Keyphrase extraction"},{"location":"examples/keyphrase/#keyphrase-extraction","text":"Keyphrase extraction is a well-studied problem of natural language processing, thus many ready-made solutions exist. textacy is higher-level NLP library (built on spaCy) implementing several keyword extraction methods. By using this tool, we can easily build a simple solution for this problem. First, you need to load a HuSpaCy model, and process the text you wish to analyze: import huspacy nlp = huspacy . load () doc = nlp ( text ) Then, you need to decide which key term extraction method should be utilized, as textacy implements several ones . For the sake of simplicity we rely on SGRank and fine-tune it through PoS and word n-gram filters. from textacy.extract.keyterms.sgrank import sgrank as keywords terms : List [ Tuple [ str , float ]] = keywords ( doc , topn = 10 , include_pos = ( \"NOUN\" , \"PROPN\" ), ngrams = ( 1 , 2 , 3 )) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":" Keyphrase Extraction"},{"location":"examples/relation/","text":"Relation Extraction # By using a set of simplerules, we can extract an ordered sequence of subject-verb-object triples from a document or sentence. For example, in the sentence \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" (Anna builds a house for herself.) \"Anna\" will be the subject, \"\u00e9p\u00edt\" will be the verb, and the \"h\u00e1z\" will be the object. This triple will be an extracted relation. Using HuSpaCy for tagging and dependency parsing and the modified code for extraction, we can make a simple relaction extraction tool. Importing and using HuSpaCy # nlp = spacy . load ( \"hu_core_news_trf\" ) doc = nlp ( \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" ) Extraction SVO triples # def subject_verb_object_triples ( doclike : types . DocLike ) -> Iterable [ SVOTriple ]: if isinstance ( doclike , Span ): sents = [ doclike ] else : sents = doclike . sents for sent in sents : # connect subjects/objects to direct verb heads # and expand them to include conjuncts, compound nouns, ... verb_sos = collections . defaultdict ( lambda : collections . defaultdict ( set )) for tok in sent : head = tok . head # ensure entry for all verbs, even if empty # to catch conjugate verbs without direct subject/object deps if tok . pos == VERB : _ = verb_sos [ tok ] # nominal subject of active or passive verb if tok . dep in _NOMINAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( expand_noun ( tok )) # clausal subject of active or passive verb elif tok . dep in _CLAUSAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( tok . subtree ) # nominal direct object of transitive verb elif tok . dep == obj : if head . pos == VERB : verb_sos [ head ][ \"objects\" ] . update ( expand_noun ( tok )) # prepositional object acting as agent of passive verb elif tok . dep == pobj : if head . dep == agent and head . head . pos == VERB : verb_sos [ head . head ][ \"objects\" ] . update ( expand_noun ( tok )) # open clausal complement, but not as a secondary predicate elif tok . dep == xcomp : if ( head . pos == VERB and not any ( child . dep == obj for child in head . children ) ): # TODO: just the verb, or the whole tree? # verb_sos[verb][\"objects\"].update(expand_verb(tok)) verb_sos [ head ][ \"objects\" ] . update ( tok . subtree ) # fill in any indirect relationships connected via verb conjuncts for verb , so_dict in verb_sos . items (): conjuncts = verb . conjuncts if so_dict . get ( \"subjects\" ): for conj in conjuncts : conj_so_dict = verb_sos . get ( conj ) if conj_so_dict and not conj_so_dict . get ( \"subjects\" ): conj_so_dict [ \"subjects\" ] . update ( so_dict [ \"subjects\" ]) if not so_dict . get ( \"objects\" ): so_dict [ \"objects\" ] . update ( obj for conj in conjuncts for obj in verb_sos . get ( conj , {}) . get ( \"objects\" , []) ) # expand verbs and restructure into svo triples for verb , so_dict in verb_sos . items (): if so_dict [ \"subjects\" ] and so_dict [ \"objects\" ]: yield SVOTriple ( subject = sorted ( so_dict [ \"subjects\" ], key = attrgetter ( \"i\" )), verb = sorted ( expand_verb ( verb ), key = attrgetter ( \"i\" )), object = sorted ( so_dict [ \"objects\" ], key = attrgetter ( \"i\" )), ) The function with all it's dependencies is available on GitHub . Extracting the triples # tuples = subject_verb_object_triples ( doc ) Presenting the data # for sub_multiple in tuples [ 0 ][ 0 ]: subject += str ( sub_multiple ) + \", \" subject = subject [: - 2 ] for verb_multiple in tuples [ 0 ][ 1 ]: verb += str ( verb_multiple ) + \", \" verb = verb [: - 2 ] for obj_multiple in tuples [ 0 ][ 2 ]: object += str ( obj_multiple ) + \", \" object = object [: - 2 ] relation_list = [[ subject , verb , object ]] df = pd . DataFrame ( relation_list , columns = [ 'Subject' , 'Verb' , 'Object' ]) Notes # The method presented above is heavily based on Textacy \u00b9 's similar method. We slightly modified to adapt for Hungarian. You can find the full extraction method here . This example is available on Hugging Face Spaces . The full source code is on GitHub .","title":"Relation extraction"},{"location":"examples/relation/#relation-extraction","text":"By using a set of simplerules, we can extract an ordered sequence of subject-verb-object triples from a document or sentence. For example, in the sentence \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" (Anna builds a house for herself.) \"Anna\" will be the subject, \"\u00e9p\u00edt\" will be the verb, and the \"h\u00e1z\" will be the object. This triple will be an extracted relation. Using HuSpaCy for tagging and dependency parsing and the modified code for extraction, we can make a simple relaction extraction tool.","title":" Relation Extraction"},{"location":"examples/relation/#importing-and-using-huspacy","text":"nlp = spacy . load ( \"hu_core_news_trf\" ) doc = nlp ( \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" )","title":"Importing and using HuSpaCy"},{"location":"examples/relation/#extraction-svo-triples","text":"def subject_verb_object_triples ( doclike : types . DocLike ) -> Iterable [ SVOTriple ]: if isinstance ( doclike , Span ): sents = [ doclike ] else : sents = doclike . sents for sent in sents : # connect subjects/objects to direct verb heads # and expand them to include conjuncts, compound nouns, ... verb_sos = collections . defaultdict ( lambda : collections . defaultdict ( set )) for tok in sent : head = tok . head # ensure entry for all verbs, even if empty # to catch conjugate verbs without direct subject/object deps if tok . pos == VERB : _ = verb_sos [ tok ] # nominal subject of active or passive verb if tok . dep in _NOMINAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( expand_noun ( tok )) # clausal subject of active or passive verb elif tok . dep in _CLAUSAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( tok . subtree ) # nominal direct object of transitive verb elif tok . dep == obj : if head . pos == VERB : verb_sos [ head ][ \"objects\" ] . update ( expand_noun ( tok )) # prepositional object acting as agent of passive verb elif tok . dep == pobj : if head . dep == agent and head . head . pos == VERB : verb_sos [ head . head ][ \"objects\" ] . update ( expand_noun ( tok )) # open clausal complement, but not as a secondary predicate elif tok . dep == xcomp : if ( head . pos == VERB and not any ( child . dep == obj for child in head . children ) ): # TODO: just the verb, or the whole tree? # verb_sos[verb][\"objects\"].update(expand_verb(tok)) verb_sos [ head ][ \"objects\" ] . update ( tok . subtree ) # fill in any indirect relationships connected via verb conjuncts for verb , so_dict in verb_sos . items (): conjuncts = verb . conjuncts if so_dict . get ( \"subjects\" ): for conj in conjuncts : conj_so_dict = verb_sos . get ( conj ) if conj_so_dict and not conj_so_dict . get ( \"subjects\" ): conj_so_dict [ \"subjects\" ] . update ( so_dict [ \"subjects\" ]) if not so_dict . get ( \"objects\" ): so_dict [ \"objects\" ] . update ( obj for conj in conjuncts for obj in verb_sos . get ( conj , {}) . get ( \"objects\" , []) ) # expand verbs and restructure into svo triples for verb , so_dict in verb_sos . items (): if so_dict [ \"subjects\" ] and so_dict [ \"objects\" ]: yield SVOTriple ( subject = sorted ( so_dict [ \"subjects\" ], key = attrgetter ( \"i\" )), verb = sorted ( expand_verb ( verb ), key = attrgetter ( \"i\" )), object = sorted ( so_dict [ \"objects\" ], key = attrgetter ( \"i\" )), ) The function with all it's dependencies is available on GitHub .","title":"Extraction SVO triples"},{"location":"examples/relation/#extracting-the-triples","text":"tuples = subject_verb_object_triples ( doc )","title":"Extracting the triples"},{"location":"examples/relation/#presenting-the-data","text":"for sub_multiple in tuples [ 0 ][ 0 ]: subject += str ( sub_multiple ) + \", \" subject = subject [: - 2 ] for verb_multiple in tuples [ 0 ][ 1 ]: verb += str ( verb_multiple ) + \", \" verb = verb [: - 2 ] for obj_multiple in tuples [ 0 ][ 2 ]: object += str ( obj_multiple ) + \", \" object = object [: - 2 ] relation_list = [[ subject , verb , object ]] df = pd . DataFrame ( relation_list , columns = [ 'Subject' , 'Verb' , 'Object' ])","title":"Presenting the data"},{"location":"examples/relation/#notes","text":"The method presented above is heavily based on Textacy \u00b9 's similar method. We slightly modified to adapt for Hungarian. You can find the full extraction method here . This example is available on Hugging Face Spaces . The full source code is on GitHub .","title":"Notes"},{"location":"huspacy/changelog/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 0.7.0 # New # Added support for new models ( hu_core_news_md-v3.5.0 , hu_core_news_lg-v3.5.0 , hu_core_news_trf_xl-v3.4.0 ) Updated documentation 0.6 # New # Added a lookup component for sentiment lexicons Added integration for novakat's onpp NER model ( nerpp ) Added support for new models ( hu_core_news_trf-v3.4.0 , hu_core_news_md-v3.4.2 , hu_core_news_lg-v3.4.4 ) Fixed # packaging dependency was implicit which might cause model loading failures 0.5.1 # Changed # Dropped Python 3.6 support New # Added support for hu_core_news_lg v3.4.3 0.5 # New # trainable_lemmatizer_v2 : fork and minor improvement of spaCy's trainable lemmatizer LemmaSmoother for improving lemmatization output of the trainable_lemmatizer RomanToArabic for convert Roman numbers to Arabic ones LookupLemmatizer to memoize token,pos -> lemma transformations Fixed # Fixing #46 : huspacy core no longer depends on spaCy Refactored components Added # Helper method for listing models available download() first validates the model before downloading it 0.4.3 # Fixed # Documentation updates Fixed model loading 0.4.2 # Initial release # Convenience functions for downloading and loading models","title":"Changelog"},{"location":"huspacy/changelog/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"huspacy/changelog/#070","text":"","title":"0.7.0"},{"location":"huspacy/changelog/#new","text":"Added support for new models ( hu_core_news_md-v3.5.0 , hu_core_news_lg-v3.5.0 , hu_core_news_trf_xl-v3.4.0 ) Updated documentation","title":"New"},{"location":"huspacy/changelog/#06","text":"","title":"0.6"},{"location":"huspacy/changelog/#new_1","text":"Added a lookup component for sentiment lexicons Added integration for novakat's onpp NER model ( nerpp ) Added support for new models ( hu_core_news_trf-v3.4.0 , hu_core_news_md-v3.4.2 , hu_core_news_lg-v3.4.4 )","title":"New"},{"location":"huspacy/changelog/#fixed","text":"packaging dependency was implicit which might cause model loading failures","title":"Fixed"},{"location":"huspacy/changelog/#051","text":"","title":"0.5.1"},{"location":"huspacy/changelog/#changed","text":"Dropped Python 3.6 support","title":"Changed"},{"location":"huspacy/changelog/#new_2","text":"Added support for hu_core_news_lg v3.4.3","title":"New"},{"location":"huspacy/changelog/#05","text":"","title":"0.5"},{"location":"huspacy/changelog/#new_3","text":"trainable_lemmatizer_v2 : fork and minor improvement of spaCy's trainable lemmatizer LemmaSmoother for improving lemmatization output of the trainable_lemmatizer RomanToArabic for convert Roman numbers to Arabic ones LookupLemmatizer to memoize token,pos -> lemma transformations","title":"New"},{"location":"huspacy/changelog/#fixed_1","text":"Fixing #46 : huspacy core no longer depends on spaCy Refactored components","title":"Fixed"},{"location":"huspacy/changelog/#added","text":"Helper method for listing models available download() first validates the model before downloading it","title":"Added"},{"location":"huspacy/changelog/#043","text":"","title":"0.4.3"},{"location":"huspacy/changelog/#fixed_2","text":"Documentation updates Fixed model loading","title":"Fixed"},{"location":"huspacy/changelog/#042","text":"","title":"0.4.2"},{"location":"huspacy/changelog/#initial-release","text":"Convenience functions for downloading and loading models","title":"Initial release"},{"location":"huspacy/contributing/","text":"Contributing #","title":":octicons-git-pull-request-24: Contributing"},{"location":"huspacy/contributing/#contributing","text":"","title":" Contributing"},{"location":"huspacy/develop/","text":"Repository structure # \u251c\u2500\u2500 .github -- GitHub configuration files \u251c\u2500\u2500 docs -- Documentation source files \u251c\u2500\u2500 hu_core_news_lg -- SpaCy 3.x project files for building the large model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_core_news_trf -- Spacy 3.x project files for building the transformer based model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_vectors_web_lg -- Spacy 3.x project files for building word vectors \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 huspacy -- subproject for the PyPI distributable package \u2502 \u251c\u2500\u2500 huspacy -- huspacy python package \u2502 \u251c\u2500\u2500 tests -- huspacy tests \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- HuSpaCy changelog \u2502 \u2514\u2500\u2500 README.md -> ../README.md \u251c\u2500\u2500 mkdocs.yml -- Mkdocs config file \u251c\u2500\u2500 scripts -- CLI scripts \u251c\u2500\u2500 LICENSE -- License file \u2514\u2500\u2500 README.md -- This file Release steps # First of all, we need all the dependencies installed: poetry install --with docs --with dev --all-extras Make sure all tests pass: poetry run pytest Update the readme, if there are changes in docs : poetry run python ../docs/update_readme.py Test README.md code snippets: poetry run pytest --codeblocks --verbosity=3 ./README.md ../docs/huspacy/*.md ../docs/recipes/*.md Bump version: poetry run bumpversion --new-version NEW_VERSION --verbose major/minor/patch Build wheel: poetry build -f wheel Publish on PyPI: poetry publish Publish on GitHub: VERSION=$(cat .bumpversion.cfg | grep \"current_version =\" | cut -c 19-) gh release create huspacy-v$VERSION dist/huspacy-$VERSION-py3-none-any.whl -t huspacy-v$VERSION","title":"Development"},{"location":"huspacy/develop/#repository-structure","text":"\u251c\u2500\u2500 .github -- GitHub configuration files \u251c\u2500\u2500 docs -- Documentation source files \u251c\u2500\u2500 hu_core_news_lg -- SpaCy 3.x project files for building the large model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_core_news_trf -- Spacy 3.x project files for building the transformer based model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_vectors_web_lg -- Spacy 3.x project files for building word vectors \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 huspacy -- subproject for the PyPI distributable package \u2502 \u251c\u2500\u2500 huspacy -- huspacy python package \u2502 \u251c\u2500\u2500 tests -- huspacy tests \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- HuSpaCy changelog \u2502 \u2514\u2500\u2500 README.md -> ../README.md \u251c\u2500\u2500 mkdocs.yml -- Mkdocs config file \u251c\u2500\u2500 scripts -- CLI scripts \u251c\u2500\u2500 LICENSE -- License file \u2514\u2500\u2500 README.md -- This file","title":"Repository structure"},{"location":"huspacy/develop/#release-steps","text":"First of all, we need all the dependencies installed: poetry install --with docs --with dev --all-extras Make sure all tests pass: poetry run pytest Update the readme, if there are changes in docs : poetry run python ../docs/update_readme.py Test README.md code snippets: poetry run pytest --codeblocks --verbosity=3 ./README.md ../docs/huspacy/*.md ../docs/recipes/*.md Bump version: poetry run bumpversion --new-version NEW_VERSION --verbose major/minor/patch Build wheel: poetry build -f wheel Publish on PyPI: poetry publish Publish on GitHub: VERSION=$(cat .bumpversion.cfg | grep \"current_version =\" | cut -c 19-) gh release create huspacy-v$VERSION dist/huspacy-$VERSION-py3-none-any.whl -t huspacy-v$VERSION","title":"Release steps"},{"location":"huspacy/installation/","text":"Installation # To get started using the tool, first, we need to download one of the models. The easiest way to achieve this is to install huspacy (from PyPI ) and then fetch a model through its API. pip install huspacy import huspacy # Download the latest CPU optimized model huspacy . download () Install the models directly # You can install the latest models directly from \ud83e\udd17 Hugging Face Hub: CPU optimized large model : pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl GPU optimized transformers model : pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl To speed up inference on GPUs, CUDA should be installed as described in https://spacy.io/usage . Read more on the models here","title":"Installation"},{"location":"huspacy/installation/#installation","text":"To get started using the tool, first, we need to download one of the models. The easiest way to achieve this is to install huspacy (from PyPI ) and then fetch a model through its API. pip install huspacy import huspacy # Download the latest CPU optimized model huspacy . download ()","title":" Installation"},{"location":"huspacy/installation/#install-the-models-directly","text":"You can install the latest models directly from \ud83e\udd17 Hugging Face Hub: CPU optimized large model : pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl GPU optimized transformers model : pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl To speed up inference on GPUs, CUDA should be installed as described in https://spacy.io/usage . Read more on the models here","title":"Install the models directly"},{"location":"huspacy/license/","text":"License # This library is released under the Apache 2.0 License Trained models have their own license ( CC BY-SA 4.0 ) as described on the models page .","title":"License"},{"location":"huspacy/license/#license","text":"This library is released under the Apache 2.0 License Trained models have their own license ( CC BY-SA 4.0 ) as described on the models page .","title":" License"},{"location":"huspacy/publications/","text":"Citing # If you use any of the models or HuSpaCy as library in your research, please cite this paper : @misc { HuSpaCy:2021 , title = {{HuSpaCy: an industrial-strength Hungarian natural language processing toolkit}} , booktitle = {{XVIII. Magyar Sz{\\'a}m{\\'\\i}t{\\'o}g{\\'e}pes Nyelv{\\'e}szeti Konferencia}} , author = {Orosz, Gy{\\\"o}rgy and Sz{\\' a}nt{\\' o}, Zsolt and Berkecz, P{\\' e}ter and Szab{\\' o}, Gerg{\\H o} and Farkas, Rich{\\' a}rd} , location = {{Szeged}} , year = {2022} , } Additionally, please indicate the version of the model you used so that your research can be reproduced.","title":"Citing"},{"location":"huspacy/publications/#citing","text":"If you use any of the models or HuSpaCy as library in your research, please cite this paper : @misc { HuSpaCy:2021 , title = {{HuSpaCy: an industrial-strength Hungarian natural language processing toolkit}} , booktitle = {{XVIII. Magyar Sz{\\'a}m{\\'\\i}t{\\'o}g{\\'e}pes Nyelv{\\'e}szeti Konferencia}} , author = {Orosz, Gy{\\\"o}rgy and Sz{\\' a}nt{\\' o}, Zsolt and Berkecz, P{\\' e}ter and Szab{\\' o}, Gerg{\\H o} and Farkas, Rich{\\' a}rd} , location = {{Szeged}} , year = {2022} , } Additionally, please indicate the version of the model you used so that your research can be reproduced.","title":" Citing"},{"location":"huspacy/quickstart/","text":"Quickstart # HuSpaCy is fully compatible with spaCy's API , newcomers can easily get started with spaCy 101 guide. Although HuSpacy models can be loaded with spacy.load(...) , the tool provides convenience methods to easily access downloaded models. # Load the model using spacy.load(...) import spacy nlp = spacy . load ( \"hu_core_news_lg\" ) # Load the default large model (if downloaded) import huspacy nlp = huspacy . load () # Load the model directly as a module import hu_core_news_lg nlp = hu_core_news_lg . load () To process texts, you can simply call the loaded model (i.e. the nlp callable object ) doc = nlp ( \"Csiribiri csiribiri zabszalma - n\u00e9gy csillag k\u00f6zt alszom ma.\" ) As HuSpaCy is built on spaCy, the returned doc document contains all the annotations given by the pipeline components.","title":"Quickstart"},{"location":"huspacy/quickstart/#quickstart","text":"HuSpaCy is fully compatible with spaCy's API , newcomers can easily get started with spaCy 101 guide. Although HuSpacy models can be loaded with spacy.load(...) , the tool provides convenience methods to easily access downloaded models. # Load the model using spacy.load(...) import spacy nlp = spacy . load ( \"hu_core_news_lg\" ) # Load the default large model (if downloaded) import huspacy nlp = huspacy . load () # Load the model directly as a module import hu_core_news_lg nlp = hu_core_news_lg . load () To process texts, you can simply call the loaded model (i.e. the nlp callable object ) doc = nlp ( \"Csiribiri csiribiri zabszalma - n\u00e9gy csillag k\u00f6zt alszom ma.\" ) As HuSpaCy is built on spaCy, the returned doc document contains all the annotations given by the pipeline components.","title":" Quickstart"},{"location":"huspacy/under_the_hood/","text":"Under the hood # HuSpaCy is built on top of spaCy hence almost all components are part of that NLP framework. Explosion's YouTube channel and Blog has several excellent tutorials on the underlying methods. Talks, publications # We regularly publish our results and talk on conferences and meetups. All materials are collected in this public repository .","title":"Under the hood"},{"location":"huspacy/under_the_hood/#under-the-hood","text":"HuSpaCy is built on top of spaCy hence almost all components are part of that NLP framework. Explosion's YouTube channel and Blog has several excellent tutorials on the underlying methods.","title":" Under the hood"},{"location":"huspacy/under_the_hood/#talks-publications","text":"We regularly publish our results and talk on conferences and meetups. All materials are collected in this public repository .","title":"Talks, publications"},{"location":"huspacy/usage_in_r/","text":"Usage in R # Recommended installation method # Make sure you have conda installed Install spacyr : R install.packages(\"spacyr\") library(\"spacyr\") spacy_install() Install one of the models (cf. md , lg , trf ) into the spacy_condaenv conda environment. Alternative installation method # Create a new conda environment using the environment.yml file in the huspacy-in-r repository : $ conda env create -n huspacyr --file ./environment.yml Activate the environment: $ conda activate huspacyr The demo environment comes with the 3.4.3 version of the hu_core_news_lg model. If you need another model (or version) use pip (cf. md , lg , trf ) to install the necessary model files to the conda environment. Usage # Having all dependencies installed, all you need to do is to load spacyr and initialize it with a HuSpaCy model: library ( \"spacyr\" ) # Loads the model which is already installed tin the conda environment spacy_initialize ( model = \"hu_core_news_lg\" ) HuSpaCy should now parse any texts: txt <- c ( d1 = \"Csiribiri csiribiri zabszalma,\" , d2 = \"n\u00e9gy csillag k\u00f6zt alszom ma.\" ) parsedtxt <- spacy_parse ( txt ) Demo # A live demo is accessible through binder in this repository","title":"Usage in R"},{"location":"huspacy/usage_in_r/#usage-in-r","text":"","title":" Usage in R"},{"location":"huspacy/usage_in_r/#recommended-installation-method","text":"Make sure you have conda installed Install spacyr : R install.packages(\"spacyr\") library(\"spacyr\") spacy_install() Install one of the models (cf. md , lg , trf ) into the spacy_condaenv conda environment.","title":"Recommended installation method"},{"location":"huspacy/usage_in_r/#alternative-installation-method","text":"Create a new conda environment using the environment.yml file in the huspacy-in-r repository : $ conda env create -n huspacyr --file ./environment.yml Activate the environment: $ conda activate huspacyr The demo environment comes with the 3.4.3 version of the hu_core_news_lg model. If you need another model (or version) use pip (cf. md , lg , trf ) to install the necessary model files to the conda environment.","title":"Alternative installation method"},{"location":"huspacy/usage_in_r/#usage","text":"Having all dependencies installed, all you need to do is to load spacyr and initialize it with a HuSpaCy model: library ( \"spacyr\" ) # Loads the model which is already installed tin the conda environment spacy_initialize ( model = \"hu_core_news_lg\" ) HuSpaCy should now parse any texts: txt <- c ( d1 = \"Csiribiri csiribiri zabszalma,\" , d2 = \"n\u00e9gy csillag k\u00f6zt alszom ma.\" ) parsedtxt <- spacy_parse ( txt )","title":"Usage"},{"location":"huspacy/usage_in_r/#demo","text":"A live demo is accessible through binder in this repository","title":"Demo"},{"location":"models/","text":"Models overview # We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. hu_core_news_trf_xl is an experimental model built on xlm-roberta-large . It provides the same functionality as the hu_core_news_trf model, however it comes with slightly higher accuracy in the price of significantly increased computational resource usage. We suggest using it with GPU support. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation . Comparison # Models md lg trf trf_xl Embeddings 100d floret 300d floret transformer: huBert transformer: xlm-roberta-large Target hardware CPU CPU GPU GPU Accuracy Resource usage","title":":octicons-database-24: Models overview"},{"location":"models/#models-overview","text":"We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. hu_core_news_trf_xl is an experimental model built on xlm-roberta-large . It provides the same functionality as the hu_core_news_trf model, however it comes with slightly higher accuracy in the price of significantly increased computational resource usage. We suggest using it with GPU support. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation .","title":" Models overview"},{"location":"models/#comparison","text":"Models md lg trf trf_xl Embeddings 100d floret 300d floret transformer: huBert transformer: xlm-roberta-large Target hardware CPU CPU GPU GPU Accuracy Resource usage","title":"Comparison"},{"location":"models/changelog_lg/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 3.5.0 # Changed # spaCy 3.5.x compatibility 3.4.4 # Fixed # Fixed dependencies of lemmatizer components 3.4.3 # Fixed # Improved hyperparameters on dependency parsing 3.4.2 # Changed # Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( GitHub Changelog ) Using the v3 version on Szeged-Corpus ( GitHub Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer 3.4.1 # Changed # Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma 3.4.0 # Changed # spaCy 3.4.x compatibility improved tagging performance 3.3.1 # Added # Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline 3.3.0 # Changed # Replaced Lemmy lemmatizer w/ edit tree lemmatizer 3.2.2 # Changed # Replaced static word vectors w/ char n-gram based floret ones Added multistep training to mitigate non-deterministic training behaviour 3.2.1 # Changed # Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention 0.4.2 # Fixed # Better integration of the lemmatizer Updated the project's documentation 0.4.1 # Added # Changed # NER model is built on NerKor and SzegedNER Improved lemmatization for numbers and sentence starting tokens Improved lemmatization by using the whole Szeged Corpus Improved PoS tagging by pretraining on a silver standard corpora Improved Dependency parser by using pretraining on silver standard corpora Improved sentence splitter by using the multitask neural model Fixed # Compatibility w/ Spacy 3.x 0.3.1 - 2019-10-03 # Fixed # Compatibility w/ Spacy 2.2.x 0.3.0 - 2019-09-26 # Added # Named Entity Recognition 0.2.0 - 2019-06-02 # Fixed # Compatibility w/ Spacy 2.1.x Added # Minor sentence segmentation improvements Minor improvements in PoS tagging 0.1.0 - 2019-01-04 # Added # Lemmatization support using lemmy Rule based lemmatizer Multi-task CNN-based dependency parser Changed # Support for spaCy 2.x Using the UD Hungarian corpus for the whole training process 0.0.1 - 2017-06-11 # Added # Experimental support for spaCy 1.x PoS Tagger model with word vectors trained on an unreleased automatically transcribed Szeged Korpusz version","title":"Changelog"},{"location":"models/changelog_lg/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"models/changelog_lg/#350","text":"","title":"3.5.0"},{"location":"models/changelog_lg/#changed","text":"spaCy 3.5.x compatibility","title":"Changed"},{"location":"models/changelog_lg/#344","text":"","title":"3.4.4"},{"location":"models/changelog_lg/#fixed","text":"Fixed dependencies of lemmatizer components","title":"Fixed"},{"location":"models/changelog_lg/#343","text":"","title":"3.4.3"},{"location":"models/changelog_lg/#fixed_1","text":"Improved hyperparameters on dependency parsing","title":"Fixed"},{"location":"models/changelog_lg/#342","text":"","title":"3.4.2"},{"location":"models/changelog_lg/#changed_1","text":"Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( GitHub Changelog ) Using the v3 version on Szeged-Corpus ( GitHub Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer","title":"Changed"},{"location":"models/changelog_lg/#341","text":"","title":"3.4.1"},{"location":"models/changelog_lg/#changed_2","text":"Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma","title":"Changed"},{"location":"models/changelog_lg/#340","text":"","title":"3.4.0"},{"location":"models/changelog_lg/#changed_3","text":"spaCy 3.4.x compatibility improved tagging performance","title":"Changed"},{"location":"models/changelog_lg/#331","text":"","title":"3.3.1"},{"location":"models/changelog_lg/#added","text":"Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline","title":"Added"},{"location":"models/changelog_lg/#330","text":"","title":"3.3.0"},{"location":"models/changelog_lg/#changed_4","text":"Replaced Lemmy lemmatizer w/ edit tree lemmatizer","title":"Changed"},{"location":"models/changelog_lg/#322","text":"","title":"3.2.2"},{"location":"models/changelog_lg/#changed_5","text":"Replaced static word vectors w/ char n-gram based floret ones Added multistep training to mitigate non-deterministic training behaviour","title":"Changed"},{"location":"models/changelog_lg/#321","text":"","title":"3.2.1"},{"location":"models/changelog_lg/#changed_6","text":"Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention","title":"Changed"},{"location":"models/changelog_lg/#042","text":"","title":"0.4.2"},{"location":"models/changelog_lg/#fixed_2","text":"Better integration of the lemmatizer Updated the project's documentation","title":"Fixed"},{"location":"models/changelog_lg/#041","text":"","title":"0.4.1"},{"location":"models/changelog_lg/#added_1","text":"","title":"Added"},{"location":"models/changelog_lg/#changed_7","text":"NER model is built on NerKor and SzegedNER Improved lemmatization for numbers and sentence starting tokens Improved lemmatization by using the whole Szeged Corpus Improved PoS tagging by pretraining on a silver standard corpora Improved Dependency parser by using pretraining on silver standard corpora Improved sentence splitter by using the multitask neural model","title":"Changed"},{"location":"models/changelog_lg/#fixed_3","text":"Compatibility w/ Spacy 3.x","title":"Fixed"},{"location":"models/changelog_lg/#031-2019-10-03","text":"","title":"0.3.1 - 2019-10-03"},{"location":"models/changelog_lg/#fixed_4","text":"Compatibility w/ Spacy 2.2.x","title":"Fixed"},{"location":"models/changelog_lg/#030-2019-09-26","text":"","title":"0.3.0 - 2019-09-26"},{"location":"models/changelog_lg/#added_2","text":"Named Entity Recognition","title":"Added"},{"location":"models/changelog_lg/#020-2019-06-02","text":"","title":"0.2.0 - 2019-06-02"},{"location":"models/changelog_lg/#fixed_5","text":"Compatibility w/ Spacy 2.1.x","title":"Fixed"},{"location":"models/changelog_lg/#added_3","text":"Minor sentence segmentation improvements Minor improvements in PoS tagging","title":"Added"},{"location":"models/changelog_lg/#010-2019-01-04","text":"","title":"0.1.0 - 2019-01-04"},{"location":"models/changelog_lg/#added_4","text":"Lemmatization support using lemmy Rule based lemmatizer Multi-task CNN-based dependency parser","title":"Added"},{"location":"models/changelog_lg/#changed_8","text":"Support for spaCy 2.x Using the UD Hungarian corpus for the whole training process","title":"Changed"},{"location":"models/changelog_lg/#001-2017-06-11","text":"","title":"0.0.1 - 2017-06-11"},{"location":"models/changelog_lg/#added_5","text":"Experimental support for spaCy 1.x PoS Tagger model with word vectors trained on an unreleased automatically transcribed Szeged Korpusz version","title":"Added"},{"location":"models/changelog_md/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 3.5.0 # Changed # spaCy 3.5.x compatibility 3.4.2 # Fixed # Fixed dependencies of lemmatizer components 3.4.1 - 2022-10-07 # Initial release # Added medium model, with medium (100d) vectors based on Webcorpus 2.0 Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( GitHub Changelog ) Using the v3 version on Szeged-Corpus ( GitHub Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer","title":"Changelog"},{"location":"models/changelog_md/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"models/changelog_md/#350","text":"","title":"3.5.0"},{"location":"models/changelog_md/#changed","text":"spaCy 3.5.x compatibility","title":"Changed"},{"location":"models/changelog_md/#342","text":"","title":"3.4.2"},{"location":"models/changelog_md/#fixed","text":"Fixed dependencies of lemmatizer components","title":"Fixed"},{"location":"models/changelog_md/#341-2022-10-07","text":"","title":"3.4.1 - 2022-10-07"},{"location":"models/changelog_md/#initial-release","text":"Added medium model, with medium (100d) vectors based on Webcorpus 2.0 Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( GitHub Changelog ) Using the v3 version on Szeged-Corpus ( GitHub Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer","title":"Initial release"},{"location":"models/changelog_trf/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 3.4.0 # Changed # Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( GitHub Changelog ) Using the v3 version on Szeged-Corpus ( GitHub Changelog ) spacy 3.4.x compatibility Updated spacy-experimental (including the biaffine parser) dependency 3.2.4 # Changed # Updated dependencies 3.2.3 # Changed # Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma 3.2.2 # Added # Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline 3.2.1 # Changed # Minor improvements in the training pipeline 3.2.0 # Added # Transformer encoder Experimental edit-tree-lemmatizer Experimental biaffine parser Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention","title":"Changelog"},{"location":"models/changelog_trf/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"models/changelog_trf/#340","text":"","title":"3.4.0"},{"location":"models/changelog_trf/#changed","text":"Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( GitHub Changelog ) Using the v3 version on Szeged-Corpus ( GitHub Changelog ) spacy 3.4.x compatibility Updated spacy-experimental (including the biaffine parser) dependency","title":"Changed"},{"location":"models/changelog_trf/#324","text":"","title":"3.2.4"},{"location":"models/changelog_trf/#changed_1","text":"Updated dependencies","title":"Changed"},{"location":"models/changelog_trf/#323","text":"","title":"3.2.3"},{"location":"models/changelog_trf/#changed_2","text":"Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma","title":"Changed"},{"location":"models/changelog_trf/#322","text":"","title":"3.2.2"},{"location":"models/changelog_trf/#added","text":"Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline","title":"Added"},{"location":"models/changelog_trf/#321","text":"","title":"3.2.1"},{"location":"models/changelog_trf/#changed_3","text":"Minor improvements in the training pipeline","title":"Changed"},{"location":"models/changelog_trf/#320","text":"","title":"3.2.0"},{"location":"models/changelog_trf/#added_1","text":"Transformer encoder Experimental edit-tree-lemmatizer Experimental biaffine parser Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention","title":"Added"},{"location":"models/changelog_trf_xl/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 3.4.0 # Initial release # This initial release is the same as the hu_core_news_trf v3.4.0, except he transformer encoder is changed to XLM-RoBERTa","title":"Changelog"},{"location":"models/changelog_trf_xl/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"models/changelog_trf_xl/#340","text":"","title":"3.4.0"},{"location":"models/changelog_trf_xl/#initial-release","text":"This initial release is the same as the hu_core_news_trf v3.4.0, except he transformer encoder is changed to XLM-RoBERTa","title":"Initial release"},{"location":"models/develop_lg/","text":"Model development # Train models # Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all Fine-tune the models # Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file. Publish models # Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Development"},{"location":"models/develop_lg/#model-development","text":"","title":"Model development"},{"location":"models/develop_lg/#train-models","text":"Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all","title":"Train models"},{"location":"models/develop_lg/#fine-tune-the-models","text":"Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file.","title":"Fine-tune the models"},{"location":"models/develop_lg/#publish-models","text":"Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Publish models"},{"location":"models/develop_md/","text":"Model development # Train models # Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all Fine-tune the models # Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file. Publish models # Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Development"},{"location":"models/develop_md/#model-development","text":"","title":"Model development"},{"location":"models/develop_md/#train-models","text":"Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all","title":"Train models"},{"location":"models/develop_md/#fine-tune-the-models","text":"Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file.","title":"Fine-tune the models"},{"location":"models/develop_md/#publish-models","text":"Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Publish models"},{"location":"models/develop_trf/","text":"Model development # Train the pipeline components # Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) To enable full GPU usage install PyTorch: poetry run python -m pip install torch==1.10.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all Fine-tune the models # Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file. Publish models # Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Development"},{"location":"models/develop_trf/#model-development","text":"","title":"Model development"},{"location":"models/develop_trf/#train-the-pipeline-components","text":"Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) To enable full GPU usage install PyTorch: poetry run python -m pip install torch==1.10.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all","title":"Train the pipeline components"},{"location":"models/develop_trf/#fine-tune-the-models","text":"Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file.","title":"Fine-tune the models"},{"location":"models/develop_trf/#publish-models","text":"Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Publish models"},{"location":"models/develop_trf_xl/","text":"Model development # Train the pipeline components # Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) To enable full GPU usage install PyTorch: poetry run python -m pip install torch==1.10.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all Fine-tune the models # Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file. Publish models # Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Development"},{"location":"models/develop_trf_xl/#model-development","text":"","title":"Model development"},{"location":"models/develop_trf_xl/#train-the-pipeline-components","text":"Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) To enable full GPU usage install PyTorch: poetry run python -m pip install torch==1.10.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html Run poetry run pip install -U pip setuptools wheel if these packages are missing or not uptodate Activate the virtual environment poetry shell Fetch datafiles: spacy project assets Build all the models: spacy project run all","title":"Train the pipeline components"},{"location":"models/develop_trf_xl/#fine-tune-the-models","text":"Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file.","title":"Fine-tune the models"},{"location":"models/develop_trf_xl/#publish-models","text":"Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Publish models"},{"location":"models/readme_lg/","text":"hu_core_news_lg model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0","title":"`hu_core_news_lg` model"},{"location":"models/readme_lg/#hu_core_news_lg-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_lg model"},{"location":"models/readme_md/","text":"hu_core_news_md model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0","title":"`hu_core_news_md` model"},{"location":"models/readme_md/#hu_core_news_md-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_md model"},{"location":"models/readme_trf/","text":"hu_core_news_trf model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT .","title":"`hu_core_news_trf` model"},{"location":"models/readme_trf/#hu_core_news_trf-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT .","title":"hu_core_news_trf model"},{"location":"models/readme_trf_xl/","text":"hu_core_news_trf_xl model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by XLM-RoBERTa .","title":"`hu_core_news_trf_xl` model"},{"location":"models/readme_trf_xl/#hu_core_news_trf_xl-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by XLM-RoBERTa .","title":"hu_core_news_trf_xl model"},{"location":"models_gen/","text":"Models overview # We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. hu_core_news_trf_xl is an experimental model built on xlm-roberta-large . It provides the same functionality as the hu_core_news_trf model, however it comes with slightly higher accuracy in the price of significantly increased computational resource usage. We suggest using it with GPU support. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation . Comparison # Models md lg trf trf_xl Embeddings 100d floret 300d floret transformer: huBert transformer: xlm-roberta-large Target hardware CPU CPU GPU GPU Accuracy Resource usage Performance comparison # Models md lg trf trf_xl Latest version 3.5.0 3.5.0 3.4.0 3.4.0 Token F1 99.89 99.89 99.89 99.89 Sentence F1 97.10 97.53 99.33 98.34 PoS Accuracy 96.35 96.34 97.27 98.02 Morph. Accuracy 93.08 93.11 94.20 96.74 Lemma Accuracy 97.39 97.23 98.68 98.94 LAS 74.18 75.48 87.58 86.77 UAS 81.17 82.22 91.57 90.64 NER F1 85.22 85.74 91.27 91.77 Throughput (token/sec) 1651 (CPU) 757 (CPU) 2700 (GPU) 2024 (GPU) Size 127 MB 401 MB 1.67 GB 7.38 GB Memory usage 2.4 GB 3.3 GB 4.8 GB 18 GB","title":"Overview"},{"location":"models_gen/#models-overview","text":"We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. hu_core_news_trf_xl is an experimental model built on xlm-roberta-large . It provides the same functionality as the hu_core_news_trf model, however it comes with slightly higher accuracy in the price of significantly increased computational resource usage. We suggest using it with GPU support. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation .","title":" Models overview"},{"location":"models_gen/#comparison","text":"Models md lg trf trf_xl Embeddings 100d floret 300d floret transformer: huBert transformer: xlm-roberta-large Target hardware CPU CPU GPU GPU Accuracy Resource usage","title":"Comparison"},{"location":"models_gen/#performance-comparison","text":"Models md lg trf trf_xl Latest version 3.5.0 3.5.0 3.4.0 3.4.0 Token F1 99.89 99.89 99.89 99.89 Sentence F1 97.10 97.53 99.33 98.34 PoS Accuracy 96.35 96.34 97.27 98.02 Morph. Accuracy 93.08 93.11 94.20 96.74 Lemma Accuracy 97.39 97.23 98.68 98.94 LAS 74.18 75.48 87.58 86.77 UAS 81.17 82.22 91.57 90.64 NER F1 85.22 85.74 91.27 91.77 Throughput (token/sec) 1651 (CPU) 757 (CPU) 2700 (GPU) 2024 (GPU) Size 127 MB 401 MB 1.67 GB 7.38 GB Memory usage 2.4 GB 3.3 GB 4.8 GB 18 GB","title":"Performance comparison"},{"location":"models_gen/index_lg/","text":"hu_core_news_lg model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0 Details # Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_lg Version 3.5.0 spaCy >=3.5.0,<3.6.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (300 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) Webcorpuswiki word2vec model (Gy\u00f6rgy Orosz) License cc-by-sa-4.0 Author SzegedAI, MILAB Label Scheme # View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` | Accuracy # Type Score TOKEN_ACC 99.99 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.00 SENTS_R 98.00 SENTS_F 98.00 TAG_ACC 96.76 POS_ACC 96.62 MORPH_ACC 93.54 MORPH_MICRO_P 96.68 MORPH_MICRO_R 96.24 MORPH_MICRO_F 96.46 LEMMA_ACC 97.33 DEP_UAS 81.87 DEP_LAS 74.99 ENTS_P 86.26 ENTS_R 85.76 ENTS_F 86.01","title":"Overview"},{"location":"models_gen/index_lg/#hu_core_news_lg-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_lg model"},{"location":"models_gen/index_lg/#details","text":"Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_lg Version 3.5.0 spaCy >=3.5.0,<3.6.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (300 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) Webcorpuswiki word2vec model (Gy\u00f6rgy Orosz) License cc-by-sa-4.0 Author SzegedAI, MILAB","title":"Details"},{"location":"models_gen/index_lg/#label-scheme","text":"View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` |","title":"Label Scheme"},{"location":"models_gen/index_lg/#accuracy","text":"Type Score TOKEN_ACC 99.99 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.00 SENTS_R 98.00 SENTS_F 98.00 TAG_ACC 96.76 POS_ACC 96.62 MORPH_ACC 93.54 MORPH_MICRO_P 96.68 MORPH_MICRO_R 96.24 MORPH_MICRO_F 96.46 LEMMA_ACC 97.33 DEP_UAS 81.87 DEP_LAS 74.99 ENTS_P 86.26 ENTS_R 85.76 ENTS_F 86.01","title":"Accuracy"},{"location":"models_gen/index_md/","text":"hu_core_news_md model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0 Details # Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_md Version 3.5.0 spaCy >=3.5.0,<3.6.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (100 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) License cc-by-sa-4.0 Author SzegedAI, MILAB Label Scheme # View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` | Accuracy # Type Score TOKEN_ACC 99.99 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 97.10 SENTS_R 97.10 SENTS_F 97.10 TAG_ACC 96.49 POS_ACC 96.35 MORPH_ACC 93.08 MORPH_MICRO_P 96.72 MORPH_MICRO_R 95.96 MORPH_MICRO_F 96.34 LEMMA_ACC 97.39 DEP_UAS 81.17 DEP_LAS 74.18 ENTS_P 85.81 ENTS_R 84.63 ENTS_F 85.22","title":"Overview"},{"location":"models_gen/index_md/#hu_core_news_md-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_md model"},{"location":"models_gen/index_md/#details","text":"Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_md Version 3.5.0 spaCy >=3.5.0,<3.6.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (100 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) License cc-by-sa-4.0 Author SzegedAI, MILAB","title":"Details"},{"location":"models_gen/index_md/#label-scheme","text":"View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` |","title":"Label Scheme"},{"location":"models_gen/index_md/#accuracy","text":"Type Score TOKEN_ACC 99.99 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 97.10 SENTS_R 97.10 SENTS_F 97.10 TAG_ACC 96.49 POS_ACC 96.35 MORPH_ACC 93.08 MORPH_MICRO_P 96.72 MORPH_MICRO_R 95.96 MORPH_MICRO_F 96.34 LEMMA_ACC 97.39 DEP_UAS 81.17 DEP_LAS 74.18 ENTS_P 85.81 ENTS_R 84.63 ENTS_F 85.22","title":"Accuracy"},{"location":"models_gen/index_trf/","text":"hu_core_news_trf model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT . Details # Hungarian transformer pipeline (huBert) for HuSpaCy. Components: transformer, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_trf Version 3.4.0 spaCy >=3.4.0,<3.5.0 Default Pipeline transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Components transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Vectors 0 keys, 0 unique vectors (0 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) huBERT base model (cased) (D\u00e1vid M\u00e1rk Nemeskey (SZTAKI-HLT)) License cc-by-sa-4.0 Author SzegedAI, MILAB Label Scheme # View label scheme (1217 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`experimental_arc_labeler`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `amod:attlvc`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `discourse`, `dislocated`, `flat:name`, `goeswith`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:attlvc`, `nmod:obl`, `nsubj`, `nsubj:lvc`, `nummod`, `obj`, `obj:lvc`, `obl`, `obl:lvc`, `orphan`, `parataxis`, `punct`, `vocative`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` | Accuracy # Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 99.11 SENTS_R 99.55 SENTS_F 99.33 TAG_ACC 97.31 POS_ACC 97.27 MORPH_ACC 94.20 MORPH_MICRO_P 97.98 MORPH_MICRO_R 97.02 MORPH_MICRO_F 97.50 LEMMA_ACC 98.68 BOUND_DEP_LAS 87.58 BOUND_DEP_UAS 91.57 DEP_UAS 91.57 DEP_LAS 87.58 ENTS_P 90.62 ENTS_R 91.93 ENTS_F 91.27","title":"Overview"},{"location":"models_gen/index_trf/#hu_core_news_trf-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT .","title":"hu_core_news_trf model"},{"location":"models_gen/index_trf/#details","text":"Hungarian transformer pipeline (huBert) for HuSpaCy. Components: transformer, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_trf Version 3.4.0 spaCy >=3.4.0,<3.5.0 Default Pipeline transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Components transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Vectors 0 keys, 0 unique vectors (0 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) huBERT base model (cased) (D\u00e1vid M\u00e1rk Nemeskey (SZTAKI-HLT)) License cc-by-sa-4.0 Author SzegedAI, MILAB","title":"Details"},{"location":"models_gen/index_trf/#label-scheme","text":"View label scheme (1217 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`experimental_arc_labeler`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `amod:attlvc`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `discourse`, `dislocated`, `flat:name`, `goeswith`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:attlvc`, `nmod:obl`, `nsubj`, `nsubj:lvc`, `nummod`, `obj`, `obj:lvc`, `obl`, `obl:lvc`, `orphan`, `parataxis`, `punct`, `vocative`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` |","title":"Label Scheme"},{"location":"models_gen/index_trf/#accuracy","text":"Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 99.11 SENTS_R 99.55 SENTS_F 99.33 TAG_ACC 97.31 POS_ACC 97.27 MORPH_ACC 94.20 MORPH_MICRO_P 97.98 MORPH_MICRO_R 97.02 MORPH_MICRO_F 97.50 LEMMA_ACC 98.68 BOUND_DEP_LAS 87.58 BOUND_DEP_UAS 91.57 DEP_UAS 91.57 DEP_LAS 87.58 ENTS_P 90.62 ENTS_R 91.93 ENTS_F 91.27","title":"Accuracy"},{"location":"models_gen/index_trf_xl/","text":"hu_core_news_trf_xl model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by XLM-RoBERTa . Details # Hungarian transformer pipeline (XLM-RoBERTa) for HuSpaCy. Components: transformer, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_trf_xl Version 3.4.0 spaCy >=3.4.0,<3.5.0 Default Pipeline transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Components transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Vectors 0 keys, 0 unique vectors (0 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) huBERT base model (cased) (D\u00e1vid M\u00e1rk Nemeskey (SZTAKI-HLT)) License cc-by-sa-4.0 Author SzegedAI, MILAB Label Scheme # View label scheme (1217 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`experimental_arc_labeler`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `amod:attlvc`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `discourse`, `dislocated`, `flat:name`, `goeswith`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:attlvc`, `nmod:obl`, `nsubj`, `nsubj:lvc`, `nummod`, `obj`, `obj:lvc`, `obl`, `obl:lvc`, `orphan`, `parataxis`, `punct`, `vocative`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` | Accuracy # Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.01 SENTS_R 98.66 SENTS_F 98.34 TAG_ACC 97.99 POS_ACC 98.02 MORPH_ACC 96.74 MORPH_MICRO_P 99.04 MORPH_MICRO_R 98.42 MORPH_MICRO_F 98.73 LEMMA_ACC 98.94 BOUND_DEP_LAS 86.86 BOUND_DEP_UAS 90.74 DEP_UAS 90.64 DEP_LAS 86.77 ENTS_P 91.31 ENTS_R 92.23 ENTS_F 91.77","title":"Overview"},{"location":"models_gen/index_trf_xl/#hu_core_news_trf_xl-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by XLM-RoBERTa .","title":"hu_core_news_trf_xl model"},{"location":"models_gen/index_trf_xl/#details","text":"Hungarian transformer pipeline (XLM-RoBERTa) for HuSpaCy. Components: transformer, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_trf_xl Version 3.4.0 spaCy >=3.4.0,<3.5.0 Default Pipeline transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Components transformer , senter , tagger , morphologizer , lookup_lemmatizer , trainable_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Vectors 0 keys, 0 unique vectors (0 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) huBERT base model (cased) (D\u00e1vid M\u00e1rk Nemeskey (SZTAKI-HLT)) License cc-by-sa-4.0 Author SzegedAI, MILAB","title":"Details"},{"location":"models_gen/index_trf_xl/#label-scheme","text":"View label scheme (1217 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`experimental_arc_labeler`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `amod:attlvc`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `discourse`, `dislocated`, `flat:name`, `goeswith`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:attlvc`, `nmod:obl`, `nsubj`, `nsubj:lvc`, `nummod`, `obj`, `obj:lvc`, `obl`, `obl:lvc`, `orphan`, `parataxis`, `punct`, `vocative`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` |","title":"Label Scheme"},{"location":"models_gen/index_trf_xl/#accuracy","text":"Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.01 SENTS_R 98.66 SENTS_F 98.34 TAG_ACC 97.99 POS_ACC 98.02 MORPH_ACC 96.74 MORPH_MICRO_P 99.04 MORPH_MICRO_R 98.42 MORPH_MICRO_F 98.73 LEMMA_ACC 98.94 BOUND_DEP_LAS 86.86 BOUND_DEP_UAS 90.74 DEP_UAS 90.64 DEP_LAS 86.77 ENTS_P 91.31 ENTS_R 92.23 ENTS_F 91.77","title":"Accuracy"},{"location":"models_gen/install_lg/","text":"You can either install the model through pip : Installation # # Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.5.0) $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/v3.5.0/hu_core_news_lg-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_lg\" ) # Install a model with a specific version such as the latest one (3.5.0) huspacy . download ( \"hu_core_news_lg\" , \"3.5.0\" ) Available model versions: 3.2.1 , 3.2.2 , 3.3.0 , 3.3.1 , 3.4.0 , 3.4.1 , 3.4.2 , 3.4.3 , 3.4.4 , 3.5.0","title":"Installation"},{"location":"models_gen/install_lg/#installation","text":"# Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.5.0) $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/v3.5.0/hu_core_news_lg-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_lg\" ) # Install a model with a specific version such as the latest one (3.5.0) huspacy . download ( \"hu_core_news_lg\" , \"3.5.0\" ) Available model versions: 3.2.1 , 3.2.2 , 3.3.0 , 3.3.1 , 3.4.0 , 3.4.1 , 3.4.2 , 3.4.3 , 3.4.4 , 3.5.0","title":"Installation"},{"location":"models_gen/install_md/","text":"You can either install the model through pip : Installation # # Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/main/hu_core_news_md-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.5.0) $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/v3.5.0/hu_core_news_md-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_md\" ) # Install a model with a specific version such as the latest one (3.5.0) huspacy . download ( \"hu_core_news_md\" , \"3.5.0\" ) Available model versions: 3.4.1 , 3.4.2 , 3.5.0","title":"Installation"},{"location":"models_gen/install_md/#installation","text":"# Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/main/hu_core_news_md-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.5.0) $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/v3.5.0/hu_core_news_md-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_md\" ) # Install a model with a specific version such as the latest one (3.5.0) huspacy . download ( \"hu_core_news_md\" , \"3.5.0\" ) Available model versions: 3.4.1 , 3.4.2 , 3.5.0","title":"Installation"},{"location":"models_gen/install_trf/","text":"You can either install the model through pip : Installation # # Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.0) $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/v3.4.0/hu_core_news_trf-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_trf\" ) # Install a model with a specific version such as the latest one (3.4.0) huspacy . download ( \"hu_core_news_trf\" , \"3.4.0\" ) Available model versions: 3.2.0 , 3.2.1 , 3.2.2 , 3.2.3 , 3.2.4 , 3.4.0","title":"Installation"},{"location":"models_gen/install_trf/#installation","text":"# Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.0) $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/v3.4.0/hu_core_news_trf-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_trf\" ) # Install a model with a specific version such as the latest one (3.4.0) huspacy . download ( \"hu_core_news_trf\" , \"3.4.0\" ) Available model versions: 3.2.0 , 3.2.1 , 3.2.2 , 3.2.3 , 3.2.4 , 3.4.0","title":"Installation"},{"location":"models_gen/install_trf_xl/","text":"You can either install the model through pip : Installation # # Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_trf_xl/resolve/main/hu_core_news_trf_xl-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.0) $ pip install https://huggingface.co/huspacy/hu_core_news_trf_xl/resolve/v3.4.0/hu_core_news_trf_xl-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_trf_xl\" ) # Install a model with a specific version such as the latest one (3.4.0) huspacy . download ( \"hu_core_news_trf_xl\" , \"3.4.0\" ) Available model versions: 3.4.0","title":"Installation"},{"location":"models_gen/install_trf_xl/#installation","text":"# Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_trf_xl/resolve/main/hu_core_news_trf_xl-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.0) $ pip install https://huggingface.co/huspacy/hu_core_news_trf_xl/resolve/v3.4.0/hu_core_news_trf_xl-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_trf_xl\" ) # Install a model with a specific version such as the latest one (3.4.0) huspacy . download ( \"hu_core_news_trf_xl\" , \"3.4.0\" ) Available model versions: 3.4.0","title":"Installation"},{"location":"recipes/faq/","text":"Frequently asked questions # HuSpaCy is slow, what can I do? # Not it's not. :) You have several options to speed up your processing pipeline. If accuracy is not crucial use a smaller model: md < lg < trf Utilize GPU: use the following directive before loading the model (and make sure all GPU related dependencies are installer). spacy . prefer_gpu () Batch processing of multiple documents are always faster. Use the Language.pipe() method, and increase the batch_size if needed: texts = [ \"first doc\" , \"second doc\" ] docs = nlp . pipe ( texts , batch_size = 1024 ) ``` 4. Disable components not needed . When mining documents for named entities , the default model unnecessarily computes lemmata , PoS tags and dependency trees . You can easily disable them during model loading ( c . f . [ ` spacy . load () ` ]( https : // spacy . io / api / top - level / #spacy.load) or [`huspacy.load()`](/reference/huspacy/__init__/#huspacy.load)) or using [`Language.disable_pipe()`](https://spacy.io/api/language/#disable_pipe) ``` python nlp = huspacy . load ( \"hu_core_news_lg\" , disable = [ \"tagger\" ]) or nlp . disable_pipe ( \"tagger\" ) Models require too much RAM, how can I reduce their memory footprint? # HuSpaCy models use distinct language models for almost each of their components. This architecture decision enables the model achieving higher precision compromising on increased memory usage. However, if you only need certain components, others can be disabled as shown above. The NER model usually confuses ORG and LOC entities, why is that? # The underlying model has been trained on corpora following the \"tag-for-meaning\" guideline which yields context dependent labels. For example referring to \"Budapest\" in the context of the Hungarian government should yield the ORG label while in other contexts it should be tagged as a LOC . Can I use HuSpaCy for my commercial software? # Yes, the tool is licensed under Apache 2.0 license, while all the models are CC BY-SA 4.0 .","title":"FAQ"},{"location":"recipes/faq/#frequently-asked-questions","text":"","title":" Frequently asked questions"},{"location":"recipes/faq/#huspacy-is-slow-what-can-i-do","text":"Not it's not. :) You have several options to speed up your processing pipeline. If accuracy is not crucial use a smaller model: md < lg < trf Utilize GPU: use the following directive before loading the model (and make sure all GPU related dependencies are installer). spacy . prefer_gpu () Batch processing of multiple documents are always faster. Use the Language.pipe() method, and increase the batch_size if needed: texts = [ \"first doc\" , \"second doc\" ] docs = nlp . pipe ( texts , batch_size = 1024 ) ``` 4. Disable components not needed . When mining documents for named entities , the default model unnecessarily computes lemmata , PoS tags and dependency trees . You can easily disable them during model loading ( c . f . [ ` spacy . load () ` ]( https : // spacy . io / api / top - level / #spacy.load) or [`huspacy.load()`](/reference/huspacy/__init__/#huspacy.load)) or using [`Language.disable_pipe()`](https://spacy.io/api/language/#disable_pipe) ``` python nlp = huspacy . load ( \"hu_core_news_lg\" , disable = [ \"tagger\" ]) or nlp . disable_pipe ( \"tagger\" )","title":"HuSpaCy is slow, what can I do?"},{"location":"recipes/faq/#models-require-too-much-ram-how-can-i-reduce-their-memory-footprint","text":"HuSpaCy models use distinct language models for almost each of their components. This architecture decision enables the model achieving higher precision compromising on increased memory usage. However, if you only need certain components, others can be disabled as shown above.","title":"Models require too much RAM, how can I reduce their memory footprint?"},{"location":"recipes/faq/#the-ner-model-usually-confuses-org-and-loc-entities-why-is-that","text":"The underlying model has been trained on corpora following the \"tag-for-meaning\" guideline which yields context dependent labels. For example referring to \"Budapest\" in the context of the Hungarian government should yield the ORG label while in other contexts it should be tagged as a LOC .","title":"The NER model usually confuses ORG and LOC entities, why is that?"},{"location":"recipes/faq/#can-i-use-huspacy-for-my-commercial-software","text":"Yes, the tool is licensed under Apache 2.0 license, while all the models are CC BY-SA 4.0 .","title":"Can I use HuSpaCy for my commercial software?"},{"location":"recipes/nerpp/","text":"Extended entity recognition # There can be cases when the default four-type NER does not suffice, one needs a more fine-grained entity type system. Attila Novak developed a corpus and an entity recognition system consisting more than 30 entity types. We provide easy integration with his tool. Load # Loading the model can be achieved by adding the nerpp component. import huspacy.integrations nlp . add_pipe ( \"nerpp\" ) Please note that using this component requires transformers , torch and spacy-alignments to be installed. Installing HuSpaCy with trf extras installs all these dependencies: pip install huspacy[trf] Get entity annotations # The nerpp components stores entities as spans on the document under the \"ents\" key: doc = nlp ( \"A Ford Focus egy als\u00f3-k\u00f6z\u00e9pkateg\u00f3ri\u00e1s csal\u00e1di aut\u00f3\" ) print ( doc . spans [ \"ents\" ]) print ( doc . spans [ \"ents\" ][ 0 ] . label_ ) gives [Ford Focus] CAR Citing # If you use this component, please cite: @InProceedings { novak-novak:2022:LREC , author = {Nov{\\'{a}}k, Attila and Nov{\\'{a}}k, Borb{\\'{a}}la} , title = {NerKor+Cars-OntoNotes++} , booktitle = {Proceedings of the 13th Language Resources and Evaluation Conference (LREC 2022)} , month = {June} , year = {2022} , address = {Marseille, France} , publisher = {European Language Resources Association} , pages = {1907--1916} , url = {http://www.lrec-conf.org/proceedings/lrec2022/pdf/2022.lrec-1.203.pdf} }","title":"Extended entity recognition"},{"location":"recipes/nerpp/#extended-entity-recognition","text":"There can be cases when the default four-type NER does not suffice, one needs a more fine-grained entity type system. Attila Novak developed a corpus and an entity recognition system consisting more than 30 entity types. We provide easy integration with his tool.","title":" Extended entity recognition"},{"location":"recipes/nerpp/#load","text":"Loading the model can be achieved by adding the nerpp component. import huspacy.integrations nlp . add_pipe ( \"nerpp\" ) Please note that using this component requires transformers , torch and spacy-alignments to be installed. Installing HuSpaCy with trf extras installs all these dependencies: pip install huspacy[trf]","title":"Load"},{"location":"recipes/nerpp/#get-entity-annotations","text":"The nerpp components stores entities as spans on the document under the \"ents\" key: doc = nlp ( \"A Ford Focus egy als\u00f3-k\u00f6z\u00e9pkateg\u00f3ri\u00e1s csal\u00e1di aut\u00f3\" ) print ( doc . spans [ \"ents\" ]) print ( doc . spans [ \"ents\" ][ 0 ] . label_ ) gives [Ford Focus] CAR","title":"Get entity annotations"},{"location":"recipes/nerpp/#citing","text":"If you use this component, please cite: @InProceedings { novak-novak:2022:LREC , author = {Nov{\\'{a}}k, Attila and Nov{\\'{a}}k, Borb{\\'{a}}la} , title = {NerKor+Cars-OntoNotes++} , booktitle = {Proceedings of the 13th Language Resources and Evaluation Conference (LREC 2022)} , month = {June} , year = {2022} , address = {Marseille, France} , publisher = {European Language Resources Association} , pages = {1907--1916} , url = {http://www.lrec-conf.org/proceedings/lrec2022/pdf/2022.lrec-1.203.pdf} }","title":"Citing"},{"location":"recipes/roman_nums/","text":"Converting Roman numbers # In case you want to use the arabic value of roman numbers, you can use one of our optional pipeline steps. In order to process numbers, roman_to_arabic module should be added to the pipeline: import huspacy import huspacy.extra nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"roman_to_arabic\" ) Then doc = nlp ( \"A IV. ker\u00fclet \u00dajpest.\" ) print ( doc [ 1 ] . lemma_ ) should yield \"4.\"","title":"Roman numbers"},{"location":"recipes/roman_nums/#converting-roman-numbers","text":"In case you want to use the arabic value of roman numbers, you can use one of our optional pipeline steps. In order to process numbers, roman_to_arabic module should be added to the pipeline: import huspacy import huspacy.extra nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"roman_to_arabic\" ) Then doc = nlp ( \"A IV. ker\u00fclet \u00dajpest.\" ) print ( doc [ 1 ] . lemma_ ) should yield \"4.\"","title":" Converting Roman numbers"},{"location":"recipes/sentencizer/","text":"Rule-based sentencizer # All models come with a machine learning based sentencizer. If by any reason, you want to rely on a rule-base one, HuSpacy got your back as it contains a classic sentence boundary detector component. In order to use it, you should replace the senter pipeline step: import huspacy import huspacy.extra nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . replace_pipe ( \"senter\" , \"hun_sentencizer\" )","title":"Rule-base sentencizer"},{"location":"recipes/sentencizer/#rule-based-sentencizer","text":"All models come with a machine learning based sentencizer. If by any reason, you want to rely on a rule-base one, HuSpacy got your back as it contains a classic sentence boundary detector component. In order to use it, you should replace the senter pipeline step: import huspacy import huspacy.extra nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . replace_pipe ( \"senter\" , \"hun_sentencizer\" )","title":" Rule-based sentencizer"},{"location":"recipes/sentiment/","text":"Matching sentiment lexicons # HuSpaCy is shipped with two sentiment lexicons. The component loads up a lexicon and match words with it. The module can use two sentiment lexicons, the default one is the PolText Lab's resource while one can also load the PrecoSenti lexicon. Load the component # Load the default sentiment lexicon ( poltext ) import huspacy.integrations nlp . add_pipe ( \"sentiment_lexicon\" ) Or you can specify the lexicon to be used by passing addition configuration during initialization nlp.add_pipe(\"sentiment_lexicon\", config={\"lexicon_id\": \"precognox\"}) . Then you can start discovering sentiment values of spans and tokens: doc = nlp ( \"Ez szuper j\u00f3\" ) print ( doc . spans [ \"sentiment\" ]) # [\"szuper\", \"j\u00f3\"] print ( doc [ 1 ] . _ . sentiment ) # 'POS' print ( doc [ 2 ] . _ . sentiment ) # 'POS'","title":"Sentiment lexicons"},{"location":"recipes/sentiment/#matching-sentiment-lexicons","text":"HuSpaCy is shipped with two sentiment lexicons. The component loads up a lexicon and match words with it. The module can use two sentiment lexicons, the default one is the PolText Lab's resource while one can also load the PrecoSenti lexicon.","title":" Matching sentiment lexicons"},{"location":"recipes/sentiment/#load-the-component","text":"Load the default sentiment lexicon ( poltext ) import huspacy.integrations nlp . add_pipe ( \"sentiment_lexicon\" ) Or you can specify the lexicon to be used by passing addition configuration during initialization nlp.add_pipe(\"sentiment_lexicon\", config={\"lexicon_id\": \"precognox\"}) . Then you can start discovering sentiment values of spans and tokens: doc = nlp ( \"Ez szuper j\u00f3\" ) print ( doc . spans [ \"sentiment\" ]) # [\"szuper\", \"j\u00f3\"] print ( doc [ 1 ] . _ . sentiment ) # 'POS' print ( doc [ 2 ] . _ . sentiment ) # 'POS'","title":"Load the component"},{"location":"reference/huspacy/__init__/","text":"download # download ( model_name = __DEFAULT_MODEL , model_version = __DEFAULT_VERSION ) Downloads a HuSpaCy model. Parameters: Name Type Description Default model_name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL model_version str model version, if not provided it defaults to the latest version (\"main\") __DEFAULT_VERSION Returns: Type Description None None get_valid_models # get_valid_models ( spacy_version = None ) Returns valid model names and versions for the given spacy version Parameters: Name Type Description Default spacy_version Optional [ str ] spaCy version to compare with None Returns: Type Description Dict [ str , List [ str ]] Dict[str, List[str]]: Valid model names and associated versions load # load ( name = __DEFAULT_MODEL , vocab = True , disable = None , exclude = None , config = None ) Loads a HuSpaCy model. Parameters: Name Type Description Default name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL vocab Vocab A Vocab object. If True, a vocab is created. True disable Iterable [ str ] Names of pipeline components to disable. Disabled pipes will be loaded, but they won't be run unless you explicitly enable them by calling nlp.enable_pipe. None exclude Iterable [ str ] Names of pipeline components to exclude. Excluded components won't be loaded. None config Union [ Dict [ str , Any ], Config ] Config overrides as nested dict or dict None Returns: Name Type Description Language Language The loaded nlp object","title":"huspacy"},{"location":"reference/huspacy/__init__/#huspacy.download","text":"download ( model_name = __DEFAULT_MODEL , model_version = __DEFAULT_VERSION ) Downloads a HuSpaCy model. Parameters: Name Type Description Default model_name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL model_version str model version, if not provided it defaults to the latest version (\"main\") __DEFAULT_VERSION Returns: Type Description None None","title":"download()"},{"location":"reference/huspacy/__init__/#huspacy.get_valid_models","text":"get_valid_models ( spacy_version = None ) Returns valid model names and versions for the given spacy version Parameters: Name Type Description Default spacy_version Optional [ str ] spaCy version to compare with None Returns: Type Description Dict [ str , List [ str ]] Dict[str, List[str]]: Valid model names and associated versions","title":"get_valid_models()"},{"location":"reference/huspacy/__init__/#huspacy.load","text":"load ( name = __DEFAULT_MODEL , vocab = True , disable = None , exclude = None , config = None ) Loads a HuSpaCy model. Parameters: Name Type Description Default name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL vocab Vocab A Vocab object. If True, a vocab is created. True disable Iterable [ str ] Names of pipeline components to disable. Disabled pipes will be loaded, but they won't be run unless you explicitly enable them by calling nlp.enable_pipe. None exclude Iterable [ str ] Names of pipeline components to exclude. Excluded components won't be loaded. None config Union [ Dict [ str , Any ], Config ] Config overrides as nested dict or dict None Returns: Name Type Description Language Language The loaded nlp object","title":"load()"},{"location":"reference/huspacy/utils/","text":"run_command # run_command ( cmd_list , * , stdin = None , capture = False ) Run a command on the command line as a subprocess. If the subprocess returns a non-zero exit code, a system exit is performed. command (List[str]): The command as a list of strings. stdin (Optional[Any]): stdin to read from or None. capture (bool): Whether to capture the output and errors. If False, the stdout and stderr will not be redirected, and if there's an error, sys.exit will be called with the return code. You should use capture=False when you want to turn over execution to the command, and capture=True when you want to run the command more like a function. RETURNS (Optional[CompletedProcess]): The process object.","title":"Utils"},{"location":"reference/huspacy/utils/#huspacy.utils.run_command","text":"run_command ( cmd_list , * , stdin = None , capture = False ) Run a command on the command line as a subprocess. If the subprocess returns a non-zero exit code, a system exit is performed. command (List[str]): The command as a list of strings. stdin (Optional[Any]): stdin to read from or None. capture (bool): Whether to capture the output and errors. If False, the stdout and stderr will not be redirected, and if there's an error, sys.exit will be called with the return code. You should use capture=False when you want to turn over execution to the command, and capture=True when you want to run the command more like a function. RETURNS (Optional[CompletedProcess]): The process object.","title":"run_command()"},{"location":"reference/huspacy/components/__init__/","text":"","title":"  init  "},{"location":"reference/huspacy/components/edit_tree_lemmatizer/","text":"DEFAULT_EDIT_TREE_LEMMATIZER_MODEL module-attribute # DEFAULT_EDIT_TREE_LEMMATIZER_MODEL = Config () . from_str ( default_model_config )[ 'model' ] default_model_config module-attribute # default_model_config = ' \\n [model] \\n @architectures = \"spacy.Tagger.v2\" \\n\\n [model.tok2vec] \\n @architectures = \"spacy.HashEmbedCNN.v2\" \\n pretrained_vectors = null \\n width = 96 \\n depth = 4 \\n embed_size = 2000 \\n window_size = 1 \\n maxout_pieces = 3 \\n subword_features = true \\n ' EditTreeLemmatizer # Bases: TrainablePipe Lemmatizer that lemmatizes each word using a predicted edit tree. backoff instance-attribute # backoff = backoff cfg instance-attribute # cfg : Dict [ str , Any ] = { 'labels' : []} min_tree_freq instance-attribute # min_tree_freq = min_tree_freq model instance-attribute # model = model name instance-attribute # name = name overwrite instance-attribute # overwrite = overwrite overwrite_labels instance-attribute # overwrite_labels = overwrite_labels scorer instance-attribute # scorer = scorer top_k instance-attribute # top_k = top_k tree2label instance-attribute # tree2label : Dict [ int , int ] = {} trees instance-attribute # trees = EditTrees ( self . vocab . strings ) vocab instance-attribute # vocab = vocab from_bytes # from_bytes ( bytes_data , * , exclude = tuple ()) from_disk # from_disk ( path , exclude = tuple ()) get_loss # get_loss ( examples , scores ) hide_labels property # hide_labels () initialize # initialize ( get_examples , * , nlp = None , labels = None ) label_data property # label_data () labels property # labels () Returns the labels currently added to the component. predict # predict ( docs ) set_annotations # set_annotations ( docs , batch_tree_ids ) to_bytes # to_bytes ( * , exclude = tuple ()) to_disk # to_disk ( path , exclude = tuple ()) debug # debug ( * args ) make_edit_tree_lemmatizer # make_edit_tree_lemmatizer ( nlp , name , model , backoff , min_tree_freq , overwrite , top_k , overwrite_labels , scorer ) Construct an EditTreeLemmatizer component.","title":"edit_tree_lemmatizer"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.DEFAULT_EDIT_TREE_LEMMATIZER_MODEL","text":"DEFAULT_EDIT_TREE_LEMMATIZER_MODEL = Config () . from_str ( default_model_config )[ 'model' ]","title":"DEFAULT_EDIT_TREE_LEMMATIZER_MODEL"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.default_model_config","text":"default_model_config = ' \\n [model] \\n @architectures = \"spacy.Tagger.v2\" \\n\\n [model.tok2vec] \\n @architectures = \"spacy.HashEmbedCNN.v2\" \\n pretrained_vectors = null \\n width = 96 \\n depth = 4 \\n embed_size = 2000 \\n window_size = 1 \\n maxout_pieces = 3 \\n subword_features = true \\n '","title":"default_model_config"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer","text":"Bases: TrainablePipe Lemmatizer that lemmatizes each word using a predicted edit tree.","title":"EditTreeLemmatizer"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.backoff","text":"backoff = backoff","title":"backoff"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.cfg","text":"cfg : Dict [ str , Any ] = { 'labels' : []}","title":"cfg"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.min_tree_freq","text":"min_tree_freq = min_tree_freq","title":"min_tree_freq"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.model","text":"model = model","title":"model"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.name","text":"name = name","title":"name"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.overwrite","text":"overwrite = overwrite","title":"overwrite"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.overwrite_labels","text":"overwrite_labels = overwrite_labels","title":"overwrite_labels"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.scorer","text":"scorer = scorer","title":"scorer"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.top_k","text":"top_k = top_k","title":"top_k"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.tree2label","text":"tree2label : Dict [ int , int ] = {}","title":"tree2label"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.trees","text":"trees = EditTrees ( self . vocab . strings )","title":"trees"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.vocab","text":"vocab = vocab","title":"vocab"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.from_bytes","text":"from_bytes ( bytes_data , * , exclude = tuple ())","title":"from_bytes()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.from_disk","text":"from_disk ( path , exclude = tuple ())","title":"from_disk()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.get_loss","text":"get_loss ( examples , scores )","title":"get_loss()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.hide_labels","text":"hide_labels ()","title":"hide_labels()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.initialize","text":"initialize ( get_examples , * , nlp = None , labels = None )","title":"initialize()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.label_data","text":"label_data ()","title":"label_data()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.labels","text":"labels () Returns the labels currently added to the component.","title":"labels()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.predict","text":"predict ( docs )","title":"predict()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.set_annotations","text":"set_annotations ( docs , batch_tree_ids )","title":"set_annotations()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.to_bytes","text":"to_bytes ( * , exclude = tuple ())","title":"to_bytes()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.to_disk","text":"to_disk ( path , exclude = tuple ())","title":"to_disk()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.debug","text":"debug ( * args )","title":"debug()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.make_edit_tree_lemmatizer","text":"make_edit_tree_lemmatizer ( nlp , name , model , backoff , min_tree_freq , overwrite , top_k , overwrite_labels , scorer ) Construct an EditTreeLemmatizer component.","title":"make_edit_tree_lemmatizer()"},{"location":"reference/huspacy/components/lemma_postprocessing/","text":"This module contains various rule-based components aiming to improve on baseline lemmatization tools. LemmaSmoother # Bases: Pipe Smooths lemma by fixing common errors of the edit-tree lemmatizer. create_lemma_smoother staticmethod # create_lemma_smoother ( nlp , name ) lemma_case_smoother # lemma_case_smoother ( doc ) Smooth lemma casing by POS. DEPRECATED: This is not needed anymore, as the lemmatizer is now case-insensitive. Parameters: Name Type Description Default doc Doc Input document. required Returns: Name Type Description Doc Doc Output document.","title":"lemma_postprocessing"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.LemmaSmoother","text":"Bases: Pipe Smooths lemma by fixing common errors of the edit-tree lemmatizer.","title":"LemmaSmoother"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.LemmaSmoother.create_lemma_smoother","text":"create_lemma_smoother ( nlp , name )","title":"create_lemma_smoother()"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.lemma_case_smoother","text":"lemma_case_smoother ( doc ) Smooth lemma casing by POS. DEPRECATED: This is not needed anymore, as the lemmatizer is now case-insensitive. Parameters: Name Type Description Default doc Doc Input document. required Returns: Name Type Description Doc Doc Output document.","title":"lemma_case_smoother()"},{"location":"reference/huspacy/components/lookup_lemmatizer/","text":"LookupLemmatizer # Bases: Pipe LookupLemmatizer learn (token, pos, morph. feat) -> lemma mappings during training, and applies them at prediction time. scorer instance-attribute # scorer = scorer source instance-attribute # source = source create staticmethod # create ( nlp , name , scorer , source ) from_disk # from_disk ( path , exclude = tuple ()) initialize # initialize ( get_examples , * , nlp = None ) to_disk # to_disk ( path , exclude = tuple ()) train # train ( sentences , min_occurrences = 1 ) Parameters: Name Type Description Default sentences Iterable [ Iterable [ Tuple [ str , str , str , str ]]] Sentences to learn the mappings from required min_occurrences int mapping occurring less than this threshold are not learned 1","title":"lookup_lemmatizer"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer","text":"Bases: Pipe LookupLemmatizer learn (token, pos, morph. feat) -> lemma mappings during training, and applies them at prediction time.","title":"LookupLemmatizer"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.scorer","text":"scorer = scorer","title":"scorer"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.source","text":"source = source","title":"source"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.create","text":"create ( nlp , name , scorer , source )","title":"create()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.from_disk","text":"from_disk ( path , exclude = tuple ())","title":"from_disk()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.initialize","text":"initialize ( get_examples , * , nlp = None )","title":"initialize()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.to_disk","text":"to_disk ( path , exclude = tuple ())","title":"to_disk()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.train","text":"train ( sentences , min_occurrences = 1 ) Parameters: Name Type Description Default sentences Iterable [ Iterable [ Tuple [ str , str , str , str ]]] Sentences to learn the mappings from required min_occurrences int mapping occurring less than this threshold are not learned 1","title":"train()"},{"location":"reference/huspacy/extra/__init__/","text":"","title":"  init  "},{"location":"reference/huspacy/extra/roman_num_converter/","text":"Facilities for converting roman numbers to arabic RomanToArabic # Bases: Pipe Converts roman numerals to arabic numerals. create_component staticmethod # create_component ( nlp , name )","title":"roman_num_converter"},{"location":"reference/huspacy/extra/roman_num_converter/#huspacy.extra.roman_num_converter.RomanToArabic","text":"Bases: Pipe Converts roman numerals to arabic numerals.","title":"RomanToArabic"},{"location":"reference/huspacy/extra/roman_num_converter/#huspacy.extra.roman_num_converter.RomanToArabic.create_component","text":"create_component ( nlp , name )","title":"create_component()"},{"location":"reference/huspacy/extra/sentencizer/","text":"Facilities for rule-based sentence splitting HunSentencizer # Bases: Pipe Sentencizer component which uses simple rules to split the text to sentences. create_sentencizer staticmethod # create_sentencizer ( nlp , name )","title":"sentencizer"},{"location":"reference/huspacy/extra/sentencizer/#huspacy.extra.sentencizer.HunSentencizer","text":"Bases: Pipe Sentencizer component which uses simple rules to split the text to sentences.","title":"HunSentencizer"},{"location":"reference/huspacy/extra/sentencizer/#huspacy.extra.sentencizer.HunSentencizer.create_sentencizer","text":"create_sentencizer ( nlp , name )","title":"create_sentencizer()"},{"location":"reference/huspacy/integrations/__init__/","text":"","title":"  init  "},{"location":"reference/huspacy/integrations/nerpp/","text":"EntityRecognizerONPP # Bases: Pipe spaCy pipeline component for wrapping the ONPP NER model: https://huggingface.co/novakat/nerkor-cars-onpp-hubert MODEL_HF_PATH class-attribute # MODEL_HF_PATH = 'novakat/nerkor-cars-onpp-hubert' create # create ( nlp , name ) Creates an entity recognizer using a model which supports 30+ entity types. ( https://huggingface.co/novakat/nerkor-cars-onpp-hubert )","title":"nerpp"},{"location":"reference/huspacy/integrations/nerpp/#huspacy.integrations.nerpp.EntityRecognizerONPP","text":"Bases: Pipe spaCy pipeline component for wrapping the ONPP NER model: https://huggingface.co/novakat/nerkor-cars-onpp-hubert","title":"EntityRecognizerONPP"},{"location":"reference/huspacy/integrations/nerpp/#huspacy.integrations.nerpp.EntityRecognizerONPP.MODEL_HF_PATH","text":"MODEL_HF_PATH = 'novakat/nerkor-cars-onpp-hubert'","title":"MODEL_HF_PATH"},{"location":"reference/huspacy/integrations/nerpp/#huspacy.integrations.nerpp.create","text":"create ( nlp , name ) Creates an entity recognizer using a model which supports 30+ entity types. ( https://huggingface.co/novakat/nerkor-cars-onpp-hubert )","title":"create()"},{"location":"reference/huspacy/integrations/sentiment/","text":"HunSentimentLexiconAnnotator # Bases: Pipe spaCy pipeline component for matching Hungarian sentiment lexicons in text. PolTextLexiconLoader # Lexicon loader for the Poltext sentiment lexicon load # load () PrecoSentiLoader # Lexicon loader for the Precognox sentiment lexicon load # load () create # create ( nlp , name , lexicon_id ) Creates a HunSentimentLexiconAnnotator object create_pattern # create_pattern ( words , label ) update_lexicons # update_lexicons () Update local sentiment lexicons by downloading the latest version from the Web","title":"sentiment"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.HunSentimentLexiconAnnotator","text":"Bases: Pipe spaCy pipeline component for matching Hungarian sentiment lexicons in text.","title":"HunSentimentLexiconAnnotator"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PolTextLexiconLoader","text":"Lexicon loader for the Poltext sentiment lexicon","title":"PolTextLexiconLoader"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PolTextLexiconLoader.load","text":"load ()","title":"load()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PrecoSentiLoader","text":"Lexicon loader for the Precognox sentiment lexicon","title":"PrecoSentiLoader"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PrecoSentiLoader.load","text":"load ()","title":"load()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.create","text":"create ( nlp , name , lexicon_id ) Creates a HunSentimentLexiconAnnotator object","title":"create()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.create_pattern","text":"create_pattern ( words , label )","title":"create_pattern()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.update_lexicons","text":"update_lexicons () Update local sentiment lexicons by downloading the latest version from the Web","title":"update_lexicons()"}]}