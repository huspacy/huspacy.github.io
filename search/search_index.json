{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"# HuSpaCy is a spaCy library providing industrial-strength Hungarian language processing facilities through spaCy models. The released pipelines consist of a tokenizer, sentence splitter, lemmatizer, tagger (predicting morphological features as well), dependency parser and a named entity recognition module. Word and phrase embeddings are also available through spaCy's API. All models have high throughput, decent memory usage and close to state-of-the-art accuracy. A live demo is available here , model releases are published to Hugging Face Hub .","title":"Welcome"},{"location":"#_1","text":"HuSpaCy is a spaCy library providing industrial-strength Hungarian language processing facilities through spaCy models. The released pipelines consist of a tokenizer, sentence splitter, lemmatizer, tagger (predicting morphological features as well), dependency parser and a named entity recognition module. Word and phrase embeddings are also available through spaCy's API. All models have high throughput, decent memory usage and close to state-of-the-art accuracy. A live demo is available here , model releases are published to Hugging Face Hub .","title":""},{"location":"contact/","text":"Contact # For feature requests, issues and bugs please use the GitHub Issue Tracker . Otherwise, reach out to us in the Discussion Forum . Authors # HuSpaCy is implemented in the SzegedAI team, coordinated by Orosz Gy\u00f6rgy in the Hungarian AI National Laboratory, MILAB program.","title":"Contact us"},{"location":"contact/#contact","text":"For feature requests, issues and bugs please use the GitHub Issue Tracker . Otherwise, reach out to us in the Discussion Forum .","title":" Contact"},{"location":"contact/#authors","text":"HuSpaCy is implemented in the SzegedAI team, coordinated by Orosz Gy\u00f6rgy in the Hungarian AI National Laboratory, MILAB program.","title":"Authors"},{"location":"examples/anonymizer/","text":"Text Anonymization # Using Presidio \u00b9 and Faker \u00b2 , we can easily make a simple text anonymization tool or PII (Personally Identifiable Information) removal tool. The (hu)spaCy integration of Presidio can be used to identify and remove personal data, such as names, locations, phone numbers, or even bank details. This tool uses (hu)spaCy's Named Entity Recognition facilities and further pattern matching rules. What is more, an easy-to-use de-identification method is provided by Faker as we show below. Initializing Presidio with HuSpaCy # Option 1: using only model names # // Here we use the hu_core_news_lg model , but any model supporting NER is a valid option configuration = { \"nlp_engine_name\" : \"spacy\" , \"models\" : [{ \"lang_code\" : \"hu\" , \"model_name\" : \"hu_core_news_lg\" , }], } provider = NlpEngineProvider ( nlp_configuration = configuration ) nlp_engine = provider . create_engine () analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ],) Option 2: Building on a previously initialized nlp # class HuSpaCyNlpEngine ( SpacyNlpEngine ): def __init__ ( self , nlp : Language ): self . nlp = { \"hu\" : nlp } def process (): nlp = spacy . load ( \"hu_core_news_trf\" ) nlp_engine = HuSpaCyNlpEngine ( nlp ) analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ]) Configuring Faker operators # fake = Faker ( locale = [ \"hu_HU\" ]) fake_operators = { \"PERSON\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . name ()}), \"LOCATION\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . address ()}), \"EMAIL_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . email ()}), \"PHONE_NUMBER\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . phone_number ()}), \"CRYPTO\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . password ()}), \"IP_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . ipv4 ()}), \"URL\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . url ()}), \"DATE_TIME\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . date ()}), \"CREDIT_CARD\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . credit_card_number ()}), \"IBAN_CODE\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . iban ()}), } Applying Presidio's anonymizer with Faker # anonymizer = AnonymizerEngine () anonymized_text = anonymizer . anonymize ( text = text , analyzer_results = results , operators = fake_operators ) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Anonymizer"},{"location":"examples/anonymizer/#text-anonymization","text":"Using Presidio \u00b9 and Faker \u00b2 , we can easily make a simple text anonymization tool or PII (Personally Identifiable Information) removal tool. The (hu)spaCy integration of Presidio can be used to identify and remove personal data, such as names, locations, phone numbers, or even bank details. This tool uses (hu)spaCy's Named Entity Recognition facilities and further pattern matching rules. What is more, an easy-to-use de-identification method is provided by Faker as we show below.","title":" Text Anonymization"},{"location":"examples/anonymizer/#initializing-presidio-with-huspacy","text":"","title":"Initializing Presidio with HuSpaCy"},{"location":"examples/anonymizer/#option-1-using-only-model-names","text":"// Here we use the hu_core_news_lg model , but any model supporting NER is a valid option configuration = { \"nlp_engine_name\" : \"spacy\" , \"models\" : [{ \"lang_code\" : \"hu\" , \"model_name\" : \"hu_core_news_lg\" , }], } provider = NlpEngineProvider ( nlp_configuration = configuration ) nlp_engine = provider . create_engine () analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ],)","title":"Option 1: using only model names"},{"location":"examples/anonymizer/#option-2-building-on-a-previously-initialized-nlp","text":"class HuSpaCyNlpEngine ( SpacyNlpEngine ): def __init__ ( self , nlp : Language ): self . nlp = { \"hu\" : nlp } def process (): nlp = spacy . load ( \"hu_core_news_trf\" ) nlp_engine = HuSpaCyNlpEngine ( nlp ) analyzer = AnalyzerEngine ( nlp_engine = nlp_engine , supported_languages = [ \"hu\" ])","title":"Option 2: Building on a previously initialized nlp"},{"location":"examples/anonymizer/#configuring-faker-operators","text":"fake = Faker ( locale = [ \"hu_HU\" ]) fake_operators = { \"PERSON\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . name ()}), \"LOCATION\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . address ()}), \"EMAIL_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . email ()}), \"PHONE_NUMBER\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . phone_number ()}), \"CRYPTO\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . password ()}), \"IP_ADDRESS\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . ipv4 ()}), \"URL\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . url ()}), \"DATE_TIME\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . date ()}), \"CREDIT_CARD\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . credit_card_number ()}), \"IBAN_CODE\" : OperatorConfig ( \"custom\" , { \"lambda\" : lambda x : fake . iban ()}), }","title":"Configuring Faker operators"},{"location":"examples/anonymizer/#applying-presidios-anonymizer-with-faker","text":"anonymizer = AnonymizerEngine () anonymized_text = anonymizer . anonymize ( text = text , analyzer_results = results , operators = fake_operators ) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Applying Presidio's anonymizer with Faker"},{"location":"examples/dbpedia/","text":"Entity Linking # Using the DBpedia Spotlight integration for SpaCy \u00b9 , we can easily extract and link DBpedia entities from any text. Initalizing DBpedia Spotlight # nlp = spacy . load ( \"hu_core_news_trf\" ) nlp . add_pipe ( \"dbpedia_spotlight\" , config = { 'dbpedia_rest_endpoint' : 'https://dbpedia-spotlight.dsd.sztaki.hu/hu' , 'overwrite_ents' : False }) Presenting the entities # doc = nlp ( \"A M\u00e1trix c\u00edm\u0171 sci-fi film Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Joe Pantoliano \u00e9s Hugo Weaving f\u0151szerepl\u00e9s\u00e9vel.\" ) pd . DataFrame ([ { \"Text\" : ent . text , \"Resource\" : ent . kb_id_ , \"Similarity Score\" : ent . _ . dbpedia_raw_result [ '@similarityScore' ]} for ent in doc . spans [ \"dbpedia_spotlight\" ]]) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Entity linking"},{"location":"examples/dbpedia/#entity-linking","text":"Using the DBpedia Spotlight integration for SpaCy \u00b9 , we can easily extract and link DBpedia entities from any text.","title":" Entity Linking"},{"location":"examples/dbpedia/#initalizing-dbpedia-spotlight","text":"nlp = spacy . load ( \"hu_core_news_trf\" ) nlp . add_pipe ( \"dbpedia_spotlight\" , config = { 'dbpedia_rest_endpoint' : 'https://dbpedia-spotlight.dsd.sztaki.hu/hu' , 'overwrite_ents' : False })","title":"Initalizing DBpedia Spotlight"},{"location":"examples/dbpedia/#presenting-the-entities","text":"doc = nlp ( \"A M\u00e1trix c\u00edm\u0171 sci-fi film Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Joe Pantoliano \u00e9s Hugo Weaving f\u0151szerepl\u00e9s\u00e9vel.\" ) pd . DataFrame ([ { \"Text\" : ent . text , \"Resource\" : ent . kb_id_ , \"Similarity Score\" : ent . _ . dbpedia_raw_result [ '@similarityScore' ]} for ent in doc . spans [ \"dbpedia_spotlight\" ]]) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Presenting the entities"},{"location":"examples/keyphrase/","text":"Keyphrase Extraction # Keyphrase extraction is a well-studied problem of natural language processing, thus many ready-made solutions exist. textacy is higher-level NLP library (built on spaCy) implementing several keyword extraction methods. By using this tool, we can easily build a simple solution for this problem. First, you need to load a HuSpaCy model, and process the text you wish to analyze: import huspacy nlp = huspacy . load () doc = nlp ( text ) Then, you need to decide which key term extraction method should be utilized, as textacy implements several ones . For the sake of simplicity we rely on SGRank and fine-tune it through PoS and word n-gram filters. from textacy.extract.keyterms.sgrank import sgrank as keywords terms : List [ Tuple [ str , float ]] = keywords ( doc , topn = 10 , include_pos = ( \"NOUN\" , \"PROPN\" ), ngrams = ( 1 , 2 , 3 )) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":"Keyphrase extraction"},{"location":"examples/keyphrase/#keyphrase-extraction","text":"Keyphrase extraction is a well-studied problem of natural language processing, thus many ready-made solutions exist. textacy is higher-level NLP library (built on spaCy) implementing several keyword extraction methods. By using this tool, we can easily build a simple solution for this problem. First, you need to load a HuSpaCy model, and process the text you wish to analyze: import huspacy nlp = huspacy . load () doc = nlp ( text ) Then, you need to decide which key term extraction method should be utilized, as textacy implements several ones . For the sake of simplicity we rely on SGRank and fine-tune it through PoS and word n-gram filters. from textacy.extract.keyterms.sgrank import sgrank as keywords terms : List [ Tuple [ str , float ]] = keywords ( doc , topn = 10 , include_pos = ( \"NOUN\" , \"PROPN\" ), ngrams = ( 1 , 2 , 3 )) This example is available on Hugging Face Spaces , while the full source code is on GitHub .","title":" Keyphrase Extraction"},{"location":"examples/relation/","text":"Relation Extraction # By using a set of simplerules, we can extract an ordered sequence of subject-verb-object triples from a document or sentence. For example, in the sentence \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" (Anna builds a house for herself.) \"Anna\" will be the subject, \"\u00e9p\u00edt\" will be the verb, and the \"h\u00e1z\" will be the object. This triple will be an extracted relation. Using HuSpaCy for tagging and dependency parsing and the modified code for extraction, we can make a simple relaction extraction tool. Importing and using HuSpaCy # nlp = spacy . load ( \"hu_core_news_trf\" ) doc = nlp ( \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" ) Extraction SVO triples # def subject_verb_object_triples ( doclike : types . DocLike ) -> Iterable [ SVOTriple ]: if isinstance ( doclike , Span ): sents = [ doclike ] else : sents = doclike . sents for sent in sents : # connect subjects/objects to direct verb heads # and expand them to include conjuncts, compound nouns, ... verb_sos = collections . defaultdict ( lambda : collections . defaultdict ( set )) for tok in sent : head = tok . head # ensure entry for all verbs, even if empty # to catch conjugate verbs without direct subject/object deps if tok . pos == VERB : _ = verb_sos [ tok ] # nominal subject of active or passive verb if tok . dep in _NOMINAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( expand_noun ( tok )) # clausal subject of active or passive verb elif tok . dep in _CLAUSAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( tok . subtree ) # nominal direct object of transitive verb elif tok . dep == obj : if head . pos == VERB : verb_sos [ head ][ \"objects\" ] . update ( expand_noun ( tok )) # prepositional object acting as agent of passive verb elif tok . dep == pobj : if head . dep == agent and head . head . pos == VERB : verb_sos [ head . head ][ \"objects\" ] . update ( expand_noun ( tok )) # open clausal complement, but not as a secondary predicate elif tok . dep == xcomp : if ( head . pos == VERB and not any ( child . dep == obj for child in head . children ) ): # TODO: just the verb, or the whole tree? # verb_sos[verb][\"objects\"].update(expand_verb(tok)) verb_sos [ head ][ \"objects\" ] . update ( tok . subtree ) # fill in any indirect relationships connected via verb conjuncts for verb , so_dict in verb_sos . items (): conjuncts = verb . conjuncts if so_dict . get ( \"subjects\" ): for conj in conjuncts : conj_so_dict = verb_sos . get ( conj ) if conj_so_dict and not conj_so_dict . get ( \"subjects\" ): conj_so_dict [ \"subjects\" ] . update ( so_dict [ \"subjects\" ]) if not so_dict . get ( \"objects\" ): so_dict [ \"objects\" ] . update ( obj for conj in conjuncts for obj in verb_sos . get ( conj , {}) . get ( \"objects\" , []) ) # expand verbs and restructure into svo triples for verb , so_dict in verb_sos . items (): if so_dict [ \"subjects\" ] and so_dict [ \"objects\" ]: yield SVOTriple ( subject = sorted ( so_dict [ \"subjects\" ], key = attrgetter ( \"i\" )), verb = sorted ( expand_verb ( verb ), key = attrgetter ( \"i\" )), object = sorted ( so_dict [ \"objects\" ], key = attrgetter ( \"i\" )), ) The function with all it's dependencies is available on GitHub . Extracting the triples # tuples = subject_verb_object_triples ( doc ) Presenting the data # for sub_multiple in tuples [ 0 ][ 0 ]: subject += str ( sub_multiple ) + \", \" subject = subject [: - 2 ] for verb_multiple in tuples [ 0 ][ 1 ]: verb += str ( verb_multiple ) + \", \" verb = verb [: - 2 ] for obj_multiple in tuples [ 0 ][ 2 ]: object += str ( obj_multiple ) + \", \" object = object [: - 2 ] relation_list = [[ subject , verb , object ]] df = pd . DataFrame ( relation_list , columns = [ 'Subject' , 'Verb' , 'Object' ]) Notes # The method presented above is heavily based on Textacy \u00b9 's similar method. We slightly modified to adapt for Hungarian. You can find the full extraction method here . This example is available on Hugging Face Spaces . The full source code is on GitHub .","title":"Relation extraction"},{"location":"examples/relation/#relation-extraction","text":"By using a set of simplerules, we can extract an ordered sequence of subject-verb-object triples from a document or sentence. For example, in the sentence \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" (Anna builds a house for herself.) \"Anna\" will be the subject, \"\u00e9p\u00edt\" will be the verb, and the \"h\u00e1z\" will be the object. This triple will be an extracted relation. Using HuSpaCy for tagging and dependency parsing and the modified code for extraction, we can make a simple relaction extraction tool.","title":" Relation Extraction"},{"location":"examples/relation/#importing-and-using-huspacy","text":"nlp = spacy . load ( \"hu_core_news_trf\" ) doc = nlp ( \"Anna \u00e9ppen h\u00e1zat \u00e9p\u00edt mag\u00e1nak.\" )","title":"Importing and using HuSpaCy"},{"location":"examples/relation/#extraction-svo-triples","text":"def subject_verb_object_triples ( doclike : types . DocLike ) -> Iterable [ SVOTriple ]: if isinstance ( doclike , Span ): sents = [ doclike ] else : sents = doclike . sents for sent in sents : # connect subjects/objects to direct verb heads # and expand them to include conjuncts, compound nouns, ... verb_sos = collections . defaultdict ( lambda : collections . defaultdict ( set )) for tok in sent : head = tok . head # ensure entry for all verbs, even if empty # to catch conjugate verbs without direct subject/object deps if tok . pos == VERB : _ = verb_sos [ tok ] # nominal subject of active or passive verb if tok . dep in _NOMINAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( expand_noun ( tok )) # clausal subject of active or passive verb elif tok . dep in _CLAUSAL_SUBJ_DEPS : if head . pos == VERB : verb_sos [ head ][ \"subjects\" ] . update ( tok . subtree ) # nominal direct object of transitive verb elif tok . dep == obj : if head . pos == VERB : verb_sos [ head ][ \"objects\" ] . update ( expand_noun ( tok )) # prepositional object acting as agent of passive verb elif tok . dep == pobj : if head . dep == agent and head . head . pos == VERB : verb_sos [ head . head ][ \"objects\" ] . update ( expand_noun ( tok )) # open clausal complement, but not as a secondary predicate elif tok . dep == xcomp : if ( head . pos == VERB and not any ( child . dep == obj for child in head . children ) ): # TODO: just the verb, or the whole tree? # verb_sos[verb][\"objects\"].update(expand_verb(tok)) verb_sos [ head ][ \"objects\" ] . update ( tok . subtree ) # fill in any indirect relationships connected via verb conjuncts for verb , so_dict in verb_sos . items (): conjuncts = verb . conjuncts if so_dict . get ( \"subjects\" ): for conj in conjuncts : conj_so_dict = verb_sos . get ( conj ) if conj_so_dict and not conj_so_dict . get ( \"subjects\" ): conj_so_dict [ \"subjects\" ] . update ( so_dict [ \"subjects\" ]) if not so_dict . get ( \"objects\" ): so_dict [ \"objects\" ] . update ( obj for conj in conjuncts for obj in verb_sos . get ( conj , {}) . get ( \"objects\" , []) ) # expand verbs and restructure into svo triples for verb , so_dict in verb_sos . items (): if so_dict [ \"subjects\" ] and so_dict [ \"objects\" ]: yield SVOTriple ( subject = sorted ( so_dict [ \"subjects\" ], key = attrgetter ( \"i\" )), verb = sorted ( expand_verb ( verb ), key = attrgetter ( \"i\" )), object = sorted ( so_dict [ \"objects\" ], key = attrgetter ( \"i\" )), ) The function with all it's dependencies is available on GitHub .","title":"Extraction SVO triples"},{"location":"examples/relation/#extracting-the-triples","text":"tuples = subject_verb_object_triples ( doc )","title":"Extracting the triples"},{"location":"examples/relation/#presenting-the-data","text":"for sub_multiple in tuples [ 0 ][ 0 ]: subject += str ( sub_multiple ) + \", \" subject = subject [: - 2 ] for verb_multiple in tuples [ 0 ][ 1 ]: verb += str ( verb_multiple ) + \", \" verb = verb [: - 2 ] for obj_multiple in tuples [ 0 ][ 2 ]: object += str ( obj_multiple ) + \", \" object = object [: - 2 ] relation_list = [[ subject , verb , object ]] df = pd . DataFrame ( relation_list , columns = [ 'Subject' , 'Verb' , 'Object' ])","title":"Presenting the data"},{"location":"examples/relation/#notes","text":"The method presented above is heavily based on Textacy \u00b9 's similar method. We slightly modified to adapt for Hungarian. You can find the full extraction method here . This example is available on Hugging Face Spaces . The full source code is on GitHub .","title":"Notes"},{"location":"huspacy/changelog/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 0.6 # New # Added a lookup component for sentiment lexicons Added integration for novakat's onpp NER model ( nerpp ) Fixed # packaging dependency was implicit which might cause model loading failures 0.5.1 # Changed # Dropped Python 3.6 support New # Added support for hu_core_news_lg v3.4.3 0.5 # New # trainable_lemmatizer_v2 : fork and minor improvement of spaCy's trainable lemmatizer LemmaSmoother for improving lemmatization output of the trainable_lemmatizer RomanToArabic for convert Roman numbers to Arabic ones LookupLemmatizer to memoize token,pos -> lemma transformations Fixed # Fixing #46 : huspacy core no longer depends on spaCy Refactored components Added # Helper method for listing models available download() first validates the model before downloading it 0.4.3 # Fixed # Documentation updates Fixed model loading 0.4.2 # Initial release # Convenience functions for downloading and loading models","title":"Changelog"},{"location":"huspacy/changelog/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"huspacy/changelog/#06","text":"","title":"0.6"},{"location":"huspacy/changelog/#new","text":"Added a lookup component for sentiment lexicons Added integration for novakat's onpp NER model ( nerpp )","title":"New"},{"location":"huspacy/changelog/#fixed","text":"packaging dependency was implicit which might cause model loading failures","title":"Fixed"},{"location":"huspacy/changelog/#051","text":"","title":"0.5.1"},{"location":"huspacy/changelog/#changed","text":"Dropped Python 3.6 support","title":"Changed"},{"location":"huspacy/changelog/#new_1","text":"Added support for hu_core_news_lg v3.4.3","title":"New"},{"location":"huspacy/changelog/#05","text":"","title":"0.5"},{"location":"huspacy/changelog/#new_2","text":"trainable_lemmatizer_v2 : fork and minor improvement of spaCy's trainable lemmatizer LemmaSmoother for improving lemmatization output of the trainable_lemmatizer RomanToArabic for convert Roman numbers to Arabic ones LookupLemmatizer to memoize token,pos -> lemma transformations","title":"New"},{"location":"huspacy/changelog/#fixed_1","text":"Fixing #46 : huspacy core no longer depends on spaCy Refactored components","title":"Fixed"},{"location":"huspacy/changelog/#added","text":"Helper method for listing models available download() first validates the model before downloading it","title":"Added"},{"location":"huspacy/changelog/#043","text":"","title":"0.4.3"},{"location":"huspacy/changelog/#fixed_2","text":"Documentation updates Fixed model loading","title":"Fixed"},{"location":"huspacy/changelog/#042","text":"","title":"0.4.2"},{"location":"huspacy/changelog/#initial-release","text":"Convenience functions for downloading and loading models","title":"Initial release"},{"location":"huspacy/contributing/","text":"Contributing #","title":":octicons-git-pull-request-24: Contributing"},{"location":"huspacy/contributing/#contributing","text":"","title":" Contributing"},{"location":"huspacy/develop/","text":"Install dependencies # Make sure you have poetry installed, then issue: poetry install --with docs --with dev --all-extras Repository structure # \u251c\u2500\u2500 .github -- Github configuration files \u251c\u2500\u2500 docs -- Documentation source files \u251c\u2500\u2500 hu_core_news_lg -- SpaCy 3.x project files for building the large model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_core_news_trf -- Spacy 3.x project files for building the transformer based model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_vectors_web_lg -- Spacy 3.x project files for building word vectors \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 huspacy -- subproject for the PyPI distributable package \u2502 \u251c\u2500\u2500 huspacy -- huspacy python package \u2502 \u251c\u2500\u2500 tests -- huspacy tests \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- HuSpaCy changelog \u2502 \u2514\u2500\u2500 README.md -> ../README.md \u251c\u2500\u2500 mkdocs.yml -- Mkdocs config file \u251c\u2500\u2500 scripts -- CLI scripts \u251c\u2500\u2500 LICENSE -- License file \u2514\u2500\u2500 README.md -- This file Release steps # Make sure all tests pass: poetry run pytest Update the readme, if there are changes in docs : poetry run docs/update_readme.py Test README.md code snippets: poetry run pytest --codeblocks --verbosity=3 ./README.md Bump version: poetry run bumpversion --new-version NEW_VERSION --verbose major/minor/patch Build wheel: poetry build -f wheel Publish on PyPI: poetry publish Publish on GitHub: VERSION=$(cat .bumpversion.cfg | grep \"current_version =\" | cut -c 19-) gh release create huspacy-v$VERSION dist/huspacy-$VERSION-py3-none-any.whl -t huspacy-v$VERSION","title":"Development"},{"location":"huspacy/develop/#install-dependencies","text":"Make sure you have poetry installed, then issue: poetry install --with docs --with dev --all-extras","title":"Install dependencies"},{"location":"huspacy/develop/#repository-structure","text":"\u251c\u2500\u2500 .github -- Github configuration files \u251c\u2500\u2500 docs -- Documentation source files \u251c\u2500\u2500 hu_core_news_lg -- SpaCy 3.x project files for building the large model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_core_news_trf -- Spacy 3.x project files for building the transformer based model \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 meta.json -- model metadata \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 hu_vectors_web_lg -- Spacy 3.x project files for building word vectors \u2502 \u251c\u2500\u2500 configs -- SpaCy pipeline configuration files \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 project.lock -- Auto-generated project script \u2502 \u251c\u2500\u2500 project.yml -- SpaCy Project file describing steps needed to build the model \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- Model changelog \u2502 \u2514\u2500\u2500 README.md -- Instructions on building a model from scratch \u251c\u2500\u2500 huspacy -- subproject for the PyPI distributable package \u2502 \u251c\u2500\u2500 huspacy -- huspacy python package \u2502 \u251c\u2500\u2500 tests -- huspacy tests \u2502 \u251c\u2500\u2500 poetry.lock -- Poetry lock file \u2502 \u251c\u2500\u2500 poetry.toml -- Poetry configs \u2502 \u251c\u2500\u2500 pyproject.toml -- Python project definition file \u2502 \u251c\u2500\u2500 CHANGELOG.md -- HuSpaCy changelog \u2502 \u2514\u2500\u2500 README.md -> ../README.md \u251c\u2500\u2500 mkdocs.yml -- Mkdocs config file \u251c\u2500\u2500 scripts -- CLI scripts \u251c\u2500\u2500 LICENSE -- License file \u2514\u2500\u2500 README.md -- This file","title":"Repository structure"},{"location":"huspacy/develop/#release-steps","text":"Make sure all tests pass: poetry run pytest Update the readme, if there are changes in docs : poetry run docs/update_readme.py Test README.md code snippets: poetry run pytest --codeblocks --verbosity=3 ./README.md Bump version: poetry run bumpversion --new-version NEW_VERSION --verbose major/minor/patch Build wheel: poetry build -f wheel Publish on PyPI: poetry publish Publish on GitHub: VERSION=$(cat .bumpversion.cfg | grep \"current_version =\" | cut -c 19-) gh release create huspacy-v$VERSION dist/huspacy-$VERSION-py3-none-any.whl -t huspacy-v$VERSION","title":"Release steps"},{"location":"huspacy/installation/","text":"Installation # To get started using the tool, first, we need to download one of the models. The easiest way to achieve this is to install huspacy (from PyPI ) and then fetch a model through its API. pip install huspacy import huspacy # Download the latest CPU optimized model huspacy . download () Install the models directly # You can install the latest models directly from \ud83e\udd17 Hugging Face Hub: CPU optimized large model : pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl GPU optimized transformers model : pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl To speed up inference on GPUs, CUDA should be installed as described in https://spacy.io/usage . Read more on the models here","title":"Installation"},{"location":"huspacy/installation/#installation","text":"To get started using the tool, first, we need to download one of the models. The easiest way to achieve this is to install huspacy (from PyPI ) and then fetch a model through its API. pip install huspacy import huspacy # Download the latest CPU optimized model huspacy . download ()","title":" Installation"},{"location":"huspacy/installation/#install-the-models-directly","text":"You can install the latest models directly from \ud83e\udd17 Hugging Face Hub: CPU optimized large model : pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl GPU optimized transformers model : pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl To speed up inference on GPUs, CUDA should be installed as described in https://spacy.io/usage . Read more on the models here","title":"Install the models directly"},{"location":"huspacy/license/","text":"License # This library is released under the Apache 2.0 License Trained models have their own license ( CC BY-SA 4.0 ) as described on the models page .","title":"License"},{"location":"huspacy/license/#license","text":"This library is released under the Apache 2.0 License Trained models have their own license ( CC BY-SA 4.0 ) as described on the models page .","title":"License"},{"location":"huspacy/publications/","text":"Citing # If you use any of the models or HuSpaCy as library in your research, please cite this paper : @misc { HuSpaCy:2021 , title = {{HuSpaCy: an industrial-strength Hungarian natural language processing toolkit}} , booktitle = {{XVIII. Magyar Sz{\\'a}m{\\'\\i}t{\\'o}g{\\'e}pes Nyelv{\\'e}szeti Konferencia}} , author = {Orosz, Gy{\\\"o}rgy and Sz{\\' a}nt{\\' o}, Zsolt and Berkecz, P{\\' e}ter and Szab{\\' o}, Gerg{\\H o} and Farkas, Rich{\\' a}rd} , location = {{Szeged}} , year = {2022} , } Additionally, please indicate the version of the model you used so that your research can be reproduced.","title":"Citing"},{"location":"huspacy/publications/#citing","text":"If you use any of the models or HuSpaCy as library in your research, please cite this paper : @misc { HuSpaCy:2021 , title = {{HuSpaCy: an industrial-strength Hungarian natural language processing toolkit}} , booktitle = {{XVIII. Magyar Sz{\\'a}m{\\'\\i}t{\\'o}g{\\'e}pes Nyelv{\\'e}szeti Konferencia}} , author = {Orosz, Gy{\\\"o}rgy and Sz{\\' a}nt{\\' o}, Zsolt and Berkecz, P{\\' e}ter and Szab{\\' o}, Gerg{\\H o} and Farkas, Rich{\\' a}rd} , location = {{Szeged}} , year = {2022} , } Additionally, please indicate the version of the model you used so that your research can be reproduced.","title":"Citing"},{"location":"huspacy/quickstart/","text":"Quickstart # HuSpaCy is fully compatible with spaCy's API , newcomers can easily get started with spaCy 101 guide. Although HuSpacy models can be loaded with spacy.load(...) , the tool provides convenience methods to easily access downloaded models. # Load the model using spacy.load(...) import spacy nlp = spacy . load ( \"hu_core_news_lg\" ) # Load the default large model (if downloaded) import huspacy nlp = huspacy . load () # Load the model directly as a module import hu_core_news_lg nlp = hu_core_news_lg . load () To process texts, you can simply call the loaded model (i.e. the nlp callable object ) doc = nlp ( \"Csiribiri csiribiri zabszalma - n\u00e9gy csillag k\u00f6zt alszom ma.\" ) As HuSpaCy is built on spaCy, the returned doc document contains all the annotations given by the pipeline components.","title":"Quickstart"},{"location":"huspacy/quickstart/#quickstart","text":"HuSpaCy is fully compatible with spaCy's API , newcomers can easily get started with spaCy 101 guide. Although HuSpacy models can be loaded with spacy.load(...) , the tool provides convenience methods to easily access downloaded models. # Load the model using spacy.load(...) import spacy nlp = spacy . load ( \"hu_core_news_lg\" ) # Load the default large model (if downloaded) import huspacy nlp = huspacy . load () # Load the model directly as a module import hu_core_news_lg nlp = hu_core_news_lg . load () To process texts, you can simply call the loaded model (i.e. the nlp callable object ) doc = nlp ( \"Csiribiri csiribiri zabszalma - n\u00e9gy csillag k\u00f6zt alszom ma.\" ) As HuSpaCy is built on spaCy, the returned doc document contains all the annotations given by the pipeline components.","title":" Quickstart"},{"location":"huspacy/under_the_hood/","text":"Under the hood # HuSpaCy is built on top of spaCy hence almost all components are part of that NLP framework. Explosion's YouTube channel and Blog has several excellent tutorials on the underlying methods. Talks, publications # We regularly publish our results and talk on conferences and meetups. All materials are collected in this public repository .","title":"Under the hood"},{"location":"huspacy/under_the_hood/#under-the-hood","text":"HuSpaCy is built on top of spaCy hence almost all components are part of that NLP framework. Explosion's YouTube channel and Blog has several excellent tutorials on the underlying methods.","title":" Under the hood"},{"location":"huspacy/under_the_hood/#talks-publications","text":"We regularly publish our results and talk on conferences and meetups. All materials are collected in this public repository .","title":"Talks, publications"},{"location":"huspacy/usage_in_r/","text":"Usage in R # Recommended installation method # Make sure you have conda installed Install spacyr : R install.packages(\"spacyr\") library(\"spacyr\") spacy_install() Install one of the models (cf. md , lg , trf ) into the spacy_condaenv conda environment. Alternative installation method # Create a new conda environment using the environment.yml file in the huspacy-in-r repository : $ conda env create -n huspacyr --file ./environment.yml Activate the environment: $ conda activate huspacyr The demo environment comes with the 3.4.3 version of the hu_core_news_lg model. If you need another model (or version) use pip (cf. md , lg , trf ) to install the necessary model files to the conda environment. Usage # Having all dependencies installed, all you need to do is to load spacyr and initialize it with a HuSpaCy model: library ( \"spacyr\" ) # Loads the model which is already installed tin the conda environment spacy_initialize ( model = \"hu_core_news_lg\" ) HuSpaCy should now parse any texts: txt <- c ( d1 = \"Csiribiri csiribiri zabszalma,\" , d2 = \"n\u00e9gy csillag k\u00f6zt alszom ma.\" ) parsedtxt <- spacy_parse ( txt ) Demo # A live demo is accessible through binder in this repository","title":"Usage in R"},{"location":"huspacy/usage_in_r/#usage-in-r","text":"","title":" Usage in R"},{"location":"huspacy/usage_in_r/#recommended-installation-method","text":"Make sure you have conda installed Install spacyr : R install.packages(\"spacyr\") library(\"spacyr\") spacy_install() Install one of the models (cf. md , lg , trf ) into the spacy_condaenv conda environment.","title":"Recommended installation method"},{"location":"huspacy/usage_in_r/#alternative-installation-method","text":"Create a new conda environment using the environment.yml file in the huspacy-in-r repository : $ conda env create -n huspacyr --file ./environment.yml Activate the environment: $ conda activate huspacyr The demo environment comes with the 3.4.3 version of the hu_core_news_lg model. If you need another model (or version) use pip (cf. md , lg , trf ) to install the necessary model files to the conda environment.","title":"Alternative installation method"},{"location":"huspacy/usage_in_r/#usage","text":"Having all dependencies installed, all you need to do is to load spacyr and initialize it with a HuSpaCy model: library ( \"spacyr\" ) # Loads the model which is already installed tin the conda environment spacy_initialize ( model = \"hu_core_news_lg\" ) HuSpaCy should now parse any texts: txt <- c ( d1 = \"Csiribiri csiribiri zabszalma,\" , d2 = \"n\u00e9gy csillag k\u00f6zt alszom ma.\" ) parsedtxt <- spacy_parse ( txt )","title":"Usage"},{"location":"huspacy/usage_in_r/#demo","text":"A live demo is accessible through binder in this repository","title":"Demo"},{"location":"models/","text":"Models overview # We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation . Comparison # Models md lg trf Embeddings 100d floret 300d floret transformer: huBert Target hardwer CPU CPU GPU Accuracy Resource usage","title":":octicons-database-24: Models overview"},{"location":"models/#models-overview","text":"We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation .","title":" Models overview"},{"location":"models/#comparison","text":"Models md lg trf Embeddings 100d floret 300d floret transformer: huBert Target hardwer CPU CPU GPU Accuracy Resource usage","title":"Comparison"},{"location":"models/changelog_lg/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 3.4.3 # Fixed # Improved hyperparameters on dependency parsing 3.4.2 # Changed # Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( Github Changelog ) Using the v3 version on Szeged-Corpus ( Github Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer 3.4.1 # Changed # Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma 3.4.0 # Changed # spaCy 3.4.x compatibility improved tagging performance 3.3.1 # Added # Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline 3.3.0 # Changed # Replaced Lemmy lemmatizer w/ edit tree lemmatizer 3.2.2 # Changed # Replaced static word vectors w/ char n-gram based floret ones Added multistep training to mitigate non-deterministic training behaviour 3.2.1 # Changed # Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention 0.4.2 # Fixed # Better integration of the lemmatizer Updated the project's documentation 0.4.1 # Added # Changed # NER model is built on NerKor and SzegedNER Improved lemmatization for numbers and sentence starting tokens Improved lemmatization by using the whole Szeged Corpus Improved PoS tagging by pretraining on a silver standard corpora Improved Dependency parser by using pretraining on silver standard corpora Improved sentence splitter by using the multitask neural model Fixed # Compatibility w/ Spacy 3.x 0.3.1 - 2019-10-03 # Fixed # Compatibility w/ Spacy 2.2.x 0.3.0 - 2019-09-26 # Added # Named Entity Recognition 0.2.0 - 2019-06-02 # Fixed # Compatibility w/ Spacy 2.1.x Added # Minor sentence segmentation improvements Minor improvements in PoS tagging 0.1.0 - 2019-01-04 # Added # Lemmatization support using lemmy Rule based lemmatizer Multi-task CNN-based dependency parser Changed # Support for spaCy 2.x Using the UD Hungarian corpus for the whole training process 0.0.1 - 2017-06-11 # Added # Experimental support for spaCy 1.x PoS Tagger model with word vectors trained on an unreleased automatically transcribed Szeged Korpusz version","title":"Changelog"},{"location":"models/changelog_lg/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"models/changelog_lg/#343","text":"","title":"3.4.3"},{"location":"models/changelog_lg/#fixed","text":"Improved hyperparameters on dependency parsing","title":"Fixed"},{"location":"models/changelog_lg/#342","text":"","title":"3.4.2"},{"location":"models/changelog_lg/#changed","text":"Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( Github Changelog ) Using the v3 version on Szeged-Corpus ( Github Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer","title":"Changed"},{"location":"models/changelog_lg/#341","text":"","title":"3.4.1"},{"location":"models/changelog_lg/#changed_1","text":"Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma","title":"Changed"},{"location":"models/changelog_lg/#340","text":"","title":"3.4.0"},{"location":"models/changelog_lg/#changed_2","text":"spaCy 3.4.x compatibility improved tagging performance","title":"Changed"},{"location":"models/changelog_lg/#331","text":"","title":"3.3.1"},{"location":"models/changelog_lg/#added","text":"Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline","title":"Added"},{"location":"models/changelog_lg/#330","text":"","title":"3.3.0"},{"location":"models/changelog_lg/#changed_3","text":"Replaced Lemmy lemmatizer w/ edit tree lemmatizer","title":"Changed"},{"location":"models/changelog_lg/#322","text":"","title":"3.2.2"},{"location":"models/changelog_lg/#changed_4","text":"Replaced static word vectors w/ char n-gram based floret ones Added multistep training to mitigate non-deterministic training behaviour","title":"Changed"},{"location":"models/changelog_lg/#321","text":"","title":"3.2.1"},{"location":"models/changelog_lg/#changed_5","text":"Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention","title":"Changed"},{"location":"models/changelog_lg/#042","text":"","title":"0.4.2"},{"location":"models/changelog_lg/#fixed_1","text":"Better integration of the lemmatizer Updated the project's documentation","title":"Fixed"},{"location":"models/changelog_lg/#041","text":"","title":"0.4.1"},{"location":"models/changelog_lg/#added_1","text":"","title":"Added"},{"location":"models/changelog_lg/#changed_6","text":"NER model is built on NerKor and SzegedNER Improved lemmatization for numbers and sentence starting tokens Improved lemmatization by using the whole Szeged Corpus Improved PoS tagging by pretraining on a silver standard corpora Improved Dependency parser by using pretraining on silver standard corpora Improved sentence splitter by using the multitask neural model","title":"Changed"},{"location":"models/changelog_lg/#fixed_2","text":"Compatibility w/ Spacy 3.x","title":"Fixed"},{"location":"models/changelog_lg/#031-2019-10-03","text":"","title":"0.3.1 - 2019-10-03"},{"location":"models/changelog_lg/#fixed_3","text":"Compatibility w/ Spacy 2.2.x","title":"Fixed"},{"location":"models/changelog_lg/#030-2019-09-26","text":"","title":"0.3.0 - 2019-09-26"},{"location":"models/changelog_lg/#added_2","text":"Named Entity Recognition","title":"Added"},{"location":"models/changelog_lg/#020-2019-06-02","text":"","title":"0.2.0 - 2019-06-02"},{"location":"models/changelog_lg/#fixed_4","text":"Compatibility w/ Spacy 2.1.x","title":"Fixed"},{"location":"models/changelog_lg/#added_3","text":"Minor sentence segmentation improvements Minor improvements in PoS tagging","title":"Added"},{"location":"models/changelog_lg/#010-2019-01-04","text":"","title":"0.1.0 - 2019-01-04"},{"location":"models/changelog_lg/#added_4","text":"Lemmatization support using lemmy Rule based lemmatizer Multi-task CNN-based dependency parser","title":"Added"},{"location":"models/changelog_lg/#changed_7","text":"Support for spaCy 2.x Using the UD Hungarian corpus for the whole training process","title":"Changed"},{"location":"models/changelog_lg/#001-2017-06-11","text":"","title":"0.0.1 - 2017-06-11"},{"location":"models/changelog_lg/#added_5","text":"Experimental support for spaCy 1.x PoS Tagger model with word vectors trained on an unreleased automatically transcribed Szeged Korpusz version","title":"Added"},{"location":"models/changelog_md/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 3.4.1 - 2022-10-07 # Initial release # Added medium model, with medium (100d) vectors based on Webcorpus 2.0 Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( Github Changelog ) Using the v3 version on Szeged-Corpus ( Github Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer","title":"Changelog"},{"location":"models/changelog_md/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"models/changelog_md/#341-2022-10-07","text":"","title":"3.4.1 - 2022-10-07"},{"location":"models/changelog_md/#initial-release","text":"Added medium model, with medium (100d) vectors based on Webcorpus 2.0 Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( Github Changelog ) Using the v3 version on Szeged-Corpus ( Github Changelog ) Improved lemmatization Replaced spacy's trainable_lemmatizer with our own port of it ( trainable_lemmatizer_v2 ) which improves on the lemmatization of uppercase tokens Added lemma smoothing step for improving on common errors of the trainable lemmatizer","title":"Initial release"},{"location":"models/changelog_trf/","text":"Changelog # All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 3.2.5 # Changed # Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( Github Changelog ) Using the v3 version on Szeged-Corpus ( Github Changelog ) spacy 3.4.x compatibility Updated spacy-experimental (including the biaffine parser) dependency 3.2.4 # Changed # Updated dependencies 3.2.3 # Changed # Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma 3.2.2 # Added # Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline 3.2.1 # Changed # Minor improvements in the training pipeline 3.2.0 # Added # Transformer encoder Experimental edit-tree-lemmatizer Experimental biaffine parser Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention","title":"Changelog"},{"location":"models/changelog_trf/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"models/changelog_trf/#325","text":"","title":"3.2.5"},{"location":"models/changelog_trf/#changed","text":"Improved NER: using beam_ner with update_prob=1.0 Using the r2.10 version on UD corpus ( Github Changelog ) Using the v3 version on Szeged-Corpus ( Github Changelog ) spacy 3.4.x compatibility Updated spacy-experimental (including the biaffine parser) dependency","title":"Changed"},{"location":"models/changelog_trf/#324","text":"","title":"3.2.4"},{"location":"models/changelog_trf/#changed_1","text":"Updated dependencies","title":"Changed"},{"location":"models/changelog_trf/#323","text":"","title":"3.2.3"},{"location":"models/changelog_trf/#changed_2","text":"Improved lookup lemmatizer: bugfix and morph. feats usage for indexing lemma","title":"Changed"},{"location":"models/changelog_trf/#322","text":"","title":"3.2.2"},{"location":"models/changelog_trf/#added","text":"Added lookup lemmatizer before edit tree lemmatizer in the pipeline Added lemma smoother after edit tree lemmatizer in the pipeline","title":"Added"},{"location":"models/changelog_trf/#321","text":"","title":"3.2.1"},{"location":"models/changelog_trf/#changed_3","text":"Minor improvements in the training pipeline","title":"Changed"},{"location":"models/changelog_trf/#320","text":"","title":"3.2.0"},{"location":"models/changelog_trf/#added_1","text":"Transformer encoder Experimental edit-tree-lemmatizer Experimental biaffine parser Using the Szarvas-Farkas split for SzegedNER Learning lemmata w/o \"+\" characters hunnerwiki is no longer used to train the NER Started using spacy's model numbering convention","title":"Added"},{"location":"models/develop_lg/","text":"Model development # Train models # Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Activate the virtual environment poetry shell Fetch datafiles: spacy project assets -S ( -S won't retry fetch resources if they are already present) Build all the models: spacy project run all Fine-tune the models # Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file. Publish models # Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Development"},{"location":"models/develop_lg/#model-development","text":"","title":"Model development"},{"location":"models/develop_lg/#train-models","text":"Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Activate the virtual environment poetry shell Fetch datafiles: spacy project assets -S ( -S won't retry fetch resources if they are already present) Build all the models: spacy project run all","title":"Train models"},{"location":"models/develop_lg/#fine-tune-the-models","text":"Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file.","title":"Fine-tune the models"},{"location":"models/develop_lg/#publish-models","text":"Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Publish models"},{"location":"models/develop_md/","text":"Model development # Train models # Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Activate the virtual environment poetry shell Fetch datafiles: spacy project assets -S ( -S won't retry fetch resources if they are already present) Build all the models: spacy project run all Fine-tune the models # Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file. Publish models # Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Development"},{"location":"models/develop_md/#model-development","text":"","title":"Model development"},{"location":"models/develop_md/#train-models","text":"Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) Activate the virtual environment poetry shell Fetch datafiles: spacy project assets -S ( -S won't retry fetch resources if they are already present) Build all the models: spacy project run all","title":"Train models"},{"location":"models/develop_md/#fine-tune-the-models","text":"Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file.","title":"Fine-tune the models"},{"location":"models/develop_md/#publish-models","text":"Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Publish models"},{"location":"models/develop_trf/","text":"Model development # Train the pipeline components # Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) To enable full GPU usage install PyTorch: poetry run python -m pip install torch==1.10.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html Activate the virtual environment poetry shell Fetch datafiles: spacy project assets -S ( -S won't retry fetch resources if they are already present) Build all the models: spacy project run all Fine-tune the models # Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file. Publish models # Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Development"},{"location":"models/develop_trf/#model-development","text":"","title":"Model development"},{"location":"models/develop_trf/#train-the-pipeline-components","text":"Install dependencies: poetry install (CUDA 11.1 is supported out-of-the-box) To enable full GPU usage install PyTorch: poetry run python -m pip install torch==1.10.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html Activate the virtual environment poetry shell Fetch datafiles: spacy project assets -S ( -S won't retry fetch resources if they are already present) Build all the models: spacy project run all","title":"Train the pipeline components"},{"location":"models/develop_trf/#fine-tune-the-models","text":"Hyperparameters of the underlying models can be fine-tuned using Weights&Biases: wandb sweep with one of the sweep_*.yml config file.","title":"Fine-tune the models"},{"location":"models/develop_trf/#publish-models","text":"Make sure dependencies are up-to-date: poetry update Bump version: bumpversion --new-version x.x.x major/micro/patch --verbose Build the model as described in the previous section Publish the new model to Hugging Face Hub: poetry run spacy project run publish (must be executed in the model's directory)","title":"Publish models"},{"location":"models/readme_lg/","text":"hu_core_news_lg model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0","title":"`hu_core_news_lg` model"},{"location":"models/readme_lg/#hu_core_news_lg-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_lg model"},{"location":"models/readme_md/","text":"hu_core_news_md model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0","title":"`hu_core_news_md` model"},{"location":"models/readme_md/#hu_core_news_md-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_md model"},{"location":"models/readme_trf/","text":"hu_core_news_trf model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT .","title":"`hu_core_news_trf` model"},{"location":"models/readme_trf/#hu_core_news_trf-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT .","title":"hu_core_news_trf model"},{"location":"models_gen/","text":"Models overview # We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation . Comparison # Models md lg trf Embeddings 100d floret 300d floret transformer: huBert Target hardwer CPU CPU GPU Accuracy Resource usage Performance comparison # Models md lg trf Latest version 3.4.1 3.4.3 3.2.4 PoS Accuracy 96.36 96.49 97.38 Morph. Accuracy 93.06 93.23 93.65 Lemma Accuracy 97.15 97.22 98.67 Dep. LAS 75.03 74.68 87.13 Dep. UAS 82.16 81.77 91.17 NER F1 84.75 85.82 90.59 Throughput (token/sec) 1260 (CPU) 697 (CPU) 1022 (GPU) Size 127 MB 401 MB 1.67 GB","title":"Overview"},{"location":"models_gen/#models-overview","text":"We provide several pretrained models: hu_core_news_lg is a CNN-based large model which achieves a good balance between accuracy and processing speed. This default model provides tokenization, sentence splitting, part-of-speech tagging (UD labels w/ detailed morphosyntactic features), lemmatization, dependency parsing and named entity recognition and ships with pretrained word vectors. hu_core_news_trf is built on huBERT and provides the same functionality as the large model except the word vectors. It comes with much higher accuracy in the price of increased computational resource usage. We suggest using it with GPU support. hu_core_news_md greatly improves on hu_core_news_lg 's throughput by loosing some accuracy. This model could be a good choice when processing speed is crucial. HuSpaCy's model versions follows spaCy's versioning scheme . A demo of the models is available at Hugging Face Spaces . To read more about the model's architecture we suggest reading the relevant sections from spaCy's documentation .","title":" Models overview"},{"location":"models_gen/#comparison","text":"Models md lg trf Embeddings 100d floret 300d floret transformer: huBert Target hardwer CPU CPU GPU Accuracy Resource usage","title":"Comparison"},{"location":"models_gen/#performance-comparison","text":"Models md lg trf Latest version 3.4.1 3.4.3 3.2.4 PoS Accuracy 96.36 96.49 97.38 Morph. Accuracy 93.06 93.23 93.65 Lemma Accuracy 97.15 97.22 98.67 Dep. LAS 75.03 74.68 87.13 Dep. UAS 82.16 81.77 91.17 NER F1 84.75 85.82 90.59 Throughput (token/sec) 1260 (CPU) 697 (CPU) 1022 (GPU) Size 127 MB 401 MB 1.67 GB","title":"Performance comparison"},{"location":"models_gen/index_lg/","text":"hu_core_news_lg model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0 Details # Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_lg Version 3.4.3 spaCy >=3.4.1,<3.5.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (300 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) Webcorpuswiki word2vec model (Gy\u00f6rgy Orosz) License cc-by-sa-4.0 Author SzegedAI, MILAB Label Scheme # View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` | Accuracy # Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.00 SENTS_R 98.00 SENTS_F 98.00 TAG_ACC 96.55 POS_ACC 96.49 MORPH_ACC 93.23 MORPH_MICRO_P 96.56 MORPH_MICRO_R 96.00 MORPH_MICRO_F 96.28 LEMMA_ACC 97.22 DEP_UAS 81.77 DEP_LAS 74.68 ENTS_P 86.91 ENTS_R 84.76 ENTS_F 85.82","title":"Overview"},{"location":"models_gen/index_lg/#hu_core_news_lg-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 300d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_lg model"},{"location":"models_gen/index_lg/#details","text":"Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_lg Version 3.4.3 spaCy >=3.4.1,<3.5.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (300 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) Webcorpuswiki word2vec model (Gy\u00f6rgy Orosz) License cc-by-sa-4.0 Author SzegedAI, MILAB","title":"Details"},{"location":"models_gen/index_lg/#label-scheme","text":"View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` |","title":"Label Scheme"},{"location":"models_gen/index_lg/#accuracy","text":"Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.00 SENTS_R 98.00 SENTS_F 98.00 TAG_ACC 96.55 POS_ACC 96.49 MORPH_ACC 93.23 MORPH_MICRO_P 96.56 MORPH_MICRO_R 96.00 MORPH_MICRO_F 96.28 LEMMA_ACC 97.22 DEP_UAS 81.77 DEP_LAS 74.68 ENTS_P 86.91 ENTS_R 84.76 ENTS_F 85.82","title":"Accuracy"},{"location":"models_gen/index_md/","text":"hu_core_news_md model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0 Details # Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_md Version 3.4.1 spaCy >=3.4.1,<3.5.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (100 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) License cc-by-sa-4.0 Author SzegedAI, MILAB Label Scheme # View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` | Accuracy # Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 97.55 SENTS_R 97.55 SENTS_F 97.55 TAG_ACC 96.29 POS_ACC 96.36 MORPH_ACC 93.06 MORPH_MICRO_P 96.71 MORPH_MICRO_R 95.83 MORPH_MICRO_F 96.27 LEMMA_ACC 97.15 DEP_UAS 82.16 DEP_LAS 75.03 ENTS_P 84.98 ENTS_R 84.53 ENTS_F 84.75","title":"Overview"},{"location":"models_gen/index_md/#hu_core_news_md-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying components builds on a 100d word embedding trained the Hungarian Webcorpus 2.0","title":"hu_core_news_md model"},{"location":"models_gen/index_md/#details","text":"Core Hungarian model for HuSpaCy. Components: tok2vec, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_md Version 3.4.1 spaCy >=3.4.1,<3.5.0 Default Pipeline tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Components tok2vec , senter , tagger , morphologizer , lookup_lemmatizer , lemmatizer , lemma_smoother , parser , ner Vectors -1 keys, 200000 unique vectors (100 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) License cc-by-sa-4.0 Author SzegedAI, MILAB","title":"Details"},{"location":"models_gen/index_md/#label-scheme","text":"View label scheme (1209 labels for 4 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sbl\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sbl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sbl\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sbl\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sbl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sbl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sbl\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sbl\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sbl\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sbl\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sbl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sbl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sbl\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sbl\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sbl\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sbl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sbl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sbl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`parser`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `flat:name`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:obl`, `nsubj`, `nummod`, `obj`, `obj:lvc`, `obl`, `orphan`, `parataxis`, `punct`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` |","title":"Label Scheme"},{"location":"models_gen/index_md/#accuracy","text":"Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 97.55 SENTS_R 97.55 SENTS_F 97.55 TAG_ACC 96.29 POS_ACC 96.36 MORPH_ACC 93.06 MORPH_MICRO_P 96.71 MORPH_MICRO_R 95.83 MORPH_MICRO_F 96.27 LEMMA_ACC 97.15 DEP_UAS 82.16 DEP_LAS 75.03 ENTS_P 84.98 ENTS_R 84.53 ENTS_F 84.75","title":"Accuracy"},{"location":"models_gen/index_trf/","text":"hu_core_news_trf model # The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT . Details # Hungarian transformer pipeline (huBert) for HuSpaCy. Components: transformer, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_trf Version 3.2.4 spaCy >=3.2.4,<3.3.0 Default Pipeline transformer , senter , tagger , morphologizer , lookup_lemmatizer , experimental_edit_tree_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Components transformer , senter , tagger , morphologizer , lookup_lemmatizer , experimental_edit_tree_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Vectors 0 keys, 0 unique vectors (0 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) huBERT base model (cased) (D\u00e1vid M\u00e1rk Nemeskey (SZTAKI-HLT)) License cc-by-sa-4.0 Author SzegedAI, MILAB Label Scheme # View label scheme (7244 labels for 5 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sub\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PROPN`, `Case=Sub\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sub\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sub\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sub\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sub\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sub\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sub\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sub\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sub\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Indef\\|POS=DET\\|PronType=Art`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Degree=Pos\\|POS=ADV\\|PronType=Default`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `POS=ADV\\|PronType=Default`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sub\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sub\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sub\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sub\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Cas=none\\|POS=NOUN\\|SubPOS=c`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sub\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sub\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sub\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sub\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sub\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sub\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sub\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sub\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sub\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sub\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sub\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`experimental_edit_tree_lemmatizer`** | `0`, `2`, `3`, `5`, `7`, `9`, `11`, `13`, `15`, `17`, `19`, `21`, `23`, `25`, `27`, `29`, `31`, `33`, `35`, `37`, `39`, `41`, `43`, `45`, `47`, `49`, `51`, `53`, `55`, `57`, `59`, `61`, `63`, `65`, `67`, `69`, `71`, `73`, `77`, `79`, `81`, `83`, `86`, `88`, `90`, `92`, `94`, `97`, `99`, `101`, `103`, `105`, `107`, `110`, `112`, `114`, `116`, `118`, `120`, `121`, `123`, `125`, `128`, `131`, `133`, `135`, `137`, `139`, `141`, `142`, `144`, `146`, `148`, `150`, `152`, `154`, `157`, `159`, `161`, `163`, `165`, `166`, `168`, `171`, `173`, `175`, `177`, `179`, `181`, `183`, `185`, `189`, `191`, `193`, `195`, `199`, `201`, `203`, `205`, `207`, `209`, `211`, `213`, `216`, `218`, `221`, `223`, `225`, `228`, `229`, `231`, `234`, `235`, `236`, `238`, `242`, `244`, `246`, `248`, `250`, `253`, `255`, `257`, `259`, `261`, `263`, `265`, `267`, `269`, `272`, `274`, `276`, `279`, `281`, `284`, `286`, `288`, `290`, `292`, `294`, `296`, `298`, `300`, `302`, `304`, `307`, `309`, `312`, `315`, `317`, `319`, `321`, `322`, `325`, `327`, `329`, `331`, `333`, `335`, `337`, `339`, `341`, `343`, `345`, `349`, `351`, `353`, `355`, `357`, `360`, `362`, `365`, `366`, `368`, `370`, `372`, `374`, `376`, `378`, `379`, `384`, `386`, `388`, `390`, `392`, `394`, `396`, `398`, `400`, `402`, `404`, `406`, `408`, `410`, `412`, `414`, `416`, `418`, `420`, `421`, `423`, `425`, `427`, `429`, `431`, `433`, `434`, `436`, `438`, `440`, `442`, `443`, `444`, `446`, `448`, `450`, `452`, `454`, `457`, `459`, `461`, `463`, `466`, `468`, `470`, `472`, `474`, `478`, `479`, `481`, `483`, `486`, `488`, `490`, `492`, `494`, `496`, `498`, `499`, `501`, `503`, `505`, `507`, `509`, `510`, `350`, `512`, `514`, `516`, `517`, `518`, `521`, `523`, `525`, `527`, `529`, `531`, `533`, `535`, `537`, `539`, `541`, `543`, `544`, `546`, `548`, `550`, `553`, `555`, `556`, `558`, `561`, `563`, `567`, `569`, `571`, `572`, `574`, `575`, `577`, `579`, `581`, `583`, `585`, `587`, `589`, `591`, `593`, `595`, `598`, `600`, `602`, `603`, `605`, `607`, `609`, `611`, `612`, `614`, `616`, `618`, `620`, `622`, `624`, `626`, `628`, `630`, `632`, `634`, `636`, `638`, `639`, `641`, `642`, `643`, `645`, `647`, `649`, `651`, `653`, `655`, `657`, `659`, `661`, `663`, `665`, `667`, `670`, `672`, `673`, `675`, `677`, `679`, `680`, `683`, `686`, `689`, `691`, `693`, `695`, `697`, `699`, `701`, `704`, `705`, `708`, `710`, `712`, `713`, `715`, `717`, `719`, `720`, `722`, `724`, `726`, `728`, `730`, `732`, `734`, `736`, `738`, `740`, `741`, `744`, `746`, `747`, `749`, `752`, `755`, `757`, `759`, `761`, `762`, `764`, `765`, `766`, `768`, `770`, `773`, `774`, `776`, `778`, `779`, `781`, `783`, `784`, `786`, `788`, `790`, `792`, `793`, `795`, `797`, `799`, `801`, `802`, `804`, `806`, `808`, `809`, `813`, `818`, `820`, `821`, `823`, `825`, `827`, `829`, `831`, `832`, `834`, `836`, `838`, `840`, `842`, `844`, `846`, `848`, `850`, `853`, `855`, `857`, `859`, `862`, `864`, `866`, `868`, `869`, `871`, `873`, `875`, `876`, `877`, `880`, `882`, `883`, `885`, `886`, `888`, `891`, `894`, `895`, `898`, `903`, `905`, `907`, `908`, `910`, `912`, `914`, `916`, `918`, `920`, `922`, `925`, `927`, `929`, `930`, `932`, `934`, `936`, `938`, `940`, `942`, `944`, `946`, `948`, `949`, `951`, `953`, `955`, `959`, `961`, `963`, `965`, `967`, `968`, `970`, `973`, `975`, `977`, `978`, `980`, `982`, `984`, `986`, `988`, `990`, `993`, `995`, `997`, `999`, `1001`, `1003`, `1005`, `1007`, `1009`, `1011`, `1013`, `1015`, `1017`, `1020`, `1022`, `1024`, `1026`, `1029`, `1031`, `1032`, `1033`, `1035`, `1038`, `1040`, `1043`, `1045`, `1047`, `1049`, `1051`, `1053`, `1056`, `1059`, `1061`, `1063`, `1065`, `1067`, `1069`, `1071`, `1074`, `1076`, `1078`, `1080`, `1084`, `1086`, `1088`, `1090`, `1092`, `1094`, `1095`, `1096`, `1099`, `1101`, `1103`, `1104`, `1105`, `1107`, `1108`, `1111`, `1113`, `1115`, `1117`, `1119`, `1123`, `1125`, `1127`, `1129`, `1131`, `1133`, `1135`, `1137`, `1139`, `1141`, `1142`, `1144`, `1146`, `1149`, `1151`, `1152`, `1154`, `1155`, `1156`, `1158`, `1160`, `1162`, `1164`, `1166`, `1168`, `1170`, `1171`, `1174`, `1176`, `1178`, `1180`, `1182`, `1184`, `1187`, `1190`, `1192`, `1194`, `1196`, `1199`, `1201`, `1204`, `1206`, `1207`, `1209`, `1211`, `1212`, `1214`, `1216`, `1218`, `1221`, `1223`, `1225`, `1226`, `1228`, `1230`, `1232`, `1233`, `1235`, `1237`, `1239`, `1241`, `1243`, `1244`, `1246`, `1248`, `1250`, `1252`, `1254`, `1256`, `1258`, `1259`, `1260`, `1262`, `1263`, `1265`, `1268`, `1270`, `1271`, `1274`, `1276`, `1278`, `1280`, `1282`, `1283`, `1285`, `1287`, `1288`, `1289`, `1291`, `1293`, `1295`, `1297`, `1299`, `1301`, `1304`, `1307`, `1309`, `1310`, `1312`, `1313`, `1316`, `1318`, `1319`, `1322`, `1324`, `1326`, `1328`, `1329`, `1330`, `1332`, `1333`, `1335`, `1337`, `1339`, `1341`, `1343`, `1344`, `1345`, `1346`, `1348`, `1350`, `1352`, `1354`, `1357`, `1359`, `1361`, `1363`, `1365`, `1367`, `1369`, `1371`, `1373`, `1376`, `1378`, `1380`, `1382`, `1384`, `1386`, `1388`, `1390`, `1392`, `1394`, `1396`, `1398`, `1400`, `1401`, `1403`, `1405`, `1407`, `1409`, `1411`, `1412`, `1414`, `1415`, `1417`, `1419`, `1421`, `1423`, `1425`, `1427`, `58`, `1429`, `1431`, `1434`, `1436`, `1438`, `1440`, `1442`, `1444`, `1446`, `1448`, `1450`, `1452`, `1454`, `1457`, `1459`, `1462`, `1464`, `1466`, `1468`, `1470`, `1472`, `1474`, `1476`, `1478`, `1481`, `1483`, `1486`, `1488`, `1490`, `1493`, `1495`, `1496`, `1497`, `1498`, `1499`, `1501`, `1503`, `1504`, `1506`, `1508`, `1510`, `1511`, `1513`, `1515`, `1517`, `1519`, `1522`, `1524`, `1525`, `1527`, `1529`, `1531`, `1533`, `1535`, `1537`, `1539`, `1541`, `1543`, `1545`, `1547`, `1549`, `1551`, `1553`, `1556`, `1558`, `1560`, `1562`, `1564`, `1567`, `1569`, `1571`, `1573`, `1575`, `1577`, `1579`, `1580`, `1582`, `1584`, `1586`, `1587`, `1589`, `1592`, `1594`, `1596`, `1598`, `1600`, `1603`, `1604`, `1606`, `1608`, `1610`, `1611`, `1612`, `1615`, `1617`, `1618`, `1620`, `1622`, `1625`, `1627`, `1629`, `1631`, `1633`, `1635`, `1637`, `1639`, `1642`, `1644`, `1646`, `1648`, `1650`, `1651`, `1653`, `1657`, `1659`, `1662`, `1664`, `1666`, `1668`, `1670`, `1672`, `1674`, `1675`, `1677`, `1678`, `1680`, `1683`, `1685`, `1686`, `1687`, `1689`, `1691`, `1693`, `1695`, `1697`, `1700`, `1703`, `1705`, `1707`, `1708`, `1711`, `1714`, `1715`, `1718`, `1721`, `1724`, `1727`, `1729`, `1731`, `1734`, `1737`, `1739`, `1742`, `1744`, `1745`, `1747`, `1749`, `1751`, `1754`, `1757`, `1758`, `1760`, `1761`, `1764`, `1766`, `1767`, `1768`, `1769`, `1771`, `1773`, `1776`, `1777`, `1779`, `1781`, `1783`, `1784`, `1786`, `1787`, `1788`, `1790`, `1791`, `1793`, `1794`, `1795`, `1796`, `1798`, `1800`, `1802`, `1803`, `1804`, `1806`, `1808`, `1811`, `1812`, `1815`, `1816`, `1818`, `1819`, `1820`, `1821`, `1824`, `1827`, `1828`, `1829`, `1831`, `1833`, `1835`, `1837`, `1838`, `1840`, `1842`, `1843`, `1845`, `1846`, `1848`, `1849`, `1851`, `1853`, `1854`, `1855`, `1857`, `1858`, `1861`, `1863`, `1865`, `1866`, `1868`, `1870`, `1873`, `1874`, `1875`, `1877`, `1878`, `1879`, `1880`, `1882`, `1884`, `1886`, `1888`, `1890`, `1892`, `1894`, `1896`, `1898`, `1900`, `1902`, `1904`, `1906`, `1908`, `1910`, `1912`, `1913`, `1916`, `1918`, `1919`, `1922`, `1924`, `1926`, `1928`, `1929`, `1931`, `1932`, `1933`, `1934`, `1935`, `1937`, `1939`, `1941`, `1942`, `1944`, `1946`, `1947`, `1949`, `1950`, `1951`, `1953`, `1954`, `1955`, `1957`, `1958`, `1960`, `1961`, `1963`, `1964`, `1965`, `1967`, `1969`, `1970`, `1972`, `1974`, `1976`, `1978`, `1980`, `1982`, `1984`, `1985`, `1987`, `1989`, `1991`, `1993`, `1995`, `1997`, `1998`, `2000`, `2003`, `2005`, `2007`, `2009`, `2011`, `2013`, `2014`, `2017`, `2018`, `2020`, `2022`, `2023`, `2025`, `2027`, `2029`, `2031`, `2032`, `2033`, `2034`, `2036`, `2038`, `2040`, `2043`, `2045`, `2047`, `2048`, `2050`, `2051`, `2053`, `2055`, `2057`, `2060`, `2062`, `2064`, `2066`, `2068`, `2069`, `2070`, `2073`, `2075`, `2077`, `2079`, `2080`, `2082`, `2084`, `2085`, `2087`, `2090`, `2091`, `2093`, `2094`, `2095`, `2097`, `2099`, `2101`, `2103`, `2104`, `2105`, `2107`, `2109`, `2112`, `2115`, `2116`, `2118`, `2120`, `2121`, `2123`, `2124`, `2126`, `2127`, `2129`, `2130`, `2132`, `2133`, `2135`, `2137`, `2138`, `2139`, `2140`, `2142`, `2143`, `2145`, `2147`, `2149`, `2150`, `2152`, `2154`, `2156`, `2158`, `2159`, `2162`, `2164`, `2165`, `2167`, `2169`, `2171`, `2173`, `2175`, `2176`, `2177`, `2178`, `2179`, `2180`, `2181`, `2184`, `2186`, `2187`, `2189`, `2190`, `2191`, `2193`, `2194`, `2197`, `2199`, `2201`, `2203`, `2205`, `2207`, `2208`, `2209`, `2211`, `2212`, `2214`, `2215`, `2217`, `2218`, `2221`, `2223`, `2226`, `2228`, `2230`, `2232`, `2234`, `2235`, `2238`, `2240`, `2242`, `2243`, `2245`, `2247`, `2248`, `2249`, `2251`, `2253`, `2254`, `2255`, `2257`, `2259`, `2261`, `2262`, `2263`, `2265`, `2267`, `2269`, `2270`, `2271`, `2272`, `2273`, `2275`, `2277`, `2279`, `2280`, `2282`, `2283`, `2284`, `2286`, `2287`, `2288`, `2290`, `2291`, `2293`, `2294`, `2295`, `2296`, `2298`, `2299`, `2300`, `2301`, `2303`, `2304`, `2305`, `2306`, `2307`, `2308`, `2309`, `2311`, `2312`, `2315`, `2317`, `2318`, `2319`, `2321`, `2322`, `2324`, `2326`, `2328`, `2329`, `2331`, `2333`, `2335`, `2336`, `2338`, `2339`, `2341`, `2343`, `2345`, `2348`, `2349`, `2351`, `2353`, `2355`, `2357`, `2358`, `2360`, `2363`, `2365`, `2367`, `2369`, `2372`, `2373`, `2374`, `2376`, `2378`, `2380`, `2381`, `2382`, `2383`, `2384`, `2385`, `2388`, `2390`, `2392`, `2393`, `2394`, `2396`, `2397`, `2399`, `2400`, `2402`, `2404`, `2407`, `2410`, `2413`, `2415`, `2418`, `2419`, `2421`, `2422`, `2424`, `2425`, `2426`, `2428`, `2430`, `2432`, `2435`, `2436`, `2437`, `2438`, `2441`, `2442`, `2443`, `2445`, `2447`, `2448`, `2450`, `2452`, `2454`, `2455`, `2456`, `2458`, `2459`, `2461`, `2462`, `2464`, `2467`, `2468`, `2470`, `2471`, `2473`, `2475`, `2476`, `2478`, `2480`, `2482`, `2483`, `2484`, `2485`, `2486`, `2488`, `2489`, `2491`, `2493`, `2496`, `2498`, `2499`, `2501`, `2503`, `2505`, `2507`, `2510`, `2512`, `2514`, `2515`, `2517`, `2518`, `2520`, `2521`, `2523`, `2524`, `2525`, `2528`, `2530`, `2532`, `2533`, `2534`, `2536`, `2537`, `2538`, `2539`, `2541`, `2543`, `2545`, `2546`, `2548`, `2551`, `2552`, `2553`, `2555`, `2557`, `2559`, `2561`, `2562`, `2564`, `2566`, `2567`, `2568`, `2569`, `2570`, `2571`, `2572`, `2574`, `2575`, `2577`, `2579`, `2581`, `2582`, `2585`, `2587`, `2588`, `2590`, `2592`, `2595`, `2596`, `2597`, `2599`, `2600`, `2602`, `2603`, `2604`, `2605`, `2607`, `2609`, `2611`, `2613`, `2615`, `2616`, `2617`, `2620`, `2622`, `2624`, `2625`, `2627`, `2630`, `2632`, `2635`, `2636`, `2637`, `2639`, `2640`, `2641`, `2643`, `2644`, `2645`, `2646`, `2647`, `2649`, `2651`, `2652`, `2653`, `2656`, `2657`, `2658`, `2660`, `2662`, `2664`, `2665`, `2666`, `2667`, `2669`, `2671`, `2672`, `2673`, `2675`, `2678`, `2679`, `2682`, `2683`, `2685`, `2686`, `2688`, `2689`, `2690`, `2692`, `2693`, `2695`, `2697`, `2698`, `2699`, `2700`, `2701`, `2702`, `2703`, `2704`, `2706`, `2707`, `2709`, `2712`, `2714`, `2716`, `2719`, `2720`, `2721`, `2723`, `2725`, `2726`, `2727`, `2730`, `2731`, `2732`, `2733`, `2734`, `2735`, `2737`, `2738`, `2739`, `2740`, `2742`, `2743`, `2745`, `2746`, `2748`, `2750`, `2752`, `2753`, `2756`, `2757`, `2759`, `2760`, `2761`, `2762`, `2764`, `2765`, `2766`, `2767`, `2768`, `2769`, `2771`, `2772`, `2774`, `2776`, `2777`, `2778`, `2779`, `2781`, `2782`, `2784`, `2785`, `2787`, `2790`, `2792`, `2794`, `2797`, `2799`, `2801`, `2802`, `2805`, `2807`, `2808`, `2810`, `2812`, `2814`, `2815`, `2816`, `2818`, `2820`, `2822`, `2823`, `2824`, `2826`, `2827`, `2828`, `2830`, `2832`, `2834`, `2835`, `2837`, `2839`, `2841`, `2842`, `2843`, `2845`, `2847`, `1138`, `2848`, `2850`, `2851`, `2854`, `2857`, `2859`, `2860`, `2861`, `2863`, `2865`, `2866`, `2867`, `2869`, `2872`, `2874`, `2876`, `2877`, `2878`, `2880`, `2881`, `2882`, `2884`, `2885`, `2886`, `2887`, `2888`, `2889`, `2890`, `2891`, `2892`, `2893`, `2894`, `2895`, `2897`, `2899`, `2901`, `2902`, `2904`, `2905`, `2907`, `2910`, `2911`, `2912`, `2913`, `2915`, `2917`, `2918`, `2921`, `2922`, `2923`, `2925`, `2926`, `2927`, `2929`, `2931`, `2932`, `2933`, `2934`, `2936`, `2938`, `2940`, `2943`, `2946`, `2947`, `2949`, `2951`, `2953`, `2954`, `2957`, `2958`, `2960`, `2961`, `2963`, `2965`, `2966`, `2967`, `2968`, `2971`, `2972`, `2973`, `2974`, `2976`, `2978`, `2980`, `2982`, `2984`, `2985`, `2987`, `2989`, `2991`, `2992`, `2994`, `2996`, `2997`, `2998`, `2999`, `3000`, `3001`, `3002`, `3004`, `3006`, `3010`, `3012`, `3014`, `3015`, `3018`, `3019`, `3021`, `3022`, `3024`, `3026`, `3028`, `3030`, `3032`, `3033`, `3035`, `3036`, `3037`, `3038`, `3040`, `3041`, `3042`, `3043`, `3044`, `3045`, `3046`, `3048`, `3050`, `3051`, `3053`, `3054`, `3055`, `3056`, `3058`, `3060`, `3061`, `3063`, `3064`, `3065`, `3067`, `3068`, `3069`, `3070`, `3071`, `3073`, `3075`, `3077`, `3078`, `3079`, `3080`, `3082`, `3084`, `3086`, `3088`, `3089`, `3092`, `3095`, `3097`, `3099`, `3100`, `3102`, `3104`, `3105`, `3108`, `3109`, `3112`, `3113`, `3114`, `3116`, `3118`, `3119`, `3122`, `3125`, `3126`, `3128`, `3130`, `3132`, `3133`, `3135`, `3136`, `3138`, `3140`, `3142`, `3144`, `3145`, `3146`, `3148`, `3149`, `3151`, `3153`, `3155`, `3157`, `3158`, `3159`, `3160`, `3161`, `3162`, `3164`, `3166`, `3169`, `3171`, `3172`, `3173`, `3174`, `3177`, `3178`, `3180`, `3181`, `3183`, `3185`, `3187`, `3188`, `3189`, `3191`, `3193`, `3194`, `3196`, `3198`, `3201`, `3204`, `3206`, `3207`, `3208`, `3211`, `3212`, `3213`, `3214`, `3215`, `3217`, `3219`, `3221`, `3223`, `3224`, `3227`, `3229`, `3231`, `3233`, `3234`, `3236`, `3238`, `3239`, `3241`, `3243`, `3244`, `3246`, `3247`, `3249`, `3251`, `3253`, `3255`, `3257`, `3258`, `3259`, `3262`, `3264`, `3265`, `3266`, `3268`, `3269`, `3271`, `3272`, `3273`, `3275`, `3276`, `3278`, `3279`, `76`, `3282`, `3284`, `3286`, `3288`, `3289`, `3290`, `3292`, `3294`, `3296`, `3299`, `3302`, `3304`, `3307`, `714`, `3309`, `3312`, `3314`, `3315`, `3316`, `3318`, `3319`, `3320`, `3322`, `3324`, `3326`, `3327`, `3328`, `3330`, `3332`, `3333`, `3336`, `3338`, `3340`, `3342`, `3345`, `3347`, `3348`, `3349`, `3350`, `3352`, `3353`, `3355`, `3357`, `3358`, `3360`, `3361`, `3362`, `3363`, `3364`, `3365`, `3367`, `3368`, `3369`, `3370`, `3371`, `3372`, `3373`, `3374`, `3375`, `3378`, `3381`, `3382`, `3384`, `3387`, `3389`, `3391`, `3392`, `3393`, `3395`, `3396`, `3399`, `3401`, `3404`, `3406`, `3407`, `3409`, `3411`, `3413`, `3415`, `3416`, `3419`, `3421`, `3423`, `3426`, `3427`, `3428`, `3431`, `3432`, `3434`, `3437`, `3438`, `3439`, `3441`, `3442`, `3443`, `3444`, `3445`, `3447`, `3449`, `3451`, `3452`, `3454`, `3455`, `3457`, `3459`, `3461`, `3462`, `3464`, `3467`, `3468`, `3471`, `3473`, `3474`, `3477`, `3478`, `3480`, `3483`, `3484`, `3486`, `3488`, `3489`, `3491`, `3492`, `3493`, `3495`, `3496`, `3498`, `3499`, `3500`, `3501`, `3503`, `3505`, `3506`, `3507`, `3510`, `3512`, `3513`, `3514`, `3516`, `3517`, `3518`, `3519`, `3521`, `3522`, `3524`, `3527`, `3529`, `3530`, `3531`, `3532`, `3534`, `3535`, `3536`, `3538`, `3539`, `3540`, `3541`, `3542`, `3544`, `3547`, `3548`, `3550`, `3552`, `3554`, `3556`, `3557`, `3558`, `3559`, `3560`, `3561`, `3562`, `3565`, `3566`, `3567`, `3568`, `3570`, `3571`, `3572`, `3573`, `3574`, `3575`, `3577`, `3578`, `3580`, `3581`, `3582`, `3583`, `3585`, `3586`, `3587`, `3589`, `3590`, `3592`, `3594`, `3595`, `3596`, `3597`, `3599`, `3601`, `3603`, `3605`, `3606`, `3607`, `3608`, `3610`, `3612`, `3614`, `3616`, `3617`, `3620`, `3622`, `3624`, `3625`, `3627`, `3629`, `3630`, `3631`, `3632`, `3633`, `3636`, `3637`, `3638`, `3639`, `3640`, `3641`, `3642`, `3643`, `3644`, `3645`, `3647`, `3649`, `3651`, `3652`, `3653`, `3654`, `3656`, `3658`, `3659`, `3661`, `3663`, `3664`, `3666`, `3667`, `3668`, `3669`, `3672`, `3674`, `3675`, `3676`, `3677`, `3679`, `3680`, `3683`, `3684`, `3685`, `3687`, `3689`, `3691`, `3694`, `3697`, `3698`, `3699`, `3700`, `3701`, `3703`, `3704`, `3705`, `3706`, `3707`, `3709`, `3710`, `3712`, `3714`, `3715`, `3717`, `3718`, `3719`, `3721`, `3723`, `3725`, `3728`, `3732`, `3733`, `3735`, `3736`, `3738`, `3739`, `3740`, `3742`, `3743`, `3744`, `3747`, `3749`, `3751`, `3754`, `3755`, `3757`, `3760`, `3761`, `3764`, `3765`, `3767`, `3768`, `3771`, `3772`, `3774`, `3777`, `3778`, `3779`, `3781`, `3782`, `3783`, `3785`, `3786`, `3788`, `3789`, `3790`, `3792`, `3796`, `3797`, `3798`, `3799`, `3800`, `3801`, `3802`, `3804`, `3805`, `3807`, `3809`, `3810`, `3811`, `3812`, `3813`, `3814`, `3815`, `3817`, `3818`, `3820`, `3822`, `3824`, `3825`, `3827`, `3828`, `3829`, `3808`, `3830`, `3831`, `3833`, `3834`, `3835`, `3837`, `3838`, `3839`, `3841`, `3843`, `3845`, `3846`, `3848`, `3850`, `3851`, `3854`, `3856`, `3857`, `3858`, `3859`, `3860`, `3861`, `3862`, `3864`, `3865`, `3867`, `3869`, `3871`, `3872`, `3873`, `3874`, `3876`, `3877`, `3880`, `3882`, `3884`, `3885`, `3887`, `3888`, `3891`, `3892`, `3894`, `3895`, `3896`, `3898`, `3900`, `3902`, `3903`, `3904`, `3907`, `3909`, `952`, `3910`, `3912`, `3913`, `3914`, `3916`, `3918`, `3920`, `3921`, `3922`, `3923`, `3924`, `3925`, `3927`, `3929`, `3930`, `3932`, `3933`, `3935`, `3937`, `3940`, `3941`, `3943`, `3944`, `3945`, `3947`, `3948`, `3950`, `3952`, `3953`, `3954`, `3955`, `3956`, `3957`, `3958`, `3959`, `3960`, `3961`, `3962`, `3964`, `3966`, `3967`, `3969`, `3970`, `3972`, `3974`, `3976`, `3977`, `3979`, `3980`, `3981`, `3982`, `3983`, `3985`, `3987`, `3988`, `3989`, `3990`, `3992`, `3993`, `3995`, `3997`, `3998`, `4000`, `4001`, `4002`, `4004`, `4006`, `4007`, `2327`, `4009`, `4011`, `4013`, `4015`, `4017`, `4018`, `4019`, `4021`, `4022`, `4023`, `4025`, `4026`, `4028`, `4030`, `4031`, `4032`, `4034`, `4035`, `4036`, `4037`, `4038`, `4039`, `4041`, `4042`, `4044`, `4045`, `4046`, `4047`, `4048`, `4049`, `4051`, `4052`, `4053`, `4054`, `4055`, `4056`, `4057`, `4058`, `4060`, `4061`, `4063`, `4064`, `4065`, `4067`, `4068`, `4069`, `4070`, `4071`, `4072`, `4073`, `4075`, `4077`, `4078`, `4080`, `4082`, `4084`, `4086`, `4087`, `4089`, `4090`, `4091`, `4092`, `4093`, `4095`, `4096`, `4098`, `4099`, `4100`, `4101`, `4102`, `4103`, `4105`, `4106`, `4108`, `4109`, `4111`, `4113`, `4114`, `4115`, `4117`, `4118`, `4121`, `4124`, `4125`, `4128`, `4129`, `4132`, `4134`, `4136`, `4138`, `4139`, `4140`, `4142`, `4143`, `4144`, `4146`, `4148`, `4150`, `4152`, `4154`, `4156`, `4157`, `4158`, `4160`, `4163`, `4165`, `4167`, `4168`, `4169`, `4171`, `4173`, `4175`, `4177`, `4178`, `4180`, `4182`, `4183`, `4185`, `4187`, `4188`, `4192`, `4193`, `4195`, `4196`, `4198`, `4200`, `4202`, `4204`, `4206`, `4208`, `4210`, `4211`, `4212`, `4214`, `4215`, `4216`, `4219`, `4221`, `4222`, `4223`, `4225`, `4226`, `4228`, `4230`, `4231`, `4233`, `4234`, `4235`, `4238`, `4240`, `4241`, `4243`, `4245`, `4246`, `4248`, `4250`, `4251`, `4252`, `4253`, `4255`, `4257`, `4259`, `4260`, `4262`, `4263`, `4264`, `4266`, `4269`, `4270`, `4273`, `4274`, `4275`, `4276`, `4278`, `4280`, `4282`, `4283`, `4285`, `4287`, `4288`, `4290`, `4292`, `4293`, `4294`, `4296`, `4297`, `4298`, `4300`, `4301`, `4303`, `4304`, `4305`, `4307`, `4310`, `4312`, `4315`, `4318`, `4319`, `4321`, `4324`, `729`, `4325`, `4326`, `4327`, `4328`, `4329`, `4330`, `4331`, `4333`, `4334`, `4336`, `4338`, `4340`, `4342`, `4343`, `4345`, `4347`, `4348`, `4349`, `4350`, `4351`, `4352`, `4353`, `4354`, `4356`, `4357`, `4359`, `4360`, `4361`, `4363`, `4364`, `4367`, `4368`, `4369`, `4370`, `4371`, `4373`, `4374`, `4377`, `4378`, `4380`, `4381`, `4382`, `4384`, `4386`, `4387`, `4389`, `4391`, `4392`, `4393`, `4395`, `4398`, `4400`, `4402`, `4403`, `4404`, `4407`, `4409`, `4410`, `4412`, `4413`, `4415`, `4416`, `4418`, `4421`, `4423`, `4424`, `4425`, `4426`, `4428`, `4429`, `4430`, `4431`, `4432`, `4434`, `4435`, `4436`, `4437`, `4439`, `4441`, `4442`, `4444`, `4445`, `4447`, `4448`, `4449`, `4450`, `4452`, `4454`, `4456`, `4457`, `4459`, `4460`, `4462`, `4464`, `4466`, `4468`, `4471`, `4472`, `4473`, `4474`, `4475`, `4477`, `4478`, `4479`, `4480`, `4482`, `4483`, `4485`, `4486`, `4487`, `4489`, `4490`, `4491`, `4492`, `4493`, `4494`, `4495`, `4496`, `4497`, `4499`, `4501`, `4502`, `4504`, `4506`, `4507`, `4509`, `4512`, `4515`, `4516`, `4518`, `4519`, `4520`, `1317`, `4522`, `4524`, `4526`, `4527`, `4529`, `4531`, `4533`, `4534`, `4535`, `4536`, `4537`, `4540`, `4542`, `4544`, `4545`, `4546`, `4548`, `4549`, `4550`, `4551`, `4552`, `4554`, `4556`, `3313`, `4558`, `4559`, `4561`, `4563`, `4565`, `4566`, `4568`, `4569`, `4572`, `4574`, `4575`, `4576`, `4577`, `4579`, `4581`, `4582`, `4583`, `4584`, `4586`, `4587`, `4588`, `4589`, `4590`, `4592`, `4593`, `4594`, `4595`, `4597`, `4598`, `4599`, `4601`, `4603`, `4604`, `4606`, `4609`, `4611`, `4612`, `4614`, `4617`, `4619`, `4621`, `4622`, `4624`, `4626`, `4628`, `4630`, `4632`, `4634`, `4636`, `4638`, `4639`, `4640`, `4641`, `4642`, `4644`, `4646`, `4647`, `4648`, `4651`, `4652`, `4654`, `4656`, `4657`, `4659`, `4660`, `4661`, `4662`, `4663`, `4664`, `4666`, `4668`, `4669`, `4671`, `4673`, `4674`, `4676`, `4679`, `4681`, `4682`, `4683`, `4684`, `4686`, `4688`, `4690`, `4691`, `4693`, `4694`, `4695`, `4696`, `4698`, `4700`, `4701`, `4704`, `4705`, `4706`, `4707`, `4708`, `4711`, `4714`, `4716`, `4717`, `4718`, `4720`, `4721`, `4722`, `4724`, `4725`, `4726`, `4728`, `4730`, `4731`, `4733`, `4734`, `4736`, `4737`, `4740`, `4741`, `4742`, `4744`, `4746`, `4748`, `4749`, `4750`, `4751`, `4754`, `4757`, `4758`, `480`, `4759`, `4761`, `4763`, `4765`, `4766`, `4768`, `4769`, `4770`, `4772`, `4773`, `4775`, `4776`, `4778`, `4780`, `4782`, `4783`, `4784`, `4785`, `4787`, `4788`, `4789`, `4791`, `4793`, `4795`, `4796`, `4797`, `4798`, `4799`, `4800`, `4801`, `4802`, `4804`, `4805`, `4807`, `4809`, `4810`, `4811`, `4812`, `4813`, `4814`, `4816`, `4817`, `4819`, `4820`, `4822`, `4823`, `4825`, `4826`, `4827`, `4828`, `4829`, `4830`, `4831`, `4834`, `4837`, `4839`, `4841`, `4843`, `4847`, `4848`, `4849`, `4850`, `4852`, `4854`, `4856`, `4858`, `4860`, `4861`, `4863`, `4865`, `4868`, `4870`, `4871`, `4872`, `4874`, `4875`, `4876`, `4878`, `4880`, `4882`, `4883`, `4885`, `4888`, `4890`, `4892`, `4894`, `4896`, `4897`, `4898`, `4900`, `4903`, `4904`, `4907`, `4908`, `4909`, `4911`, `4913`, `4914`, `4915`, `4917`, `4919`, `4921`, `4922`, `4924`, `4925`, `4927`, `4928`, `4929`, `4933`, `4935`, `4936`, `4937`, `4938`, `4939`, `4941`, `4942`, `4943`, `4944`, `4946`, `4949`, `4951`, `4952`, `4954`, `4955`, `4957`, `4958`, `4959`, `4960`, `4962`, `1494`, `4963`, `4965`, `4966`, `4967`, `4970`, `4972`, `4973`, `4974`, `4975`, `4976`, `4977`, `4980`, `4982`, `4983`, `2975`, `4985`, `4986`, `4987`, `4988`, `4989`, `4990`, `4993`, `4995`, `4996`, `4997`, `4998`, `5000`, `5002`, `5003`, `5005`, `5006`, `5007`, `5009`, `5010`, `5012`, `5014`, `5016`, `5017`, `5019`, `5021`, `5023`, `5024`, `5025`, `5029`, `5031`, `5032`, `5034`, `5036`, `5038`, `5039`, `5042`, `5044`, `5045`, `5046`, `5048`, `5051`, `5053`, `5056`, `5057`, `5060`, `5063`, `5065`, `5067`, `5068`, `5070`, `5072`, `5073`, `5074`, `5075`, `5077`, `5078`, `5079`, `5081`, `5083`, `5085`, `5087`, `5089`, `5091`, `5093`, `5095`, `5097`, `5098`, `5100`, `5101`, `5102`, `5103`, `5105`, `5106`, `5107`, `5108`, `5109`, `5110`, `5111`, `5113`, `5114`, `5115`, `5116`, `5117`, `5118`, `5119`, `5120`, `5122`, `5124`, `5127`, `5129`, `5131`, `5132`, `5133`, `5134`, `5135`, `5137`, `5139`, `5140`, `5141`, `5142`, `5145`, `5146`, `5147`, `5148`, `5149`, `5151`, `5153`, `5155`, `5157`, `5158`, `5160`, `5161`, `5162`, `5163`, `5164`, `5165`, `5166`, `5167`, `5168`, `5169`, `5171`, `5173`, `5175`, `5177`, `5179`, `5180`, `5182`, `5183`, `5185`, `5186`, `5188`, `5189`, `5190`, `5191`, `5193`, `5194`, `5196`, `5197`, `5198`, `5200`, `5203`, `5205`, `5206`, `5207`, `5208`, `5211`, `5213`, `5215`, `5217`, `5218`, `5219`, `5221`, `5222`, `5223`, `5225`, `5226`, `5227`, `5228`, `5229`, `5231`, `5232`, `5235`, `5237`, `5238`, `5239`, `5240`, `5242`, `5243`, `5244`, `5246`, `5248`, `5250`, `5253`, `5254`, `5256`, `5257`, `5259`, `5260`, `5261`, `5263`, `5265`, `5267`, `5268`, `5269`, `5270`, `5271`, `5272`, `5273`, `5275`, `5276`, `5277`, `5278`, `5279`, `5281`, `5282`, `5284`, `5285`, `5286`, `5287`, `5289`, `5291`, `5293`, `5294`, `5296`, `5298`, `5299`, `5301`, `5302`, `5304`, `5306`, `5307`, `5308`, `5309`, `5310`, `5312`, `5314`, `5315`, `5316`, `5318`, `5320`, `5321`, `5324`, `5326`, `5327`, `5328`, `5329`, `5330`, `5332`, `5335`, `5337`, `5338`, `5339`, `5341`, `5342`, `5343`, `5345`, `5346`, `5347`, `5350`, `5351`, `5353`, `5355`, `5356`, `5358`, `5359`, `5360`, `5361`, `5362`, `5364`, `5366`, `5368`, `5370`, `5372`, `5374`, `5375`, `5377`, `5378`, `5379`, `5380`, `5381`, `5382`, `5383`, `5384`, `5385`, `5386`, `5388`, `5390`, `5391`, `5393`, `5395`, `5397`, `5399`, `5401`, `5402`, `5403`, `5405`, `5407`, `5409`, `5410`, `5412`, `5413`, `5414`, `5416`, `5417`, `5419`, `5420`, `5421`, `5424`, `5426`, `5427`, `5428`, `5430`, `5431`, `5432`, `5433`, `5434`, `5435`, `5437`, `5438`, `5440`, `5441`, `5442`, `5443`, `5444`, `5446`, `5448`, `5449`, `5450`, `5451`, `5452`, `5453`, `5454`, `5455`, `5456`, `5458`, `5459`, `5461`, `5462`, `5465`, `5467`, `5469`, `5471`, `5473`, `5475`, `5476`, `5477`, `5478`, `5479`, `5480`, `5482`, `5483`, `5484`, `5485`, `5486`, `5489`, `5490`, `5492`, `5493`, `5494`, `5496`, `5498`, `5499`, `5500`, `5501`, `5503`, `5504`, `5505`, `5506`, `5507`, `5508`, `5510`, `5511`, `5513`, `5514`, `5516`, `5517`, `5518`, `5519`, `5520`, `5521`, `5522`, `5523`, `5525`, `5526`, `5528`, `5531`, `5533`, `5535`, `5536`, `5539`, `5540`, `5541`, `5542`, `5543`, `5545`, `5546`, `5547`, `5548`, `5549`, `5550`, `5552`, `5554`, `5555`, `5556`, `5557`, `5558`, `5559`, `5560`, `5561`, `5562`, `5564`, `5565`, `5566`, `5567`, `5569`, `5570`, `5571`, `5572`, `5573`, `5574`, `5576`, `5578`, `5579`, `5580`, `5582`, `5583`, `5584`, `5585`, `5587`, `5588`, `5589`, `5590`, `5591`, `5593`, `5594`, `5595`, `5596`, `5597`, `5599`, `5601`, `5602`, `5603`, `5604`, `5605`, `5606`, `5608`, `5609`, `5610`, `5612`, `5613`, `5615`, `5617`, `5618`, `5619`, `5620`, `5622`, `5623`, `5624`, `5625`, `5515`, `5628`, `5630`, `5632`, `5633`, `5635`, `5636`, `5637`, `5638`, `5640`, `5642`, `5644`, `5645`, `5646`, `5648`, `5650`, `5652`, `5654`, `5655`, `5658`, `5659`, `5660`, `5661`, `5663`, `5664`, `5666`, `5667`, `5668`, `5670`, `5671`, `5672`, `5674`, `5675`, `5677`, `5679`, `5681`, `5682`, `5683`, `5684`, `5686`, `5687`, `5688`, `5690`, `5691`, `5693`, `5695`, `5696`, `5699`, `5700`, `5702`, `5703`, `5705`, `5708`, `5709`, `5710`, `5711`, `5712`, `5715`, `5716`, `5717`, `5718`, `5719`, `5721`, `5722`, `5723`, `5724`, `5727`, `5729`, `5730`, `5731`, `5732`, `5734`, `5736`, `5737`, `5740`, `5742`, `5744`, `5746`, `5748`, `5749`, `5750`, `5751`, `5752`, `5754`, `5755`, `5758`, `5760`, `5762`, `5764`, `5766`, `5769`, `5770`, `5772`, `5773`, `5776`, `5777`, `5779`, `5780`, `5781`, `5783`, `5785`, `5786`, `5788`, `5790`, `5792`, `5793`, `5794`, `5796`, `5797`, `5800`, `5801`, `5802`, `5803`, `5804`, `5806`, `5808`, `5809`, `5810`, `5812`, `5815`, `5816`, `5819`, `5820`, `5823`, `5824`, `5826`, `5828`, `5831`, `5832`, `5834`, `5836`, `5838`, `5839`, `5840`, `5841`, `5842`, `5843`, `5844`, `5846`, `5847`, `5848`, `5851`, `5853`, `5854`, `5855`, `5856`, `5857`, `5859`, `5861`, `5862`, `5864`, `5866`, `5867`, `5868`, `5870`, `5872`, `5875`, `5876`, `5877`, `5879`, `5881`, `5882`, `5883`, `5884`, `5886`, `5887`, `5888`, `5889`, `5890`, `5891`, `5892`, `5893`, `5895`, `5897`, `5898`, `2681`, `5899`, `5900`, `5901`, `5902`, `5903`, `5906`, `5907`, `5908`, `5909`, `5912`, `5913`, `5915`, `5917`, `5920`, `5921`, `5922`, `5923`, `5924`, `5925`, `5926`, `5927`, `5929`, `5930`, `5931`, `5932`, `5934`, `5935`, `5936`, `5937`, `5938`, `5939`, `5940`, `5941`, `5942`, `5943`, `5944`, `5945`, `5947`, `5948`, `5951`, `5952`, `5953`, `5955`, `5956`, `5957`, `5959`, `5961`, `4027`, `5963`, `5964`, `5965`, `5966`, `5968`, `5970`, `5971`, `5972`, `5973`, `5974`, `5976`, `5978`, `5979`, `5980`, `5981`, `5982`, `5984`, `5985`, `5986`, `5987`, `5988`, `5989`, `5991`, `5992`, `5994`, `5996`, `5997`, `5998`, `5999`, `6000`, `6001`, `6003`, `6004`, `6005`, `6006`, `6007`, `6008`, `6009`, `6010`, `6011`, `6012`, `6014`, `6015`, `6016`, `6018`, `6019`, `6021`, `6022`, `6023`, `6024`, `6026`, `6029`, `6030`, `6032`, `6034`, `6036`, `6038`, `6039`, `6040`, `6041`, `6043`, `6045`, `6046`, `6047`, `6048`, `6049`, `6050`, `6051`, `6052`, `6054`, `6055`, `6056`, `6058`, `6059`, `6061`, `6063`, `6064`, `6066`, `6067`, `6069`, `6071`, `6073`, `6074`, `6076`, `6077`, `6079`, `6081`, `6083`, `6085`, `6086`, `6087`, `6090`, `6094`, `6095`, `6096`, `6099`, `6101`, `6102`, `6103`, `6104`, `6105`, `6106`, `6108`, `6109`, `6110`, `6112`, `6113`, `6115`, `6117`, `6118`, `6119`, `6121`, `6123`, `6124`, `6125`, `6126`, `6128`, `6129`, `6130`, `6131`, `6132`, `6134`, `6136`, `6138`, `6139`, `6140`, `6142`, `6143`, `6145`, `6146`, `6147`, `6148`, `6149`, `6150`, `6151`, `6152`, `6153`, `6154`, `6155`, `6157`, `6158`, `6159`, `6160`, `6162`, `6163`, `6164`, `6165`, `6166`, `6168`, `6169`, `6170`, `6173`, `6174`, `6176`, `6178`, `6179`, `6180`, `6181`, `6182`, `6183`, `6184`, `6185`, `6186`, `6188`, `6190`, `6193`, `6194`, `6195`, `6197`, `6199`, `6201`, `6202`, `6203`, `6204`, `6205`, `6206`, `6207`, `6209`, `6211`, `6213`, `6214`, `6216`, `6218`, `6219`, `6220`, `6222`, `6223`, `6225`, `6226`, `6227`, `6228`, `6229`, `6231`, `6233`, `6234`, `6236`, `6238`, `6239`, `6241`, `6242`, `6243`, `6244`, `6245`, `6246`, `6247`, `6248`, `6249`, `6250`, `6252`, `6253`, `6255`, `6257`, `6259`, `6261`, `6262`, `6264`, `6265`, `6266`, `6268`, `6271`, `6272`, `6273`, `6274`, `6275`, `6277`, `6278`, `6279`, `6281`, `6282`, `6283`, `6284`, `6285`, `6286`, `6287`, `6288`, `6289`, `6291`, `6293`, `6294`, `6295`, `6296`, `6297`, `6298`, `6300`, `6302`, `6303`, `6304`, `6306`, `6308`, `6309`, `6312`, `6313`, `6315`, `6317`, `6319`, `6320`, `6321`, `6323`, `6324`, `6325`, `6327`, `6329`, `6330`, `6331`, `6332`, `6333`, `6334`, `6335`, `6336`, `6339`, `6340`, `6342`, `6343`, `6346`, `6349`, `6353`, `6355`, `6357`, `6358`, `6359`, `6360`, `6361`, `6363`, `6364`, `6365`, `6366`, `6368`, `6370`, `6372`, `6373`, `6375`, `6376`, `6377`, `6378`, `6379`, `6380`, `6384`, `6386`, `6388`, `6389`, `6390`, `6392`, `6393`, `6397`, `6398`, `6400`, `6402`, `6404`, `6405`, `6406`, `6408`, `6410`, `6412`, `6414`, `6415`, `6417`, `6418`, `6419`, `6420`, `6422`, `6423`, `6424`, `6425`, `6426`, `6427`, `6428`, `6430`, `6432`, `6433`, `6434`, `6435`, `6436`, `6438`, `6440`, `6441`, `6442`, `6443`, `6444`, `6445`, `6446`, `6447`, `6449`, `6450`, `6452`, `6453`, `6454`, `6455`, `6457`, `6458`, `6461`, `6462`, `6464`, `6465`, `6466`, `6467`, `6469`, `6470`, `6471`, `6472`, `6473`, `6474`, `6475`, `6476`, `6477`, `6480`, `6481`, `6482`, `6483`, `6484`, `6485`, `6486`, `6489`, `6490`, `6492`, `6494`, `6496`, `6497`, `6499`, `6500`, `6501`, `6503`, `6504`, `6505`, `6508`, `6509`, `6511`, `6513`, `6514`, `6516`, `6517`, `6519`, `6520`, `6521`, `6522`, `6523`, `6525`, `6526`, `6527`, `6528`, `6529`, `6533`, `6534`, `6536`, `6537`, `6538`, `6540`, `6542`, `6544`, `6545`, `6546`, `6548`, `6549`, `6550`, `6551`, `6553`, `6554`, `6555`, `6557`, `6559`, `6560`, `6561`, `6563`, `6564`, `6565`, `6566`, `6567`, `6568`, `6569`, `6570`, `6571`, `6572`, `6573`, `6574`, `6576`, `6577`, `6578`, `6579`, `6581`, `6582`, `6584`, `6585`, `6586`, `6588`, `6589`, `6590`, `6591`, `6592`, `6596`, `6597`, `6598`, `6599`, `6600`, `6602`, `6604`, `6606`, `6607`, `6609`, `6610`, `6611`, `6613`, `6614`, `6615`, `6616`, `6618`, `6620`, `6622`, `6623`, `6624`, `6626`, `6627`, `6628`, `6629`, `6630`, `6631`, `6632`, `6635`, `6637`, `6639`, `6641`, `6644`, `6646`, `6649`, `6651`, `6653`, `6654`, `6656`, `6657`, `6658`, `6660`, `6661`, `6662`, `6663`, `6665`, `6666`, `6667`, `6669`, `6670`, `6671`, `6673`, `6674`, `6676`, `6677`, `6679`, `6680`, `6682`, `6684`, `6685`, `6687`, `6688`, `6689`, `6691`, `6693`, `6694`, `6696`, `6698`, `6700`, `6701`, `6702`, `6704`, `6705`, `6707`, `6708`, `6709`, `6711`, `6712`, `6717`, `6718`, `6720`, `6722`, `6724`, `6725`, `6727`, `6728`, `6729`, `6730`, `6732`, `6734`, `6736`, `6738`, `6740`, `6743`, `6744`, `6745`, `6747`, `6749`, `6750`, `6752`, `6753`, `6754`, `6755`, `6756`, `6758`, `6760`, `6761`, `6763`, `6765`, `6767`, `6769`, `6770`, `6771`, `6773`, `6775`, `6777`, `6779`, `6780`, `6782`, `6783`, `6784`, `6786`, `6788`, `6789`, `6790`, `6791`, `6792`, `6793`, `6796`, `6798`, `6799`, `6800`, `6801`, `6802`, `6804`, `6805`, `6807`, `6808`, `6810`, `6811`, `6814`, `6815`, `6817`, `6818`, `6820`, `6821`, `6822`, `6823`, `6825`, `6827`, `6828`, `6829`, `6831`, `6832`, `6836`, `6838`, `6840`, `6842`, `6844`, `6846`, `6847`, `6849`, `6851`, `6853`, `6854`, `6855`, `6858`, `6859`, `6861`, `6863`, `6865`, `6866`, `6867`, `6868`, `6870`, `6873`, `6875`, `6876`, `6877`, `6878`, `6879`, `6880`, `6881`, `6883`, `6884`, `6885`, `6886`, `6888`, `6890`, `6892`, `6893`, `6894`, `6897`, `6899`, `6900`, `6902`, `6903`, `6904`, `6905`, `6906`, `6907`, `6910`, `6912`, `6913`, `6915`, `6916`, `6919`, `6921`, `6923`, `6924`, `6926`, `6927`, `6928`, `6930`, `6932`, `6934`, `6935`, `6936`, `6938`, `6940`, `6943`, `6945`, `6947`, `6950`, `6952`, `160`, `6953`, `6954`, `6955`, `6956`, `6958`, `6959`, `6961`, `6963`, `6964`, `6965`, `6966`, `6968`, `6969`, `6970`, `6971`, `6973`, `6974`, `6976`, `6977`, `6978`, `6979`, `6980`, `6981`, `6982`, `6984`, `6986`, `6988`, `6990`, `6991`, `6993`, `6995`, `6996`, `6998`, `7000`, `7001`, `7004`, `7005`, `7006`, `7007`, `7009`, `7010`, `7012`, `7013`, `7015`, `7016`, `7017`, `7020`, `7021`, `7023`, `7024`, `7026`, `7027`, `7028`, `7029`, `7030`, `7031`, `7032`, `7034`, `7035`, `7037`, `7038`, `7039`, `7040`, `7041`, `7043`, `7045`, `7047`, `7048`, `7051`, `7053`, `7055`, `7057`, `7058`, `7060`, `7062`, `7063`, `7064`, `7066`, `7068`, `7070`, `7071`, `7073`, `7074`, `7076`, `7078`, `7079`, `7080`, `7081`, `7082`, `7084`, `7086`, `7088`, `7090`, `7091`, `7092`, `7093`, `7095`, `7096`, `7097`, `7099`, `7100`, `7101`, `7103`, `7104`, `7105`, `7107`, `7108`, `7111`, `7112`, `7114`, `7115`, `7118`, `7120`, `7122`, `7124`, `7126`, `7127`, `7128`, `7131`, `7132`, `7134`, `7136`, `7138`, `7140`, `7142`, `7144`, `7146`, `7147`, `7150`, `7152`, `7154`, `7156`, `7158`, `7160`, `7161`, `7163`, `7164`, `7165`, `7167`, `7168`, `7170`, `7171`, `7173`, `7174`, `7176`, `7177`, `7179`, `7182`, `7183`, `7184`, `7186`, `7188`, `7189`, `7190`, `7191`, `7192`, `7193`, `7194`, `7195`, `7197`, `7199`, `7200`, `7202`, `7203`, `7205`, `7207`, `7209`, `7210`, `7213`, `7215`, `7217`, `7219`, `7220`, `7221`, `7223`, `7226`, `7228`, `7229`, `7231`, `7232`, `7233`, `7234`, `7235`, `7236`, `7238`, `7239`, `7241`, `7242`, `7244`, `7245`, `7247`, `7249`, `7250`, `7251`, `7252`, `7254`, `7255`, `7257`, `7258`, `7259`, `7261`, `7263`, `7264`, `7266`, `7267`, `7269`, `7270`, `7271`, `7272`, `7273`, `7274`, `7276`, `7277`, `7278`, `7279`, `7281`, `7282`, `7283`, `7286`, `7287`, `7289`, `7290`, `7291`, `7292`, `7295`, `7296`, `7297`, `7298`, `7300`, `7302`, `7303`, `7304`, `7306`, `7308`, `7309`, `7310`, `7311`, `7312`, `7313`, `7314`, `7316`, `7317`, `7320`, `7321`, `7322`, `7323`, `7325`, `7327`, `7329`, `7331`, `7333`, `7334`, `7335`, `7337`, `7338`, `7339`, `7341`, `7343`, `7344`, `7346`, `7347`, `7349`, `7350`, `7351`, `7352`, `7354`, `7356`, `7357`, `7359`, `7360`, `7361`, `7362`, `7364`, `7365`, `7367`, `7369`, `7370`, `7371`, `7372`, `7373`, `7374`, `7375`, `7376`, `7377`, `7378`, `7380`, `7381`, `7383`, `7384`, `7385`, `7386`, `7387`, `7388`, `7389`, `7391`, `7392`, `7393`, `7395`, `7397`, `7399`, `7400`, `7401`, `7402`, `7403`, `7404`, `7406`, `7408`, `7411`, `7412`, `7413`, `7414`, `7415`, `7416`, `7417`, `7418`, `7422`, `7424`, `7426`, `7428`, `7430`, `7432`, `7434`, `7436`, `7438`, `7440`, `7442`, `7443`, `7445`, `7447`, `7449`, `7451`, `7453`, `7454`, `7456`, `7458`, `7461`, `7463`, `7464`, `7465`, `7467`, `7469`, `7471`, `7473`, `7475`, `7477`, `7479`, `7481`, `7483`, `7485`, `7487`, `7488`, `7490`, `7491`, `7492`, `7494`, `7495`, `7497`, `7498`, `7500`, `7502`, `7504`, `7506`, `7508`, `7509`, `7511`, `7512`, `7513`, `7515`, `7516`, `7517`, `7519`, `7521`, `7523`, `7525`, `7527`, `7529`, `7531`, `7533`, `7535`, `7536`, `7538`, `7540`, `7542`, `7545`, `7547`, `7549`, `7550`, `7551`, `7553`, `7555`, `7557`, `7558`, `7560`, `7562`, `7564`, `7565`, `7566`, `7568`, `7569`, `7570`, `7571`, `7573`, `7575`, `7576`, `7577`, `7579`, `7581`, `7582`, `7584`, `7585`, `7421`, `7586`, `7588`, `7589`, `7590`, `7592`, `7595`, `7596`, `7598`, `7600`, `7602`, `7603`, `7604`, `7605`, `7606`, `7608`, `7610`, `7611`, `7613`, `7615`, `7617`, `7619`, `7620`, `7622`, `7623`, `7626`, `7627`, `7628`, `7630`, `7632`, `7633`, `7634`, `7635`, `7637`, `7638`, `7639`, `7640`, `7641`, `7642`, `7643`, `7644`, `7646`, `7648`, `7649`, `7651`, `7653`, `7655`, `7657`, `7659`, `7662`, `7663`, `7664`, `7665`, `7667`, `7668`, `7670`, `7672`, `7674`, `7676`, `7678`, `7679`, `7680`, `7681`, `7682`, `7683`, `7684`, `7687`, `7689`, `7691`, `7692`, `7693`, `7695`, `7697`, `7699`, `7700`, `7701`, `7702`, `7704`, `7705`, `7706`, `7708`, `7709`, `7710`, `7711`, `7712`, `7714`, `7715`, `7716`, `7717`, `7718`, `7719`, `7720`, `7721`, `7723`, `7724`, `7725`, `7726`, `7728`, `7730`, `7732`, `7733`, `7734`, `7735`, `7736`, `7737`, `7738`, `7740`, `7741`, `7742`, `7743`, `7744`, `7745`, `7746`, `7747`, `7748`, `7751`, `7752`, `7753`, `7754`, `7755`, `7756`, `7757`, `7759`, `7761`, `7762`, `7764`, `7766`, `7768`, `7769`, `7771`, `7773`, `7774`, `7775`, `7776`, `7777`, `7779`, `7781`, `7783`, `7784`, `7786`, `7787`, `7790`, `7792`, `7793`, `7794`, `7796`, `7798`, `7801`, `7803`, `7805`, `7808`, `7809`, `7810`, `7812`, `7813`, `7814`, `7816`, `7817`, `7819`, `7820`, `7821`, `7822`, `7823`, `7826`, `7828`, `7830`, `7831`, `7833`, `7834`, `7836`, `7837`, `7839`, `7840`, `7842`, `7843`, `7845`, `7846`, `7847`, `7848`, `7849`, `7850`, `7852`, `7853`, `7854`, `7855`, `7856`, `7857`, `7858`, `7859`, `7860`, `7861`, `7863`, `7864`, `7865`, `7866`, `7867`, `7869`, `7870`, `7871`, `7872`, `7874`, `7875`, `7876`, `7877`, `7878`, `7879`, `7880`, `7882`, `7883`, `7884`, `7885`, `7887`, `7889`, `7890`, `7891`, `7892`, `7893`, `7894`, `7896`, `7897`, `7899`, `7900`, `7901`, `7902`, `7903`, `7904`, `7905`, `7906`, `7907`, `7910`, `7911`, `7913`, `7914`, `7916`, `7918`, `7920`, `7923`, `7924`, `7926`, `7929`, `7930`, `7932`, `7935`, `7936`, `7937`, `7938`, `7940`, `7941`, `7942`, `7944`, `7947`, `7952`, `7954`, `7955`, `7957`, `7960`, `7961`, `7963`, `7965`, `7966`, `7967`, `7969`, `7971`, `7974`, `7975`, `7977`, `7979`, `7980`, `7981`, `7983`, `7985`, `7987`, `7988`, `7990`, `7993`, `7994`, `7995`, `7996`, `7998`, `7999`, `8000`, `8001`, `8002`, `8003`, `8004`, `8005`, `8007`, `8008`, `8009`, `8011`, `8013`, `8015`, `8018`, `8020`, `8022`, `8023`, `8024`, `8025`, `8027`, `8028`, `8029`, `8031`, `8032`, `8033`, `8035`, `8036`, `8037`, `8038`, `8039`, `8041`, `8042`, `8043`, `8044`, `8045`, `8047`, `8048`, `8049`, `8051`, `8052`, `8053`, `8055`, `8058`, `8059`, `8062`, `8063`, `8065`, `8066`, `8067`, `8068`, `8069`, `8070`, `8071`, `8072`, `8074`, `8076`, `8079`, `8080`, `8081`, `8082`, `8083`, `8084`, `8086`, `8087`, `8088`, `8089`, `8090`, `8091`, `8093`, `8095`, `8096`, `8099`, `338`, `8100`, `8101`, `8102`, `8103`, `8105`, `8106`, `8107`, `8108`, `8110`, `8111`, `8112`, `8113`, `8115`, `8116`, `8117`, `8118`, `8120`, `8121`, `8122`, `8124`, `8127`, `8128`, `8129`, `8130`, `8132`, `8133`, `8135`, `8137`, `8138`, `8139`, `8140`, `8141`, `8142`, `8143`, `8145`, `8147`, `8148`, `8150`, `8151`, `8152`, `8154`, `8156`, `8157`, `8158`, `8159`, `8160`, `8162`, `8163`, `8164`, `8165`, `8167`, `8168`, `8169`, `8171`, `8173`, `8174`, `8175`, `8177`, `8178`, `8179`, `8180`, `8181`, `8183`, `8184`, `8186`, `8187`, `8189`, `8191`, `8192`, `5415`, `8194`, `8195`, `8196`, `8197`, `8198`, `8199`, `8200`, `8201`, `8202`, `8204`, `1393`, `8205`, `8206`, `8209`, `8210`, `8211`, `8213`, `8214`, `8216`, `8217`, `8218`, `8220`, `8222`, `8223`, `8225`, `8226`, `8227`, `8228`, `8230`, `8232`, `8233`, `8234`, `8236`, `8237`, `8239`, `8240`, `8241`, `8242`, `8243`, `8244`, `8245`, `8246`, `8247`, `8248`, `8249`, `8252`, `8254`, `8256`, `8257`, `8258`, `8259`, `8260`, `8261`, `8263`, `8265`, `8266`, `8268`, `584`, `8270`, `8255`, `8272`, `8273`, `8274`, `8276`, `8278`, `8280`, `8281`, `8282`, `8284`, `8285`, `8286`, `8287`, `8289`, `8291`, `8293`, `8296`, `8297`, `8298`, `8299`, `8300`, `8301`, `8302`, `8304`, `8305`, `8306`, `8308`, `8310`, `8312`, `8313`, `8314`, `8316`, `8318`, `8320`, `8321`, `8322`, `8323`, `8324`, `8326`, `8327`, `8328`, `8329`, `8330`, `8331`, `8332`, `8333`, `8334`, `8335`, `8336`, `8337`, `8338`, `8339`, `8340`, `8341`, `8342`, `8343`, `8344`, `8345`, `8347`, `8348`, `8349`, `8350`, `8351`, `8352`, `8353`, `8354`, `8355`, `8356`, `8357`, `8359`, `8360`, `8362`, `8364`, `8366`, `8367`, `8368`, `8371`, `8372`, `8373`, `8374`, `8375`, `8376`, `8377`, `8378`, `8379`, `8380`, `8381`, `8382`, `8383`, `8384`, `8385`, `8387`, `8390`, `8391`, `8393`, `8394`, `8395`, `8397`, `8398`, `8399`, `8400`, `8401`, `8402`, `8403`, `8404`, `8406`, `8408`, `8409`, `8411`, `8412`, `8414`, `8415`, `8416`, `8417`, `8419`, `8422`, `8423`, `8425`, `8426`, `8428`, `8430`, `8431`, `8432`, `8433`, `8435`, `8436`, `8437`, `8438`, `8439`, `8441`, `8442`, `8443`, `8444`, `8445`, `8446`, `8448`, `8449`, `8450`, `8451`, `8452`, `8453`, `8454`, `8456`, `8457`, `8458`, `8461`, `8462`, `8464`, `8465`, `8466`, `8467`, `8468`, `8469`, `8470`, `8471`, `8473`, `8474`, `8475`, `8476`, `8477`, `8479`, `8482`, `8483`, `8486`, `8489`, `8490`, `8491`, `8493`, `8495`, `8496`, `8497`, `8498`, `8499`, `8500`, `8501`, `8502`, `8503`, `8504`, `8505`, `8506`, `8507`, `8509`, `8511`, `8512`, `8513`, `8514`, `8515`, `8517`, `8519`, `8520`, `8521`, `8522`, `8523`, `8524`, `8525`, `8526`, `8527`, `8529`, `8530`, `8532`, `8533`, `8534`, `8535`, `8536`, `8537`, `8539`, `8541`, `8542`, `8543`, `5344`, `8545`, `8546`, `8551`, `8552`, `8553`, `8554`, `8555`, `8556`, `8557`, `8558`, `8559`, `8560`, `8562`, `8565`, `8566`, `8567`, `8568`, `8569`, `8570`, `8571`, `8572`, `8573`, `8574`, `8575`, `8578`, `8579`, `8580`, `8582`, `8584`, `8585`, `8586`, `8587`, `8588`, `8589`, `8590`, `8591`, `8592`, `8593`, `8595`, `8596`, `8597`, `8598`, `8599`, `8600`, `8601`, `8602`, `3087`, `8603`, `8604`, `8605`, `8606`, `8607`, `8608`, `8609`, `8610`, `8611`, `8612`, `8613`, `8614`, `8616`, `8617`, `8618`, `8619`, `8620`, `8621`, `8623`, `8625`, `8626`, `8629`, `8631`, `8633`, `8634`, `8635`, `8637`, `8638`, `8639`, `8641`, `8642`, `8643`, `8645`, `8646`, `8647`, `8649`, `8650`, `8651`, `8652`, `8653`, `8654`, `8655`, `8656`, `8657`, `8658`, `8659`, `8660`, `8661`, `8662`, `8663`, `8664`, `8665`, `8666`, `8669`, `8670`, `8671`, `8672`, `8673`, `8674`, `8675`, `8676`, `8678`, `8679`, `8681`, `8682`, `8683`, `8684`, `8685`, `8687`, `8688`, `8689`, `8690`, `8691`, `8692`, `8694`, `8696`, `8698`, `8699`, `8700`, `8701`, `8702`, `8703`, `8704`, `8705`, `8706`, `8707`, `8708`, `8709`, `8710`, `8711`, `8712`, `8713`, `8714`, `8715`, `8716`, `8717`, `8718`, `8719`, `8720`, `8721`, `8722`, `8723`, `8724`, `8725`, `8726`, `8727`, `8728`, `8729`, `8730`, `8731`, `8732`, `8733`, `8734`, `8735`, `8736`, `8737`, `8738`, `8739`, `8740`, `8741`, `8742`, `8743`, `8744`, `8745`, `8746`, `8747`, `8748`, `8749`, `8750`, `8751`, `8752`, `8754`, `8755`, `8756`, `8757`, `8758`, `8759`, `8760`, `8761`, `8763`, `8764`, `8765`, `8766`, `8768`, `8769`, `8770`, `8771`, `8772`, `8773`, `8774`, `8775`, `8776`, `8777`, `8779`, `8780`, `8781`, `8782`, `8783`, `8784`, `8785`, `8786`, `8787`, `8788`, `8789`, `8790`, `8791`, `8792`, `8794`, `8795`, `8796`, `8797`, `8799`, `8800`, `8801`, `8802`, `8803`, `8804`, `8805`, `8806`, `8807`, `8810`, `8811`, `8812`, `8815`, `8816`, `8818`, `8819`, `8820`, `8821`, `8822`, `8823`, `8824`, `8825`, `8826`, `8828`, `8829`, `8830`, `8831`, `8833`, `8834`, `8835`, `8836`, `8837`, `8838`, `8840`, `8841`, `8843`, `8844`, `8845`, `8846`, `8847`, `8848`, `8849`, `8851`, `8853`, `8854`, `8855`, `8856`, `8858`, `8859`, `8860`, `8861`, `8862`, `8863`, `8864`, `8865`, `8867`, `8868`, `8869`, `8871`, `8872`, `8873`, `8874`, `8875`, `8876`, `8877`, `8878`, `8879`, `8880`, `8881`, `8882`, `8884`, `8886`, `8887`, `8888`, `8889`, `8890`, `8891`, `8892`, `8894`, `8895`, `8896`, `8899`, `8900`, `8901`, `8902`, `8903`, `8904`, `8906`, `8908`, `8910`, `8912`, `8914`, `8915`, `8916`, `8917`, `8918`, `8919`, `8921`, `8923`, `8925`, `8926`, `8927`, `8928`, `8930`, `8932`, `8934`, `8936`, `8938`, `8940`, `8942`, `8944`, `8946`, `8947`, `8949`, `8951`, `8953`, `8954`, `8955`, `8956`, `8957`, `8958`, `8959`, `8960`, `8961`, `8963`, `8965`, `8966`, `8968`, `8969`, `8971`, `8973`, `8975`, `8976`, `8977`, `8978`, `8980`, `8981`, `8982`, `8984`, `8986`, `8987`, `8988`, `8989`, `8991`, `8993`, `8994`, `8996`, `8998`, `9000`, `9002`, `9003`, `9005`, `9007`, `9008`, `9009`, `9010`, `9011`, `9012`, `9014`, `9016`, `9017`, `9019`, `9021`, `9023`, `9024`, `9026`, `985`, `2497`, `6237`, `6625`, `9028`, `9029`, `9031`, `9032`, `9034`, `9035`, `9036`, `9038`, `9040`, `9041`, `9042`, `9043`, `9044`, `9046`, `9047`, `9048`, `9050`, `9052`, `9053`, `9054`, `9055`, `9056`, `9058`, `9059`, `9060`, `9061`, `9062`, `9065`, `9066`, `9067`, `9068`, `3741`, `9069`, `9070`, `9071`, `9073`, `9074`, `9076`, `9077`, `9079`, `9081`, `9082`, `9084`, `9085`, `9086`, `9088`, `9089`, `9092`, `9093`, `9095`, `9096`, `9098`, `9099`, `9100`, `9101`, `9103`, `9104`, `9105`, `9107`, `9108`, `9110`, `9113`, `9115`, `9117`, `9118`, `9119`, `9120`, `9121`, `9122`, `9123`, `9124`, `9125`, `9126`, `9128`, `9130`, `9131`, `9132`, `9133`, `9135`, `9136`, `9137`, `9138`, `9139`, `9140`, `9143`, `9145`, `9147`, `9148`, `9150`, `9151`, `9152`, `9153`, `9154`, `9155`, `9157`, `9159`, `9160`, `9161`, `9162`, `9164`, `9165`, `9167`, `9169`, `4571`, `5714`, `9171`, `9173`, `9174`, `9176`, `9178`, `9179`, `9181`, `9182`, `9184`, `9186`, `9187`, `9188`, `9189`, `9190`, `9191`, `9192`, `9193`, `9195`, `9196`, `9197`, `9198`, `9200`, `9202`, `9203`, `9204`, `9205`, `9206`, `9207`, `9208`, `9209`, `9211`, `9212`, `9214`, `9215`, `9217`, `9218`, `9219`, `9220`, `9221`, `9222`, `9223`, `9224`, `9226`, `9228`, `9230`, `9231`, `9232`, `9234`, `9235`, `9237`, `9240`, `9242`, `9244`, `9246`, `9247`, `9249`, `9251`, `9252`, `9254`, `9256`, `9257`, `9258`, `9259`, `9260`, `9261`, `9262`, `9263`, `9264`, `9265`, `9266`, `9267`, `9268`, `9271`, `9273`, `9274`, `9275`, `9277`, `9278`, `9280`, `9281`, `9282`, `9283`, `9284`, `9285`, `9286`, `9287`, `9288`, `9289`, `9291`, `9292`, `9293`, `9294`, `9295`, `9297`, `9299`, `9300`, `9302`, `9304`, `9305`, `9306`, `9308`, `9309`, `9310`, `9311`, `9314`, `9316`, `9318`, `9320`, `9322`, `9323`, `9324`, `9327`, `9328`, `9330`, `9331`, `9332`, `9333`, `9334`, `9335`, `9336`, `9337`, `9338`, `9339`, `9340`, `9341`, `9342`, `9343`, `9346`, `9348`, `9349`, `9351`, `9352`, `9354`, `9355`, `9356`, `9357`, `9358`, `9359`, `9362`, `9363`, `9365`, `9367`, `9369`, `9370`, `9371`, `9372`, `9373`, `9374`, `9375`, `9376`, `9378`, `9379`, `9381`, `9382`, `9383`, `9384`, `9386`, `9387`, `9388`, `9389`, `9390`, `9391`, `9393`, `9394`, `9395`, `9396`, `9397`, `9398`, `9399`, `9400`, `9402`, `9403`, `9404`, `9405`, `9406`, `9407`, `9408`, `9409`, `9411`, `9413`, `9414`, `9415`, `9416`, `9417`, `9418`, `9420`, `9421`, `9422`, `9423`, `9424`, `9425`, `9427`, `9428`, `9429`, `9430`, `9431`, `9432`, `9434`, `9435`, `9437` | | **`experimental_arc_labeler`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `amod:attlvc`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `discourse`, `dislocated`, `flat:name`, `goeswith`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:attlvc`, `nmod:obl`, `nsubj`, `nsubj:lvc`, `nummod`, `obj`, `obj:lvc`, `obl`, `obl:lvc`, `orphan`, `parataxis`, `punct`, `vocative`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` | Accuracy # Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.66 SENTS_R 98.66 SENTS_F 98.66 TAG_ACC 97.39 POS_ACC 97.38 MORPH_ACC 93.65 MORPH_MICRO_P 97.75 MORPH_MICRO_R 97.09 MORPH_MICRO_F 97.42 LEMMA_ACC 98.67 BOUND_DEP_LAS 87.15 BOUND_DEP_UAS 91.19 DEP_UAS 91.17 DEP_LAS 87.13 ENTS_P 90.25 ENTS_R 90.93 ENTS_F 90.59","title":"Overview"},{"location":"models_gen/index_trf/#hu_core_news_trf-model","text":"The model builds on the Hungarian UD treebank and the NerKor corpus , thus it is capable of predicting PoS and morphological tags, computing lemmata, providing dependency parses of sentences and marking named entities. The underlying transformer model is backed by huBERT .","title":"hu_core_news_trf model"},{"location":"models_gen/index_trf/#details","text":"Hungarian transformer pipeline (huBert) for HuSpaCy. Components: transformer, senter, tagger, morphologizer, lemmatizer, parser, ner Feature Description Name hu_core_news_trf Version 3.2.4 spaCy >=3.2.4,<3.3.0 Default Pipeline transformer , senter , tagger , morphologizer , lookup_lemmatizer , experimental_edit_tree_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Components transformer , senter , tagger , morphologizer , lookup_lemmatizer , experimental_edit_tree_lemmatizer , lemma_smoother , experimental_arc_predicter , experimental_arc_labeler , ner Vectors 0 keys, 0 unique vectors (0 dimensions) Sources UD Hungarian Szeged (Rich\u00e1rd Farkas, Katalin Simk\u00f3, Zsolt Sz\u00e1nt\u00f3, Viktor Varga, Veronika Vincze (MTA-SZTE Research Group on Artificial Intelligence)) NYTK-NerKor Corpus (Eszter Simon, No\u00e9mi Vad\u00e1sz (Department of Language Technology and Applied Linguistics)) hunNERwiki (Eszter Simon, D\u00e1vid M\u00e1rk Nemeskey (HLT Group, Budapest University of Technology and Economics)) Szeged NER Corpus (Gy\u00f6rgy Szarvas, Rich\u00e1rd Farkas, L\u00e1szl\u00f3 Felf\u00f6ldi, Andr\u00e1s Kocsor, J\u00e1nos Csirik (MTA-SZTE Research Group on Artificial Intelligence)) huBERT base model (cased) (D\u00e1vid M\u00e1rk Nemeskey (SZTAKI-HLT)) License cc-by-sa-4.0 Author SzegedAI, MILAB","title":"Details"},{"location":"models_gen/index_trf/#label-scheme","text":"View label scheme (7244 labels for 5 components) | Component | Labels | | --- | --- | | **`tagger`** | `ADJ`, `ADP`, `ADV`, `AUX`, `CCONJ`, `DET`, `INTJ`, `NOUN`, `NUM`, `PART`, `PRON`, `PROPN`, `PUNCT`, `SCONJ`, `SYM`, `VERB`, `X` | | **`morphologizer`** | `Definite=Def\\|POS=DET\\|PronType=Art`, `Case=Ine\\|Number=Sing\\|POS=NOUN`, `POS=ADV`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|POS=DET\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `POS=PUNCT`, `Case=Nom\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=ADP`, `POS=CCONJ`, `Case=Del\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sub\\|Number=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|POS=NOUN`, `Degree=Pos\\|POS=ADV`, `Case=Sup\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Number=Plur\\|POS=NOUN`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|POS=NOUN`, `POS=ADV\\|PronType=Neg`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=SCONJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ade\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `POS=ADV\\|PronType=Int`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PROPN`, `Case=Sub\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `POS=PART`, `Case=Sup\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=ADV\\|PronType=Tot`, `Case=Ill\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Number=Sing\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=NOUN`, `Case=Del\\|Number=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|POS=DET\\|PronType=Art`, `Case=Dat\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=NOUN`, `Case=Sub\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=NOUN`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=NOUN`, `Case=Ine\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Number=Plur\\|POS=VERB\\|Person=3\\|VerbForm=Inf\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `POS=ADV\\|PronType=Rel`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=NOUN`, `Case=Ill\\|Number=Sing\\|POS=PROPN`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Definite=Def\\|POS=DET\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|VerbForm=Conv`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dis\\|Number=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=PROPN`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Abs\\|Number=Sing\\|POS=NOUN`, `Case=Ade\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|Number=Sing\\|POS=PROPN`, `Case=Sub\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Loc\\|Number=Sing\\|POS=NOUN`, `Case=Acc\\|Definite=Ind\\|POS=DET\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ter\\|Number=Sing\\|POS=NOUN`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `POS=X`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Tra\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Degree=Pos\\|POS=ADV\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflex=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Aspect=Iter\\|Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ess\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Sub\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ess\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3\\|VerbForm=PartPast`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Nom\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Acc\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|POS=PROPN`, `Case=Abs\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=NOUN`, `Case=Ter\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `POS=INTJ`, `Case=Ine\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Number=Plur\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PROPN`, `Case=Ter\\|Number=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Neg`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sub\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Definite=Def\\|POS=DET\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Definite=Ind\\|Mood=Imp,Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Sub\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Pot\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=NOUN`, `Case=Ela\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs\\|Reflex=Yes`, `Case=Ins\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `POS=AUX\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Aspect=Iter\\|Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=NOUN`, `Case=Tem\\|Number=Sing\\|POS=NOUN`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `POS=ADV\\|PronType=Ind`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|POS=DET\\|PronType=Int`, `Case=Gen\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Plur\\|POS=PROPN`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Definite=Def\\|Mood=Pot\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ela\\|Number=Sing\\|POS=PROPN`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sub\\|Number=Sing\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Imp,Pot\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Def\\|POS=DET\\|PronType=Tot`, `Definite=Def\\|POS=DET\\|PronType=Neg`, `Case=Ins\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Acc\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Gen\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Past\\|VerbForm=Fin\\|Voice=Cau`, `Case=Sub\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Tra\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ess\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=DET\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPast`, `Case=Ess\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Degree=Cmp\\|POS=ADV`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartFut`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPast`, `Degree=Sup\\|POS=ADV`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=NOUN`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Pos\\|Number=Sing\\|POS=ADJ\\|VerbForm=PartPres`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=All\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Nom\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ine\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Mood=Pot\\|POS=VERB\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ade\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ela\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs\\|Reflex=Yes`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Sub\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=3\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Cau`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|POS=ADJ\\|VerbForm=PartPres`, `Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Definite=Indef\\|POS=DET\\|PronType=Art`, `Number=Plur\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Degree=Pos\\|POS=ADV\\|PronType=Default`, `POS=ADV\\|PronType=v`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `POS=ADV\\|PronType=Default`, `Number=Sing\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Nom\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=1\\|PronType=PrsPron`, `Case=Ter\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Number=Sing\\|POS=VERB\\|Person=1\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Number=Plur\\|POS=ADV\\|Person=3\\|PronType=PrsPron`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sub\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Del\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Number=Plur\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=NOUN`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Sub\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ade\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Number=Plur\\|POS=PROPN`, `Case=Nom\\|NumType=Ord\\|Number=Plur\\|POS=ADJ`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Degree=Pos\\|POS=ADV\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=1\\|Tense=Pres\\|Voice=Act`, `Case=Ade\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sup\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|POS=PROPN`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ill\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Number=Sing\\|POS=ADV\\|Person=2\\|PronType=PrsPron`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Degree=Cmp\\|POS=ADV\\|PronType=Dem`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=1`, `Case=Sub\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Dat\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=Com\\|Number=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Plur\\|POS=NOUN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PROPN`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Definite=Def\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Sub\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Tem\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=1`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Dat\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Definite=Def\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Abs\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Ind`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Past\\|VerbForm=Fin\\|Voice=Act`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Cas=1\\|Number=Sing\\|POS=PROPN`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Sub\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Sub\\|NumType[sem]=Result\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Ind\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Past\\|Voice=Act`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Dat\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Tot`, `Definite=Ind\\|Mood=Imp\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Cau\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Definite=Def\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dis\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Cas=none\\|POS=NOUN\\|SubPOS=c`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Abs\\|Number=Plur\\|POS=NOUN`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Tot`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sub\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ter\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sub\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Definite=Ind\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Ill\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Acc\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=All\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=2\\|Mood=Cnd\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Abl\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Number=Sing\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ela\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sup\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Sub\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Tra\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Definite=Ind\\|Mood=Cnd\\|Number=Plur\\|POS=VERB\\|Person=2\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Dat\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Plur\\|POS=NOUN`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Acc\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Ade\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Ins\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Ess\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Cas=6\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Number=Plur\\|POS=VERB\\|Person=2\\|VerbForm=Inf\\|Voice=Act`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Cas=6\\|Number=Sing\\|POS=NOUN`, `Case=Ins\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Int`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Tra\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Sub\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Abl\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Gen\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Degree=Sup\\|Number=Plur\\|POS=ADJ`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ins\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|PronType=Dem`, `Case=Nom\\|Degree=Cmp\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Cau\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Tem\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Dat\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ill\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Abl\\|Number=Sing\\|POS=PRON\\|Person=3\\|Poss=Yes\\|PronType=Prs`, `Case=Cau\\|Number=Plur\\|POS=PROPN`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Definite=Ind\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Definite=Def\\|Mood=Ind\\|Number=Plur\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Sup\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ela\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Tra\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ter\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Definite=Def\\|Mood=Ind\\|Number=Sing\\|POS=AUX\\|Person=2\\|Tense=Pres\\|Voice=Act`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Cau\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Ins\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Tem\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sup\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=All\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Cau\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abl\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Nom\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ela\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=1`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=1`, `Case=Ela\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Ade\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ill\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Gen\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Abl\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=All\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Tra\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Ins\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Sup\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Quotient\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Ine\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Gen\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Gen\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Signed\\|Number=Sing\\|POS=NUM`, `Case=Com\\|Number=Sing\\|POS=PROPN`, `Case=Acc\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psed]=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=1\\|Reflexive=Yes`, `Case=Nom\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ins\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Gen\\|NumType=Dist\\|Number=Sing\\|POS=NUM`, `Case=Nom\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Del\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Ins\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Nom\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Rel`, `Case=Ine\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Plur\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Dat\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|Number[psed]=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sub\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ade\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ill\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Ill\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Sup\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ill\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=3`, `Case=Sup\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ine\\|Degree=Pos\\|Number=Plur\\|POS=ADJ`, `Case=Gen\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ins\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ela\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Measure\\|Number=Sing\\|POS=NUM`, `Case=Abs\\|Number=Sing\\|POS=PROPN`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Nom\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Nom\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=m`, `Case=Sup\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|Number=Plur\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=o`, `Case=Ins\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Acc\\|Number=Sing\\|Number[psed]=Plur\\|POS=NOUN`, `Case=Gen\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Sub\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Abl\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Ill\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ela\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Abl\\|NumType[sem]=Time\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Sup\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Gen\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abs\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|Degree=Pos\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ter\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ins\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Gen\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Dat\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Sub\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=Ine\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Nom\\|NumType[sem]=Percent\\|Number=Sing\\|POS=NUM`, `Case=All\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Abl\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|NumType=Card\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ter\\|NumType[sem]=Formula\\|Number=Sing\\|POS=NUM`, `Case=Sub\\|NumType[sem]=Percent\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=All\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Int`, `Case=Nom\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Del\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Gen\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ins\\|NumType=Ord\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Ind`, `Case=Sup\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Ine\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Tra\\|Number=Sing\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Gen\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Ind`, `Case=Tem\\|Degree=Sup\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Sub\\|NumType=Card\\|Number=Plur\\|POS=NUM`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ine\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=All\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Sub\\|Number=Plur\\|POS=PROPN`, `Case=Tra\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Sup\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Dat\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Dat\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Ill\\|Number=Plur\\|POS=PROPN`, `Case=Loc\\|Number=Sing\\|POS=PROPN`, `Case=Ess\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Acc\\|Degree=Pos\\|Number=Plur\\|Number[psed]=Sing\\|POS=ADJ`, `Case=Abl\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=All\\|NumType=Frac\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Degree=Cmp\\|Number=Plur\\|POS=ADJ`, `Case=Ine\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Ine\\|Number=Sing\\|POS=SYM\\|Type=w`, `Case=Cau\\|NumType=Frac\\|Number=Sing\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Ela\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Abs\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rel`, `Case=Sub\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Tem\\|Number=Sing\\|POS=PROPN`, `Case=Del\\|NumType[sem]=Dot\\|Number=Sing\\|POS=NUM`, `Case=Ade\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Plur\\|POS=PROPN\\|Person[psor]=1`, `Case=Nom\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot`, `Case=Acc\\|Degree=Sup\\|Number=Plur\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Ade\\|Number=Plur\\|Number[psed]=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=3`, `Case=Ela\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Acc\\|Number=Plur\\|Number[psed]=Plur\\|POS=PRON\\|Person=1\\|Poss=Yes\\|PronType=Prs`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=NOUN`, `Case=Nom\\|Degree=Sup\\|Number=Sing\\|Number[psor]=Sing\\|POS=ADJ\\|Person[psor]=3`, `Case=Dat\\|Number=Plur\\|POS=PROPN`, `Case=Ill\\|Number=Plur\\|POS=PRON\\|Person=3\\|PronType=Prs`, `Case=Sub\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ins\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=1\\|Poss=Yes\\|PronType=Prs`, `Case=Dat\\|Number=Plur\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ter\\|Number=Plur\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ess\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Sup\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Acc\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Gen\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Ine\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=All\\|Number=Sing\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=2`, `Case=Gen\\|Number=Sing\\|POS=PRON\\|Person=3\\|PronType=Rcp`, `Definite=Ind\\|Mood=Imp\\|Number=Sing\\|POS=AUX\\|Person=3\\|Tense=Pres\\|Voice=Act`, `Case=Tra\\|Number=Sing\\|Number[psor]=Plur\\|POS=NOUN\\|Person[psor]=1`, `Case=Ins\\|NumType=Card\\|Number=Plur\\|Number[psor]=Sing\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|Reflexive=Yes`, `Case=Sub\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=1`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Ind`, `Case=All\\|Number=Sing\\|POS=PRON\\|Person=2\\|Poss=Yes\\|PronType=Prs`, `Case=Sub\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ill\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Ine\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=3`, `Case=Del\\|Number=Sing\\|POS=PRON\\|Person=2\\|PronType=Prs`, `Case=Acc\\|Number=Sing\\|Number[psed]=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=2\\|PronType=Tot`, `Case=Abl\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Int`, `Case=Ine\\|Number=Sing\\|Number[psed]=Sing\\|POS=PROPN`, `Case=Cau\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Del\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Cau\\|Number=Sing\\|POS=PRON\\|Person=3\\|Reflexive=Yes`, `Case=Nom\\|NumType=Card\\|Number=Sing\\|Number[psor]=Plur\\|POS=NUM\\|Person[psor]=2`, `Case=Abl\\|Number=Sing\\|Number[psor]=Sing\\|POS=NOUN\\|Person[psor]=2`, `Case=Ine\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Definite=2\\|Mood=Imp\\|Number=Sing\\|POS=VERB\\|Person=1\\|Tense=Pres\\|VerbForm=Fin\\|Voice=Act`, `Case=Dat\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ela\\|Degree=Cmp\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Sing\\|POS=SYM\\|Type=p`, `Case=Abl\\|NumType=Ord\\|Number=Sing\\|POS=ADJ`, `Case=Acc\\|Number=Plur\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Dem`, `Case=Ine\\|Number=Plur\\|POS=PROPN`, `Case=Sub\\|Number=Sing\\|Number[psor]=Sing\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|PronType=Tot`, `Case=Ins\\|Number=Sing\\|Number[psor]=Plur\\|POS=PRON\\|Person=3\\|Person[psor]=3\\|Poss=Yes\\|PronType=Prs`, `Case=Ter\\|Degree=Pos\\|Number=Sing\\|POS=ADJ`, `Case=Dat\\|Number=Plur\\|POS=PRON\\|Person=1\\|PronType=Prs`, `Case=Acc\\|Number=Plur\\|Number[psor]=Sing\\|POS=PROPN\\|Person[psor]=3`, `Case=All\\|Number=Sing\\|Number[psed]=Sing\\|POS=PRON\\|Person=3\\|PronType=Tot` | | **`experimental_edit_tree_lemmatizer`** | `0`, `2`, `3`, `5`, `7`, `9`, `11`, `13`, `15`, `17`, `19`, `21`, `23`, `25`, `27`, `29`, `31`, `33`, `35`, `37`, `39`, `41`, `43`, `45`, `47`, `49`, `51`, `53`, `55`, `57`, `59`, `61`, `63`, `65`, `67`, `69`, `71`, `73`, `77`, `79`, `81`, `83`, `86`, `88`, `90`, `92`, `94`, `97`, `99`, `101`, `103`, `105`, `107`, `110`, `112`, `114`, `116`, `118`, `120`, `121`, `123`, `125`, `128`, `131`, `133`, `135`, `137`, `139`, `141`, `142`, `144`, `146`, `148`, `150`, `152`, `154`, `157`, `159`, `161`, `163`, `165`, `166`, `168`, `171`, `173`, `175`, `177`, `179`, `181`, `183`, `185`, `189`, `191`, `193`, `195`, `199`, `201`, `203`, `205`, `207`, `209`, `211`, `213`, `216`, `218`, `221`, `223`, `225`, `228`, `229`, `231`, `234`, `235`, `236`, `238`, `242`, `244`, `246`, `248`, `250`, `253`, `255`, `257`, `259`, `261`, `263`, `265`, `267`, `269`, `272`, `274`, `276`, `279`, `281`, `284`, `286`, `288`, `290`, `292`, `294`, `296`, `298`, `300`, `302`, `304`, `307`, `309`, `312`, `315`, `317`, `319`, `321`, `322`, `325`, `327`, `329`, `331`, `333`, `335`, `337`, `339`, `341`, `343`, `345`, `349`, `351`, `353`, `355`, `357`, `360`, `362`, `365`, `366`, `368`, `370`, `372`, `374`, `376`, `378`, `379`, `384`, `386`, `388`, `390`, `392`, `394`, `396`, `398`, `400`, `402`, `404`, `406`, `408`, `410`, `412`, `414`, `416`, `418`, `420`, `421`, `423`, `425`, `427`, `429`, `431`, `433`, `434`, `436`, `438`, `440`, `442`, `443`, `444`, `446`, `448`, `450`, `452`, `454`, `457`, `459`, `461`, `463`, `466`, `468`, `470`, `472`, `474`, `478`, `479`, `481`, `483`, `486`, `488`, `490`, `492`, `494`, `496`, `498`, `499`, `501`, `503`, `505`, `507`, `509`, `510`, `350`, `512`, `514`, `516`, `517`, `518`, `521`, `523`, `525`, `527`, `529`, `531`, `533`, `535`, `537`, `539`, `541`, `543`, `544`, `546`, `548`, `550`, `553`, `555`, `556`, `558`, `561`, `563`, `567`, `569`, `571`, `572`, `574`, `575`, `577`, `579`, `581`, `583`, `585`, `587`, `589`, `591`, `593`, `595`, `598`, `600`, `602`, `603`, `605`, `607`, `609`, `611`, `612`, `614`, `616`, `618`, `620`, `622`, `624`, `626`, `628`, `630`, `632`, `634`, `636`, `638`, `639`, `641`, `642`, `643`, `645`, `647`, `649`, `651`, `653`, `655`, `657`, `659`, `661`, `663`, `665`, `667`, `670`, `672`, `673`, `675`, `677`, `679`, `680`, `683`, `686`, `689`, `691`, `693`, `695`, `697`, `699`, `701`, `704`, `705`, `708`, `710`, `712`, `713`, `715`, `717`, `719`, `720`, `722`, `724`, `726`, `728`, `730`, `732`, `734`, `736`, `738`, `740`, `741`, `744`, `746`, `747`, `749`, `752`, `755`, `757`, `759`, `761`, `762`, `764`, `765`, `766`, `768`, `770`, `773`, `774`, `776`, `778`, `779`, `781`, `783`, `784`, `786`, `788`, `790`, `792`, `793`, `795`, `797`, `799`, `801`, `802`, `804`, `806`, `808`, `809`, `813`, `818`, `820`, `821`, `823`, `825`, `827`, `829`, `831`, `832`, `834`, `836`, `838`, `840`, `842`, `844`, `846`, `848`, `850`, `853`, `855`, `857`, `859`, `862`, `864`, `866`, `868`, `869`, `871`, `873`, `875`, `876`, `877`, `880`, `882`, `883`, `885`, `886`, `888`, `891`, `894`, `895`, `898`, `903`, `905`, `907`, `908`, `910`, `912`, `914`, `916`, `918`, `920`, `922`, `925`, `927`, `929`, `930`, `932`, `934`, `936`, `938`, `940`, `942`, `944`, `946`, `948`, `949`, `951`, `953`, `955`, `959`, `961`, `963`, `965`, `967`, `968`, `970`, `973`, `975`, `977`, `978`, `980`, `982`, `984`, `986`, `988`, `990`, `993`, `995`, `997`, `999`, `1001`, `1003`, `1005`, `1007`, `1009`, `1011`, `1013`, `1015`, `1017`, `1020`, `1022`, `1024`, `1026`, `1029`, `1031`, `1032`, `1033`, `1035`, `1038`, `1040`, `1043`, `1045`, `1047`, `1049`, `1051`, `1053`, `1056`, `1059`, `1061`, `1063`, `1065`, `1067`, `1069`, `1071`, `1074`, `1076`, `1078`, `1080`, `1084`, `1086`, `1088`, `1090`, `1092`, `1094`, `1095`, `1096`, `1099`, `1101`, `1103`, `1104`, `1105`, `1107`, `1108`, `1111`, `1113`, `1115`, `1117`, `1119`, `1123`, `1125`, `1127`, `1129`, `1131`, `1133`, `1135`, `1137`, `1139`, `1141`, `1142`, `1144`, `1146`, `1149`, `1151`, `1152`, `1154`, `1155`, `1156`, `1158`, `1160`, `1162`, `1164`, `1166`, `1168`, `1170`, `1171`, `1174`, `1176`, `1178`, `1180`, `1182`, `1184`, `1187`, `1190`, `1192`, `1194`, `1196`, `1199`, `1201`, `1204`, `1206`, `1207`, `1209`, `1211`, `1212`, `1214`, `1216`, `1218`, `1221`, `1223`, `1225`, `1226`, `1228`, `1230`, `1232`, `1233`, `1235`, `1237`, `1239`, `1241`, `1243`, `1244`, `1246`, `1248`, `1250`, `1252`, `1254`, `1256`, `1258`, `1259`, `1260`, `1262`, `1263`, `1265`, `1268`, `1270`, `1271`, `1274`, `1276`, `1278`, `1280`, `1282`, `1283`, `1285`, `1287`, `1288`, `1289`, `1291`, `1293`, `1295`, `1297`, `1299`, `1301`, `1304`, `1307`, `1309`, `1310`, `1312`, `1313`, `1316`, `1318`, `1319`, `1322`, `1324`, `1326`, `1328`, `1329`, `1330`, `1332`, `1333`, `1335`, `1337`, `1339`, `1341`, `1343`, `1344`, `1345`, `1346`, `1348`, `1350`, `1352`, `1354`, `1357`, `1359`, `1361`, `1363`, `1365`, `1367`, `1369`, `1371`, `1373`, `1376`, `1378`, `1380`, `1382`, `1384`, `1386`, `1388`, `1390`, `1392`, `1394`, `1396`, `1398`, `1400`, `1401`, `1403`, `1405`, `1407`, `1409`, `1411`, `1412`, `1414`, `1415`, `1417`, `1419`, `1421`, `1423`, `1425`, `1427`, `58`, `1429`, `1431`, `1434`, `1436`, `1438`, `1440`, `1442`, `1444`, `1446`, `1448`, `1450`, `1452`, `1454`, `1457`, `1459`, `1462`, `1464`, `1466`, `1468`, `1470`, `1472`, `1474`, `1476`, `1478`, `1481`, `1483`, `1486`, `1488`, `1490`, `1493`, `1495`, `1496`, `1497`, `1498`, `1499`, `1501`, `1503`, `1504`, `1506`, `1508`, `1510`, `1511`, `1513`, `1515`, `1517`, `1519`, `1522`, `1524`, `1525`, `1527`, `1529`, `1531`, `1533`, `1535`, `1537`, `1539`, `1541`, `1543`, `1545`, `1547`, `1549`, `1551`, `1553`, `1556`, `1558`, `1560`, `1562`, `1564`, `1567`, `1569`, `1571`, `1573`, `1575`, `1577`, `1579`, `1580`, `1582`, `1584`, `1586`, `1587`, `1589`, `1592`, `1594`, `1596`, `1598`, `1600`, `1603`, `1604`, `1606`, `1608`, `1610`, `1611`, `1612`, `1615`, `1617`, `1618`, `1620`, `1622`, `1625`, `1627`, `1629`, `1631`, `1633`, `1635`, `1637`, `1639`, `1642`, `1644`, `1646`, `1648`, `1650`, `1651`, `1653`, `1657`, `1659`, `1662`, `1664`, `1666`, `1668`, `1670`, `1672`, `1674`, `1675`, `1677`, `1678`, `1680`, `1683`, `1685`, `1686`, `1687`, `1689`, `1691`, `1693`, `1695`, `1697`, `1700`, `1703`, `1705`, `1707`, `1708`, `1711`, `1714`, `1715`, `1718`, `1721`, `1724`, `1727`, `1729`, `1731`, `1734`, `1737`, `1739`, `1742`, `1744`, `1745`, `1747`, `1749`, `1751`, `1754`, `1757`, `1758`, `1760`, `1761`, `1764`, `1766`, `1767`, `1768`, `1769`, `1771`, `1773`, `1776`, `1777`, `1779`, `1781`, `1783`, `1784`, `1786`, `1787`, `1788`, `1790`, `1791`, `1793`, `1794`, `1795`, `1796`, `1798`, `1800`, `1802`, `1803`, `1804`, `1806`, `1808`, `1811`, `1812`, `1815`, `1816`, `1818`, `1819`, `1820`, `1821`, `1824`, `1827`, `1828`, `1829`, `1831`, `1833`, `1835`, `1837`, `1838`, `1840`, `1842`, `1843`, `1845`, `1846`, `1848`, `1849`, `1851`, `1853`, `1854`, `1855`, `1857`, `1858`, `1861`, `1863`, `1865`, `1866`, `1868`, `1870`, `1873`, `1874`, `1875`, `1877`, `1878`, `1879`, `1880`, `1882`, `1884`, `1886`, `1888`, `1890`, `1892`, `1894`, `1896`, `1898`, `1900`, `1902`, `1904`, `1906`, `1908`, `1910`, `1912`, `1913`, `1916`, `1918`, `1919`, `1922`, `1924`, `1926`, `1928`, `1929`, `1931`, `1932`, `1933`, `1934`, `1935`, `1937`, `1939`, `1941`, `1942`, `1944`, `1946`, `1947`, `1949`, `1950`, `1951`, `1953`, `1954`, `1955`, `1957`, `1958`, `1960`, `1961`, `1963`, `1964`, `1965`, `1967`, `1969`, `1970`, `1972`, `1974`, `1976`, `1978`, `1980`, `1982`, `1984`, `1985`, `1987`, `1989`, `1991`, `1993`, `1995`, `1997`, `1998`, `2000`, `2003`, `2005`, `2007`, `2009`, `2011`, `2013`, `2014`, `2017`, `2018`, `2020`, `2022`, `2023`, `2025`, `2027`, `2029`, `2031`, `2032`, `2033`, `2034`, `2036`, `2038`, `2040`, `2043`, `2045`, `2047`, `2048`, `2050`, `2051`, `2053`, `2055`, `2057`, `2060`, `2062`, `2064`, `2066`, `2068`, `2069`, `2070`, `2073`, `2075`, `2077`, `2079`, `2080`, `2082`, `2084`, `2085`, `2087`, `2090`, `2091`, `2093`, `2094`, `2095`, `2097`, `2099`, `2101`, `2103`, `2104`, `2105`, `2107`, `2109`, `2112`, `2115`, `2116`, `2118`, `2120`, `2121`, `2123`, `2124`, `2126`, `2127`, `2129`, `2130`, `2132`, `2133`, `2135`, `2137`, `2138`, `2139`, `2140`, `2142`, `2143`, `2145`, `2147`, `2149`, `2150`, `2152`, `2154`, `2156`, `2158`, `2159`, `2162`, `2164`, `2165`, `2167`, `2169`, `2171`, `2173`, `2175`, `2176`, `2177`, `2178`, `2179`, `2180`, `2181`, `2184`, `2186`, `2187`, `2189`, `2190`, `2191`, `2193`, `2194`, `2197`, `2199`, `2201`, `2203`, `2205`, `2207`, `2208`, `2209`, `2211`, `2212`, `2214`, `2215`, `2217`, `2218`, `2221`, `2223`, `2226`, `2228`, `2230`, `2232`, `2234`, `2235`, `2238`, `2240`, `2242`, `2243`, `2245`, `2247`, `2248`, `2249`, `2251`, `2253`, `2254`, `2255`, `2257`, `2259`, `2261`, `2262`, `2263`, `2265`, `2267`, `2269`, `2270`, `2271`, `2272`, `2273`, `2275`, `2277`, `2279`, `2280`, `2282`, `2283`, `2284`, `2286`, `2287`, `2288`, `2290`, `2291`, `2293`, `2294`, `2295`, `2296`, `2298`, `2299`, `2300`, `2301`, `2303`, `2304`, `2305`, `2306`, `2307`, `2308`, `2309`, `2311`, `2312`, `2315`, `2317`, `2318`, `2319`, `2321`, `2322`, `2324`, `2326`, `2328`, `2329`, `2331`, `2333`, `2335`, `2336`, `2338`, `2339`, `2341`, `2343`, `2345`, `2348`, `2349`, `2351`, `2353`, `2355`, `2357`, `2358`, `2360`, `2363`, `2365`, `2367`, `2369`, `2372`, `2373`, `2374`, `2376`, `2378`, `2380`, `2381`, `2382`, `2383`, `2384`, `2385`, `2388`, `2390`, `2392`, `2393`, `2394`, `2396`, `2397`, `2399`, `2400`, `2402`, `2404`, `2407`, `2410`, `2413`, `2415`, `2418`, `2419`, `2421`, `2422`, `2424`, `2425`, `2426`, `2428`, `2430`, `2432`, `2435`, `2436`, `2437`, `2438`, `2441`, `2442`, `2443`, `2445`, `2447`, `2448`, `2450`, `2452`, `2454`, `2455`, `2456`, `2458`, `2459`, `2461`, `2462`, `2464`, `2467`, `2468`, `2470`, `2471`, `2473`, `2475`, `2476`, `2478`, `2480`, `2482`, `2483`, `2484`, `2485`, `2486`, `2488`, `2489`, `2491`, `2493`, `2496`, `2498`, `2499`, `2501`, `2503`, `2505`, `2507`, `2510`, `2512`, `2514`, `2515`, `2517`, `2518`, `2520`, `2521`, `2523`, `2524`, `2525`, `2528`, `2530`, `2532`, `2533`, `2534`, `2536`, `2537`, `2538`, `2539`, `2541`, `2543`, `2545`, `2546`, `2548`, `2551`, `2552`, `2553`, `2555`, `2557`, `2559`, `2561`, `2562`, `2564`, `2566`, `2567`, `2568`, `2569`, `2570`, `2571`, `2572`, `2574`, `2575`, `2577`, `2579`, `2581`, `2582`, `2585`, `2587`, `2588`, `2590`, `2592`, `2595`, `2596`, `2597`, `2599`, `2600`, `2602`, `2603`, `2604`, `2605`, `2607`, `2609`, `2611`, `2613`, `2615`, `2616`, `2617`, `2620`, `2622`, `2624`, `2625`, `2627`, `2630`, `2632`, `2635`, `2636`, `2637`, `2639`, `2640`, `2641`, `2643`, `2644`, `2645`, `2646`, `2647`, `2649`, `2651`, `2652`, `2653`, `2656`, `2657`, `2658`, `2660`, `2662`, `2664`, `2665`, `2666`, `2667`, `2669`, `2671`, `2672`, `2673`, `2675`, `2678`, `2679`, `2682`, `2683`, `2685`, `2686`, `2688`, `2689`, `2690`, `2692`, `2693`, `2695`, `2697`, `2698`, `2699`, `2700`, `2701`, `2702`, `2703`, `2704`, `2706`, `2707`, `2709`, `2712`, `2714`, `2716`, `2719`, `2720`, `2721`, `2723`, `2725`, `2726`, `2727`, `2730`, `2731`, `2732`, `2733`, `2734`, `2735`, `2737`, `2738`, `2739`, `2740`, `2742`, `2743`, `2745`, `2746`, `2748`, `2750`, `2752`, `2753`, `2756`, `2757`, `2759`, `2760`, `2761`, `2762`, `2764`, `2765`, `2766`, `2767`, `2768`, `2769`, `2771`, `2772`, `2774`, `2776`, `2777`, `2778`, `2779`, `2781`, `2782`, `2784`, `2785`, `2787`, `2790`, `2792`, `2794`, `2797`, `2799`, `2801`, `2802`, `2805`, `2807`, `2808`, `2810`, `2812`, `2814`, `2815`, `2816`, `2818`, `2820`, `2822`, `2823`, `2824`, `2826`, `2827`, `2828`, `2830`, `2832`, `2834`, `2835`, `2837`, `2839`, `2841`, `2842`, `2843`, `2845`, `2847`, `1138`, `2848`, `2850`, `2851`, `2854`, `2857`, `2859`, `2860`, `2861`, `2863`, `2865`, `2866`, `2867`, `2869`, `2872`, `2874`, `2876`, `2877`, `2878`, `2880`, `2881`, `2882`, `2884`, `2885`, `2886`, `2887`, `2888`, `2889`, `2890`, `2891`, `2892`, `2893`, `2894`, `2895`, `2897`, `2899`, `2901`, `2902`, `2904`, `2905`, `2907`, `2910`, `2911`, `2912`, `2913`, `2915`, `2917`, `2918`, `2921`, `2922`, `2923`, `2925`, `2926`, `2927`, `2929`, `2931`, `2932`, `2933`, `2934`, `2936`, `2938`, `2940`, `2943`, `2946`, `2947`, `2949`, `2951`, `2953`, `2954`, `2957`, `2958`, `2960`, `2961`, `2963`, `2965`, `2966`, `2967`, `2968`, `2971`, `2972`, `2973`, `2974`, `2976`, `2978`, `2980`, `2982`, `2984`, `2985`, `2987`, `2989`, `2991`, `2992`, `2994`, `2996`, `2997`, `2998`, `2999`, `3000`, `3001`, `3002`, `3004`, `3006`, `3010`, `3012`, `3014`, `3015`, `3018`, `3019`, `3021`, `3022`, `3024`, `3026`, `3028`, `3030`, `3032`, `3033`, `3035`, `3036`, `3037`, `3038`, `3040`, `3041`, `3042`, `3043`, `3044`, `3045`, `3046`, `3048`, `3050`, `3051`, `3053`, `3054`, `3055`, `3056`, `3058`, `3060`, `3061`, `3063`, `3064`, `3065`, `3067`, `3068`, `3069`, `3070`, `3071`, `3073`, `3075`, `3077`, `3078`, `3079`, `3080`, `3082`, `3084`, `3086`, `3088`, `3089`, `3092`, `3095`, `3097`, `3099`, `3100`, `3102`, `3104`, `3105`, `3108`, `3109`, `3112`, `3113`, `3114`, `3116`, `3118`, `3119`, `3122`, `3125`, `3126`, `3128`, `3130`, `3132`, `3133`, `3135`, `3136`, `3138`, `3140`, `3142`, `3144`, `3145`, `3146`, `3148`, `3149`, `3151`, `3153`, `3155`, `3157`, `3158`, `3159`, `3160`, `3161`, `3162`, `3164`, `3166`, `3169`, `3171`, `3172`, `3173`, `3174`, `3177`, `3178`, `3180`, `3181`, `3183`, `3185`, `3187`, `3188`, `3189`, `3191`, `3193`, `3194`, `3196`, `3198`, `3201`, `3204`, `3206`, `3207`, `3208`, `3211`, `3212`, `3213`, `3214`, `3215`, `3217`, `3219`, `3221`, `3223`, `3224`, `3227`, `3229`, `3231`, `3233`, `3234`, `3236`, `3238`, `3239`, `3241`, `3243`, `3244`, `3246`, `3247`, `3249`, `3251`, `3253`, `3255`, `3257`, `3258`, `3259`, `3262`, `3264`, `3265`, `3266`, `3268`, `3269`, `3271`, `3272`, `3273`, `3275`, `3276`, `3278`, `3279`, `76`, `3282`, `3284`, `3286`, `3288`, `3289`, `3290`, `3292`, `3294`, `3296`, `3299`, `3302`, `3304`, `3307`, `714`, `3309`, `3312`, `3314`, `3315`, `3316`, `3318`, `3319`, `3320`, `3322`, `3324`, `3326`, `3327`, `3328`, `3330`, `3332`, `3333`, `3336`, `3338`, `3340`, `3342`, `3345`, `3347`, `3348`, `3349`, `3350`, `3352`, `3353`, `3355`, `3357`, `3358`, `3360`, `3361`, `3362`, `3363`, `3364`, `3365`, `3367`, `3368`, `3369`, `3370`, `3371`, `3372`, `3373`, `3374`, `3375`, `3378`, `3381`, `3382`, `3384`, `3387`, `3389`, `3391`, `3392`, `3393`, `3395`, `3396`, `3399`, `3401`, `3404`, `3406`, `3407`, `3409`, `3411`, `3413`, `3415`, `3416`, `3419`, `3421`, `3423`, `3426`, `3427`, `3428`, `3431`, `3432`, `3434`, `3437`, `3438`, `3439`, `3441`, `3442`, `3443`, `3444`, `3445`, `3447`, `3449`, `3451`, `3452`, `3454`, `3455`, `3457`, `3459`, `3461`, `3462`, `3464`, `3467`, `3468`, `3471`, `3473`, `3474`, `3477`, `3478`, `3480`, `3483`, `3484`, `3486`, `3488`, `3489`, `3491`, `3492`, `3493`, `3495`, `3496`, `3498`, `3499`, `3500`, `3501`, `3503`, `3505`, `3506`, `3507`, `3510`, `3512`, `3513`, `3514`, `3516`, `3517`, `3518`, `3519`, `3521`, `3522`, `3524`, `3527`, `3529`, `3530`, `3531`, `3532`, `3534`, `3535`, `3536`, `3538`, `3539`, `3540`, `3541`, `3542`, `3544`, `3547`, `3548`, `3550`, `3552`, `3554`, `3556`, `3557`, `3558`, `3559`, `3560`, `3561`, `3562`, `3565`, `3566`, `3567`, `3568`, `3570`, `3571`, `3572`, `3573`, `3574`, `3575`, `3577`, `3578`, `3580`, `3581`, `3582`, `3583`, `3585`, `3586`, `3587`, `3589`, `3590`, `3592`, `3594`, `3595`, `3596`, `3597`, `3599`, `3601`, `3603`, `3605`, `3606`, `3607`, `3608`, `3610`, `3612`, `3614`, `3616`, `3617`, `3620`, `3622`, `3624`, `3625`, `3627`, `3629`, `3630`, `3631`, `3632`, `3633`, `3636`, `3637`, `3638`, `3639`, `3640`, `3641`, `3642`, `3643`, `3644`, `3645`, `3647`, `3649`, `3651`, `3652`, `3653`, `3654`, `3656`, `3658`, `3659`, `3661`, `3663`, `3664`, `3666`, `3667`, `3668`, `3669`, `3672`, `3674`, `3675`, `3676`, `3677`, `3679`, `3680`, `3683`, `3684`, `3685`, `3687`, `3689`, `3691`, `3694`, `3697`, `3698`, `3699`, `3700`, `3701`, `3703`, `3704`, `3705`, `3706`, `3707`, `3709`, `3710`, `3712`, `3714`, `3715`, `3717`, `3718`, `3719`, `3721`, `3723`, `3725`, `3728`, `3732`, `3733`, `3735`, `3736`, `3738`, `3739`, `3740`, `3742`, `3743`, `3744`, `3747`, `3749`, `3751`, `3754`, `3755`, `3757`, `3760`, `3761`, `3764`, `3765`, `3767`, `3768`, `3771`, `3772`, `3774`, `3777`, `3778`, `3779`, `3781`, `3782`, `3783`, `3785`, `3786`, `3788`, `3789`, `3790`, `3792`, `3796`, `3797`, `3798`, `3799`, `3800`, `3801`, `3802`, `3804`, `3805`, `3807`, `3809`, `3810`, `3811`, `3812`, `3813`, `3814`, `3815`, `3817`, `3818`, `3820`, `3822`, `3824`, `3825`, `3827`, `3828`, `3829`, `3808`, `3830`, `3831`, `3833`, `3834`, `3835`, `3837`, `3838`, `3839`, `3841`, `3843`, `3845`, `3846`, `3848`, `3850`, `3851`, `3854`, `3856`, `3857`, `3858`, `3859`, `3860`, `3861`, `3862`, `3864`, `3865`, `3867`, `3869`, `3871`, `3872`, `3873`, `3874`, `3876`, `3877`, `3880`, `3882`, `3884`, `3885`, `3887`, `3888`, `3891`, `3892`, `3894`, `3895`, `3896`, `3898`, `3900`, `3902`, `3903`, `3904`, `3907`, `3909`, `952`, `3910`, `3912`, `3913`, `3914`, `3916`, `3918`, `3920`, `3921`, `3922`, `3923`, `3924`, `3925`, `3927`, `3929`, `3930`, `3932`, `3933`, `3935`, `3937`, `3940`, `3941`, `3943`, `3944`, `3945`, `3947`, `3948`, `3950`, `3952`, `3953`, `3954`, `3955`, `3956`, `3957`, `3958`, `3959`, `3960`, `3961`, `3962`, `3964`, `3966`, `3967`, `3969`, `3970`, `3972`, `3974`, `3976`, `3977`, `3979`, `3980`, `3981`, `3982`, `3983`, `3985`, `3987`, `3988`, `3989`, `3990`, `3992`, `3993`, `3995`, `3997`, `3998`, `4000`, `4001`, `4002`, `4004`, `4006`, `4007`, `2327`, `4009`, `4011`, `4013`, `4015`, `4017`, `4018`, `4019`, `4021`, `4022`, `4023`, `4025`, `4026`, `4028`, `4030`, `4031`, `4032`, `4034`, `4035`, `4036`, `4037`, `4038`, `4039`, `4041`, `4042`, `4044`, `4045`, `4046`, `4047`, `4048`, `4049`, `4051`, `4052`, `4053`, `4054`, `4055`, `4056`, `4057`, `4058`, `4060`, `4061`, `4063`, `4064`, `4065`, `4067`, `4068`, `4069`, `4070`, `4071`, `4072`, `4073`, `4075`, `4077`, `4078`, `4080`, `4082`, `4084`, `4086`, `4087`, `4089`, `4090`, `4091`, `4092`, `4093`, `4095`, `4096`, `4098`, `4099`, `4100`, `4101`, `4102`, `4103`, `4105`, `4106`, `4108`, `4109`, `4111`, `4113`, `4114`, `4115`, `4117`, `4118`, `4121`, `4124`, `4125`, `4128`, `4129`, `4132`, `4134`, `4136`, `4138`, `4139`, `4140`, `4142`, `4143`, `4144`, `4146`, `4148`, `4150`, `4152`, `4154`, `4156`, `4157`, `4158`, `4160`, `4163`, `4165`, `4167`, `4168`, `4169`, `4171`, `4173`, `4175`, `4177`, `4178`, `4180`, `4182`, `4183`, `4185`, `4187`, `4188`, `4192`, `4193`, `4195`, `4196`, `4198`, `4200`, `4202`, `4204`, `4206`, `4208`, `4210`, `4211`, `4212`, `4214`, `4215`, `4216`, `4219`, `4221`, `4222`, `4223`, `4225`, `4226`, `4228`, `4230`, `4231`, `4233`, `4234`, `4235`, `4238`, `4240`, `4241`, `4243`, `4245`, `4246`, `4248`, `4250`, `4251`, `4252`, `4253`, `4255`, `4257`, `4259`, `4260`, `4262`, `4263`, `4264`, `4266`, `4269`, `4270`, `4273`, `4274`, `4275`, `4276`, `4278`, `4280`, `4282`, `4283`, `4285`, `4287`, `4288`, `4290`, `4292`, `4293`, `4294`, `4296`, `4297`, `4298`, `4300`, `4301`, `4303`, `4304`, `4305`, `4307`, `4310`, `4312`, `4315`, `4318`, `4319`, `4321`, `4324`, `729`, `4325`, `4326`, `4327`, `4328`, `4329`, `4330`, `4331`, `4333`, `4334`, `4336`, `4338`, `4340`, `4342`, `4343`, `4345`, `4347`, `4348`, `4349`, `4350`, `4351`, `4352`, `4353`, `4354`, `4356`, `4357`, `4359`, `4360`, `4361`, `4363`, `4364`, `4367`, `4368`, `4369`, `4370`, `4371`, `4373`, `4374`, `4377`, `4378`, `4380`, `4381`, `4382`, `4384`, `4386`, `4387`, `4389`, `4391`, `4392`, `4393`, `4395`, `4398`, `4400`, `4402`, `4403`, `4404`, `4407`, `4409`, `4410`, `4412`, `4413`, `4415`, `4416`, `4418`, `4421`, `4423`, `4424`, `4425`, `4426`, `4428`, `4429`, `4430`, `4431`, `4432`, `4434`, `4435`, `4436`, `4437`, `4439`, `4441`, `4442`, `4444`, `4445`, `4447`, `4448`, `4449`, `4450`, `4452`, `4454`, `4456`, `4457`, `4459`, `4460`, `4462`, `4464`, `4466`, `4468`, `4471`, `4472`, `4473`, `4474`, `4475`, `4477`, `4478`, `4479`, `4480`, `4482`, `4483`, `4485`, `4486`, `4487`, `4489`, `4490`, `4491`, `4492`, `4493`, `4494`, `4495`, `4496`, `4497`, `4499`, `4501`, `4502`, `4504`, `4506`, `4507`, `4509`, `4512`, `4515`, `4516`, `4518`, `4519`, `4520`, `1317`, `4522`, `4524`, `4526`, `4527`, `4529`, `4531`, `4533`, `4534`, `4535`, `4536`, `4537`, `4540`, `4542`, `4544`, `4545`, `4546`, `4548`, `4549`, `4550`, `4551`, `4552`, `4554`, `4556`, `3313`, `4558`, `4559`, `4561`, `4563`, `4565`, `4566`, `4568`, `4569`, `4572`, `4574`, `4575`, `4576`, `4577`, `4579`, `4581`, `4582`, `4583`, `4584`, `4586`, `4587`, `4588`, `4589`, `4590`, `4592`, `4593`, `4594`, `4595`, `4597`, `4598`, `4599`, `4601`, `4603`, `4604`, `4606`, `4609`, `4611`, `4612`, `4614`, `4617`, `4619`, `4621`, `4622`, `4624`, `4626`, `4628`, `4630`, `4632`, `4634`, `4636`, `4638`, `4639`, `4640`, `4641`, `4642`, `4644`, `4646`, `4647`, `4648`, `4651`, `4652`, `4654`, `4656`, `4657`, `4659`, `4660`, `4661`, `4662`, `4663`, `4664`, `4666`, `4668`, `4669`, `4671`, `4673`, `4674`, `4676`, `4679`, `4681`, `4682`, `4683`, `4684`, `4686`, `4688`, `4690`, `4691`, `4693`, `4694`, `4695`, `4696`, `4698`, `4700`, `4701`, `4704`, `4705`, `4706`, `4707`, `4708`, `4711`, `4714`, `4716`, `4717`, `4718`, `4720`, `4721`, `4722`, `4724`, `4725`, `4726`, `4728`, `4730`, `4731`, `4733`, `4734`, `4736`, `4737`, `4740`, `4741`, `4742`, `4744`, `4746`, `4748`, `4749`, `4750`, `4751`, `4754`, `4757`, `4758`, `480`, `4759`, `4761`, `4763`, `4765`, `4766`, `4768`, `4769`, `4770`, `4772`, `4773`, `4775`, `4776`, `4778`, `4780`, `4782`, `4783`, `4784`, `4785`, `4787`, `4788`, `4789`, `4791`, `4793`, `4795`, `4796`, `4797`, `4798`, `4799`, `4800`, `4801`, `4802`, `4804`, `4805`, `4807`, `4809`, `4810`, `4811`, `4812`, `4813`, `4814`, `4816`, `4817`, `4819`, `4820`, `4822`, `4823`, `4825`, `4826`, `4827`, `4828`, `4829`, `4830`, `4831`, `4834`, `4837`, `4839`, `4841`, `4843`, `4847`, `4848`, `4849`, `4850`, `4852`, `4854`, `4856`, `4858`, `4860`, `4861`, `4863`, `4865`, `4868`, `4870`, `4871`, `4872`, `4874`, `4875`, `4876`, `4878`, `4880`, `4882`, `4883`, `4885`, `4888`, `4890`, `4892`, `4894`, `4896`, `4897`, `4898`, `4900`, `4903`, `4904`, `4907`, `4908`, `4909`, `4911`, `4913`, `4914`, `4915`, `4917`, `4919`, `4921`, `4922`, `4924`, `4925`, `4927`, `4928`, `4929`, `4933`, `4935`, `4936`, `4937`, `4938`, `4939`, `4941`, `4942`, `4943`, `4944`, `4946`, `4949`, `4951`, `4952`, `4954`, `4955`, `4957`, `4958`, `4959`, `4960`, `4962`, `1494`, `4963`, `4965`, `4966`, `4967`, `4970`, `4972`, `4973`, `4974`, `4975`, `4976`, `4977`, `4980`, `4982`, `4983`, `2975`, `4985`, `4986`, `4987`, `4988`, `4989`, `4990`, `4993`, `4995`, `4996`, `4997`, `4998`, `5000`, `5002`, `5003`, `5005`, `5006`, `5007`, `5009`, `5010`, `5012`, `5014`, `5016`, `5017`, `5019`, `5021`, `5023`, `5024`, `5025`, `5029`, `5031`, `5032`, `5034`, `5036`, `5038`, `5039`, `5042`, `5044`, `5045`, `5046`, `5048`, `5051`, `5053`, `5056`, `5057`, `5060`, `5063`, `5065`, `5067`, `5068`, `5070`, `5072`, `5073`, `5074`, `5075`, `5077`, `5078`, `5079`, `5081`, `5083`, `5085`, `5087`, `5089`, `5091`, `5093`, `5095`, `5097`, `5098`, `5100`, `5101`, `5102`, `5103`, `5105`, `5106`, `5107`, `5108`, `5109`, `5110`, `5111`, `5113`, `5114`, `5115`, `5116`, `5117`, `5118`, `5119`, `5120`, `5122`, `5124`, `5127`, `5129`, `5131`, `5132`, `5133`, `5134`, `5135`, `5137`, `5139`, `5140`, `5141`, `5142`, `5145`, `5146`, `5147`, `5148`, `5149`, `5151`, `5153`, `5155`, `5157`, `5158`, `5160`, `5161`, `5162`, `5163`, `5164`, `5165`, `5166`, `5167`, `5168`, `5169`, `5171`, `5173`, `5175`, `5177`, `5179`, `5180`, `5182`, `5183`, `5185`, `5186`, `5188`, `5189`, `5190`, `5191`, `5193`, `5194`, `5196`, `5197`, `5198`, `5200`, `5203`, `5205`, `5206`, `5207`, `5208`, `5211`, `5213`, `5215`, `5217`, `5218`, `5219`, `5221`, `5222`, `5223`, `5225`, `5226`, `5227`, `5228`, `5229`, `5231`, `5232`, `5235`, `5237`, `5238`, `5239`, `5240`, `5242`, `5243`, `5244`, `5246`, `5248`, `5250`, `5253`, `5254`, `5256`, `5257`, `5259`, `5260`, `5261`, `5263`, `5265`, `5267`, `5268`, `5269`, `5270`, `5271`, `5272`, `5273`, `5275`, `5276`, `5277`, `5278`, `5279`, `5281`, `5282`, `5284`, `5285`, `5286`, `5287`, `5289`, `5291`, `5293`, `5294`, `5296`, `5298`, `5299`, `5301`, `5302`, `5304`, `5306`, `5307`, `5308`, `5309`, `5310`, `5312`, `5314`, `5315`, `5316`, `5318`, `5320`, `5321`, `5324`, `5326`, `5327`, `5328`, `5329`, `5330`, `5332`, `5335`, `5337`, `5338`, `5339`, `5341`, `5342`, `5343`, `5345`, `5346`, `5347`, `5350`, `5351`, `5353`, `5355`, `5356`, `5358`, `5359`, `5360`, `5361`, `5362`, `5364`, `5366`, `5368`, `5370`, `5372`, `5374`, `5375`, `5377`, `5378`, `5379`, `5380`, `5381`, `5382`, `5383`, `5384`, `5385`, `5386`, `5388`, `5390`, `5391`, `5393`, `5395`, `5397`, `5399`, `5401`, `5402`, `5403`, `5405`, `5407`, `5409`, `5410`, `5412`, `5413`, `5414`, `5416`, `5417`, `5419`, `5420`, `5421`, `5424`, `5426`, `5427`, `5428`, `5430`, `5431`, `5432`, `5433`, `5434`, `5435`, `5437`, `5438`, `5440`, `5441`, `5442`, `5443`, `5444`, `5446`, `5448`, `5449`, `5450`, `5451`, `5452`, `5453`, `5454`, `5455`, `5456`, `5458`, `5459`, `5461`, `5462`, `5465`, `5467`, `5469`, `5471`, `5473`, `5475`, `5476`, `5477`, `5478`, `5479`, `5480`, `5482`, `5483`, `5484`, `5485`, `5486`, `5489`, `5490`, `5492`, `5493`, `5494`, `5496`, `5498`, `5499`, `5500`, `5501`, `5503`, `5504`, `5505`, `5506`, `5507`, `5508`, `5510`, `5511`, `5513`, `5514`, `5516`, `5517`, `5518`, `5519`, `5520`, `5521`, `5522`, `5523`, `5525`, `5526`, `5528`, `5531`, `5533`, `5535`, `5536`, `5539`, `5540`, `5541`, `5542`, `5543`, `5545`, `5546`, `5547`, `5548`, `5549`, `5550`, `5552`, `5554`, `5555`, `5556`, `5557`, `5558`, `5559`, `5560`, `5561`, `5562`, `5564`, `5565`, `5566`, `5567`, `5569`, `5570`, `5571`, `5572`, `5573`, `5574`, `5576`, `5578`, `5579`, `5580`, `5582`, `5583`, `5584`, `5585`, `5587`, `5588`, `5589`, `5590`, `5591`, `5593`, `5594`, `5595`, `5596`, `5597`, `5599`, `5601`, `5602`, `5603`, `5604`, `5605`, `5606`, `5608`, `5609`, `5610`, `5612`, `5613`, `5615`, `5617`, `5618`, `5619`, `5620`, `5622`, `5623`, `5624`, `5625`, `5515`, `5628`, `5630`, `5632`, `5633`, `5635`, `5636`, `5637`, `5638`, `5640`, `5642`, `5644`, `5645`, `5646`, `5648`, `5650`, `5652`, `5654`, `5655`, `5658`, `5659`, `5660`, `5661`, `5663`, `5664`, `5666`, `5667`, `5668`, `5670`, `5671`, `5672`, `5674`, `5675`, `5677`, `5679`, `5681`, `5682`, `5683`, `5684`, `5686`, `5687`, `5688`, `5690`, `5691`, `5693`, `5695`, `5696`, `5699`, `5700`, `5702`, `5703`, `5705`, `5708`, `5709`, `5710`, `5711`, `5712`, `5715`, `5716`, `5717`, `5718`, `5719`, `5721`, `5722`, `5723`, `5724`, `5727`, `5729`, `5730`, `5731`, `5732`, `5734`, `5736`, `5737`, `5740`, `5742`, `5744`, `5746`, `5748`, `5749`, `5750`, `5751`, `5752`, `5754`, `5755`, `5758`, `5760`, `5762`, `5764`, `5766`, `5769`, `5770`, `5772`, `5773`, `5776`, `5777`, `5779`, `5780`, `5781`, `5783`, `5785`, `5786`, `5788`, `5790`, `5792`, `5793`, `5794`, `5796`, `5797`, `5800`, `5801`, `5802`, `5803`, `5804`, `5806`, `5808`, `5809`, `5810`, `5812`, `5815`, `5816`, `5819`, `5820`, `5823`, `5824`, `5826`, `5828`, `5831`, `5832`, `5834`, `5836`, `5838`, `5839`, `5840`, `5841`, `5842`, `5843`, `5844`, `5846`, `5847`, `5848`, `5851`, `5853`, `5854`, `5855`, `5856`, `5857`, `5859`, `5861`, `5862`, `5864`, `5866`, `5867`, `5868`, `5870`, `5872`, `5875`, `5876`, `5877`, `5879`, `5881`, `5882`, `5883`, `5884`, `5886`, `5887`, `5888`, `5889`, `5890`, `5891`, `5892`, `5893`, `5895`, `5897`, `5898`, `2681`, `5899`, `5900`, `5901`, `5902`, `5903`, `5906`, `5907`, `5908`, `5909`, `5912`, `5913`, `5915`, `5917`, `5920`, `5921`, `5922`, `5923`, `5924`, `5925`, `5926`, `5927`, `5929`, `5930`, `5931`, `5932`, `5934`, `5935`, `5936`, `5937`, `5938`, `5939`, `5940`, `5941`, `5942`, `5943`, `5944`, `5945`, `5947`, `5948`, `5951`, `5952`, `5953`, `5955`, `5956`, `5957`, `5959`, `5961`, `4027`, `5963`, `5964`, `5965`, `5966`, `5968`, `5970`, `5971`, `5972`, `5973`, `5974`, `5976`, `5978`, `5979`, `5980`, `5981`, `5982`, `5984`, `5985`, `5986`, `5987`, `5988`, `5989`, `5991`, `5992`, `5994`, `5996`, `5997`, `5998`, `5999`, `6000`, `6001`, `6003`, `6004`, `6005`, `6006`, `6007`, `6008`, `6009`, `6010`, `6011`, `6012`, `6014`, `6015`, `6016`, `6018`, `6019`, `6021`, `6022`, `6023`, `6024`, `6026`, `6029`, `6030`, `6032`, `6034`, `6036`, `6038`, `6039`, `6040`, `6041`, `6043`, `6045`, `6046`, `6047`, `6048`, `6049`, `6050`, `6051`, `6052`, `6054`, `6055`, `6056`, `6058`, `6059`, `6061`, `6063`, `6064`, `6066`, `6067`, `6069`, `6071`, `6073`, `6074`, `6076`, `6077`, `6079`, `6081`, `6083`, `6085`, `6086`, `6087`, `6090`, `6094`, `6095`, `6096`, `6099`, `6101`, `6102`, `6103`, `6104`, `6105`, `6106`, `6108`, `6109`, `6110`, `6112`, `6113`, `6115`, `6117`, `6118`, `6119`, `6121`, `6123`, `6124`, `6125`, `6126`, `6128`, `6129`, `6130`, `6131`, `6132`, `6134`, `6136`, `6138`, `6139`, `6140`, `6142`, `6143`, `6145`, `6146`, `6147`, `6148`, `6149`, `6150`, `6151`, `6152`, `6153`, `6154`, `6155`, `6157`, `6158`, `6159`, `6160`, `6162`, `6163`, `6164`, `6165`, `6166`, `6168`, `6169`, `6170`, `6173`, `6174`, `6176`, `6178`, `6179`, `6180`, `6181`, `6182`, `6183`, `6184`, `6185`, `6186`, `6188`, `6190`, `6193`, `6194`, `6195`, `6197`, `6199`, `6201`, `6202`, `6203`, `6204`, `6205`, `6206`, `6207`, `6209`, `6211`, `6213`, `6214`, `6216`, `6218`, `6219`, `6220`, `6222`, `6223`, `6225`, `6226`, `6227`, `6228`, `6229`, `6231`, `6233`, `6234`, `6236`, `6238`, `6239`, `6241`, `6242`, `6243`, `6244`, `6245`, `6246`, `6247`, `6248`, `6249`, `6250`, `6252`, `6253`, `6255`, `6257`, `6259`, `6261`, `6262`, `6264`, `6265`, `6266`, `6268`, `6271`, `6272`, `6273`, `6274`, `6275`, `6277`, `6278`, `6279`, `6281`, `6282`, `6283`, `6284`, `6285`, `6286`, `6287`, `6288`, `6289`, `6291`, `6293`, `6294`, `6295`, `6296`, `6297`, `6298`, `6300`, `6302`, `6303`, `6304`, `6306`, `6308`, `6309`, `6312`, `6313`, `6315`, `6317`, `6319`, `6320`, `6321`, `6323`, `6324`, `6325`, `6327`, `6329`, `6330`, `6331`, `6332`, `6333`, `6334`, `6335`, `6336`, `6339`, `6340`, `6342`, `6343`, `6346`, `6349`, `6353`, `6355`, `6357`, `6358`, `6359`, `6360`, `6361`, `6363`, `6364`, `6365`, `6366`, `6368`, `6370`, `6372`, `6373`, `6375`, `6376`, `6377`, `6378`, `6379`, `6380`, `6384`, `6386`, `6388`, `6389`, `6390`, `6392`, `6393`, `6397`, `6398`, `6400`, `6402`, `6404`, `6405`, `6406`, `6408`, `6410`, `6412`, `6414`, `6415`, `6417`, `6418`, `6419`, `6420`, `6422`, `6423`, `6424`, `6425`, `6426`, `6427`, `6428`, `6430`, `6432`, `6433`, `6434`, `6435`, `6436`, `6438`, `6440`, `6441`, `6442`, `6443`, `6444`, `6445`, `6446`, `6447`, `6449`, `6450`, `6452`, `6453`, `6454`, `6455`, `6457`, `6458`, `6461`, `6462`, `6464`, `6465`, `6466`, `6467`, `6469`, `6470`, `6471`, `6472`, `6473`, `6474`, `6475`, `6476`, `6477`, `6480`, `6481`, `6482`, `6483`, `6484`, `6485`, `6486`, `6489`, `6490`, `6492`, `6494`, `6496`, `6497`, `6499`, `6500`, `6501`, `6503`, `6504`, `6505`, `6508`, `6509`, `6511`, `6513`, `6514`, `6516`, `6517`, `6519`, `6520`, `6521`, `6522`, `6523`, `6525`, `6526`, `6527`, `6528`, `6529`, `6533`, `6534`, `6536`, `6537`, `6538`, `6540`, `6542`, `6544`, `6545`, `6546`, `6548`, `6549`, `6550`, `6551`, `6553`, `6554`, `6555`, `6557`, `6559`, `6560`, `6561`, `6563`, `6564`, `6565`, `6566`, `6567`, `6568`, `6569`, `6570`, `6571`, `6572`, `6573`, `6574`, `6576`, `6577`, `6578`, `6579`, `6581`, `6582`, `6584`, `6585`, `6586`, `6588`, `6589`, `6590`, `6591`, `6592`, `6596`, `6597`, `6598`, `6599`, `6600`, `6602`, `6604`, `6606`, `6607`, `6609`, `6610`, `6611`, `6613`, `6614`, `6615`, `6616`, `6618`, `6620`, `6622`, `6623`, `6624`, `6626`, `6627`, `6628`, `6629`, `6630`, `6631`, `6632`, `6635`, `6637`, `6639`, `6641`, `6644`, `6646`, `6649`, `6651`, `6653`, `6654`, `6656`, `6657`, `6658`, `6660`, `6661`, `6662`, `6663`, `6665`, `6666`, `6667`, `6669`, `6670`, `6671`, `6673`, `6674`, `6676`, `6677`, `6679`, `6680`, `6682`, `6684`, `6685`, `6687`, `6688`, `6689`, `6691`, `6693`, `6694`, `6696`, `6698`, `6700`, `6701`, `6702`, `6704`, `6705`, `6707`, `6708`, `6709`, `6711`, `6712`, `6717`, `6718`, `6720`, `6722`, `6724`, `6725`, `6727`, `6728`, `6729`, `6730`, `6732`, `6734`, `6736`, `6738`, `6740`, `6743`, `6744`, `6745`, `6747`, `6749`, `6750`, `6752`, `6753`, `6754`, `6755`, `6756`, `6758`, `6760`, `6761`, `6763`, `6765`, `6767`, `6769`, `6770`, `6771`, `6773`, `6775`, `6777`, `6779`, `6780`, `6782`, `6783`, `6784`, `6786`, `6788`, `6789`, `6790`, `6791`, `6792`, `6793`, `6796`, `6798`, `6799`, `6800`, `6801`, `6802`, `6804`, `6805`, `6807`, `6808`, `6810`, `6811`, `6814`, `6815`, `6817`, `6818`, `6820`, `6821`, `6822`, `6823`, `6825`, `6827`, `6828`, `6829`, `6831`, `6832`, `6836`, `6838`, `6840`, `6842`, `6844`, `6846`, `6847`, `6849`, `6851`, `6853`, `6854`, `6855`, `6858`, `6859`, `6861`, `6863`, `6865`, `6866`, `6867`, `6868`, `6870`, `6873`, `6875`, `6876`, `6877`, `6878`, `6879`, `6880`, `6881`, `6883`, `6884`, `6885`, `6886`, `6888`, `6890`, `6892`, `6893`, `6894`, `6897`, `6899`, `6900`, `6902`, `6903`, `6904`, `6905`, `6906`, `6907`, `6910`, `6912`, `6913`, `6915`, `6916`, `6919`, `6921`, `6923`, `6924`, `6926`, `6927`, `6928`, `6930`, `6932`, `6934`, `6935`, `6936`, `6938`, `6940`, `6943`, `6945`, `6947`, `6950`, `6952`, `160`, `6953`, `6954`, `6955`, `6956`, `6958`, `6959`, `6961`, `6963`, `6964`, `6965`, `6966`, `6968`, `6969`, `6970`, `6971`, `6973`, `6974`, `6976`, `6977`, `6978`, `6979`, `6980`, `6981`, `6982`, `6984`, `6986`, `6988`, `6990`, `6991`, `6993`, `6995`, `6996`, `6998`, `7000`, `7001`, `7004`, `7005`, `7006`, `7007`, `7009`, `7010`, `7012`, `7013`, `7015`, `7016`, `7017`, `7020`, `7021`, `7023`, `7024`, `7026`, `7027`, `7028`, `7029`, `7030`, `7031`, `7032`, `7034`, `7035`, `7037`, `7038`, `7039`, `7040`, `7041`, `7043`, `7045`, `7047`, `7048`, `7051`, `7053`, `7055`, `7057`, `7058`, `7060`, `7062`, `7063`, `7064`, `7066`, `7068`, `7070`, `7071`, `7073`, `7074`, `7076`, `7078`, `7079`, `7080`, `7081`, `7082`, `7084`, `7086`, `7088`, `7090`, `7091`, `7092`, `7093`, `7095`, `7096`, `7097`, `7099`, `7100`, `7101`, `7103`, `7104`, `7105`, `7107`, `7108`, `7111`, `7112`, `7114`, `7115`, `7118`, `7120`, `7122`, `7124`, `7126`, `7127`, `7128`, `7131`, `7132`, `7134`, `7136`, `7138`, `7140`, `7142`, `7144`, `7146`, `7147`, `7150`, `7152`, `7154`, `7156`, `7158`, `7160`, `7161`, `7163`, `7164`, `7165`, `7167`, `7168`, `7170`, `7171`, `7173`, `7174`, `7176`, `7177`, `7179`, `7182`, `7183`, `7184`, `7186`, `7188`, `7189`, `7190`, `7191`, `7192`, `7193`, `7194`, `7195`, `7197`, `7199`, `7200`, `7202`, `7203`, `7205`, `7207`, `7209`, `7210`, `7213`, `7215`, `7217`, `7219`, `7220`, `7221`, `7223`, `7226`, `7228`, `7229`, `7231`, `7232`, `7233`, `7234`, `7235`, `7236`, `7238`, `7239`, `7241`, `7242`, `7244`, `7245`, `7247`, `7249`, `7250`, `7251`, `7252`, `7254`, `7255`, `7257`, `7258`, `7259`, `7261`, `7263`, `7264`, `7266`, `7267`, `7269`, `7270`, `7271`, `7272`, `7273`, `7274`, `7276`, `7277`, `7278`, `7279`, `7281`, `7282`, `7283`, `7286`, `7287`, `7289`, `7290`, `7291`, `7292`, `7295`, `7296`, `7297`, `7298`, `7300`, `7302`, `7303`, `7304`, `7306`, `7308`, `7309`, `7310`, `7311`, `7312`, `7313`, `7314`, `7316`, `7317`, `7320`, `7321`, `7322`, `7323`, `7325`, `7327`, `7329`, `7331`, `7333`, `7334`, `7335`, `7337`, `7338`, `7339`, `7341`, `7343`, `7344`, `7346`, `7347`, `7349`, `7350`, `7351`, `7352`, `7354`, `7356`, `7357`, `7359`, `7360`, `7361`, `7362`, `7364`, `7365`, `7367`, `7369`, `7370`, `7371`, `7372`, `7373`, `7374`, `7375`, `7376`, `7377`, `7378`, `7380`, `7381`, `7383`, `7384`, `7385`, `7386`, `7387`, `7388`, `7389`, `7391`, `7392`, `7393`, `7395`, `7397`, `7399`, `7400`, `7401`, `7402`, `7403`, `7404`, `7406`, `7408`, `7411`, `7412`, `7413`, `7414`, `7415`, `7416`, `7417`, `7418`, `7422`, `7424`, `7426`, `7428`, `7430`, `7432`, `7434`, `7436`, `7438`, `7440`, `7442`, `7443`, `7445`, `7447`, `7449`, `7451`, `7453`, `7454`, `7456`, `7458`, `7461`, `7463`, `7464`, `7465`, `7467`, `7469`, `7471`, `7473`, `7475`, `7477`, `7479`, `7481`, `7483`, `7485`, `7487`, `7488`, `7490`, `7491`, `7492`, `7494`, `7495`, `7497`, `7498`, `7500`, `7502`, `7504`, `7506`, `7508`, `7509`, `7511`, `7512`, `7513`, `7515`, `7516`, `7517`, `7519`, `7521`, `7523`, `7525`, `7527`, `7529`, `7531`, `7533`, `7535`, `7536`, `7538`, `7540`, `7542`, `7545`, `7547`, `7549`, `7550`, `7551`, `7553`, `7555`, `7557`, `7558`, `7560`, `7562`, `7564`, `7565`, `7566`, `7568`, `7569`, `7570`, `7571`, `7573`, `7575`, `7576`, `7577`, `7579`, `7581`, `7582`, `7584`, `7585`, `7421`, `7586`, `7588`, `7589`, `7590`, `7592`, `7595`, `7596`, `7598`, `7600`, `7602`, `7603`, `7604`, `7605`, `7606`, `7608`, `7610`, `7611`, `7613`, `7615`, `7617`, `7619`, `7620`, `7622`, `7623`, `7626`, `7627`, `7628`, `7630`, `7632`, `7633`, `7634`, `7635`, `7637`, `7638`, `7639`, `7640`, `7641`, `7642`, `7643`, `7644`, `7646`, `7648`, `7649`, `7651`, `7653`, `7655`, `7657`, `7659`, `7662`, `7663`, `7664`, `7665`, `7667`, `7668`, `7670`, `7672`, `7674`, `7676`, `7678`, `7679`, `7680`, `7681`, `7682`, `7683`, `7684`, `7687`, `7689`, `7691`, `7692`, `7693`, `7695`, `7697`, `7699`, `7700`, `7701`, `7702`, `7704`, `7705`, `7706`, `7708`, `7709`, `7710`, `7711`, `7712`, `7714`, `7715`, `7716`, `7717`, `7718`, `7719`, `7720`, `7721`, `7723`, `7724`, `7725`, `7726`, `7728`, `7730`, `7732`, `7733`, `7734`, `7735`, `7736`, `7737`, `7738`, `7740`, `7741`, `7742`, `7743`, `7744`, `7745`, `7746`, `7747`, `7748`, `7751`, `7752`, `7753`, `7754`, `7755`, `7756`, `7757`, `7759`, `7761`, `7762`, `7764`, `7766`, `7768`, `7769`, `7771`, `7773`, `7774`, `7775`, `7776`, `7777`, `7779`, `7781`, `7783`, `7784`, `7786`, `7787`, `7790`, `7792`, `7793`, `7794`, `7796`, `7798`, `7801`, `7803`, `7805`, `7808`, `7809`, `7810`, `7812`, `7813`, `7814`, `7816`, `7817`, `7819`, `7820`, `7821`, `7822`, `7823`, `7826`, `7828`, `7830`, `7831`, `7833`, `7834`, `7836`, `7837`, `7839`, `7840`, `7842`, `7843`, `7845`, `7846`, `7847`, `7848`, `7849`, `7850`, `7852`, `7853`, `7854`, `7855`, `7856`, `7857`, `7858`, `7859`, `7860`, `7861`, `7863`, `7864`, `7865`, `7866`, `7867`, `7869`, `7870`, `7871`, `7872`, `7874`, `7875`, `7876`, `7877`, `7878`, `7879`, `7880`, `7882`, `7883`, `7884`, `7885`, `7887`, `7889`, `7890`, `7891`, `7892`, `7893`, `7894`, `7896`, `7897`, `7899`, `7900`, `7901`, `7902`, `7903`, `7904`, `7905`, `7906`, `7907`, `7910`, `7911`, `7913`, `7914`, `7916`, `7918`, `7920`, `7923`, `7924`, `7926`, `7929`, `7930`, `7932`, `7935`, `7936`, `7937`, `7938`, `7940`, `7941`, `7942`, `7944`, `7947`, `7952`, `7954`, `7955`, `7957`, `7960`, `7961`, `7963`, `7965`, `7966`, `7967`, `7969`, `7971`, `7974`, `7975`, `7977`, `7979`, `7980`, `7981`, `7983`, `7985`, `7987`, `7988`, `7990`, `7993`, `7994`, `7995`, `7996`, `7998`, `7999`, `8000`, `8001`, `8002`, `8003`, `8004`, `8005`, `8007`, `8008`, `8009`, `8011`, `8013`, `8015`, `8018`, `8020`, `8022`, `8023`, `8024`, `8025`, `8027`, `8028`, `8029`, `8031`, `8032`, `8033`, `8035`, `8036`, `8037`, `8038`, `8039`, `8041`, `8042`, `8043`, `8044`, `8045`, `8047`, `8048`, `8049`, `8051`, `8052`, `8053`, `8055`, `8058`, `8059`, `8062`, `8063`, `8065`, `8066`, `8067`, `8068`, `8069`, `8070`, `8071`, `8072`, `8074`, `8076`, `8079`, `8080`, `8081`, `8082`, `8083`, `8084`, `8086`, `8087`, `8088`, `8089`, `8090`, `8091`, `8093`, `8095`, `8096`, `8099`, `338`, `8100`, `8101`, `8102`, `8103`, `8105`, `8106`, `8107`, `8108`, `8110`, `8111`, `8112`, `8113`, `8115`, `8116`, `8117`, `8118`, `8120`, `8121`, `8122`, `8124`, `8127`, `8128`, `8129`, `8130`, `8132`, `8133`, `8135`, `8137`, `8138`, `8139`, `8140`, `8141`, `8142`, `8143`, `8145`, `8147`, `8148`, `8150`, `8151`, `8152`, `8154`, `8156`, `8157`, `8158`, `8159`, `8160`, `8162`, `8163`, `8164`, `8165`, `8167`, `8168`, `8169`, `8171`, `8173`, `8174`, `8175`, `8177`, `8178`, `8179`, `8180`, `8181`, `8183`, `8184`, `8186`, `8187`, `8189`, `8191`, `8192`, `5415`, `8194`, `8195`, `8196`, `8197`, `8198`, `8199`, `8200`, `8201`, `8202`, `8204`, `1393`, `8205`, `8206`, `8209`, `8210`, `8211`, `8213`, `8214`, `8216`, `8217`, `8218`, `8220`, `8222`, `8223`, `8225`, `8226`, `8227`, `8228`, `8230`, `8232`, `8233`, `8234`, `8236`, `8237`, `8239`, `8240`, `8241`, `8242`, `8243`, `8244`, `8245`, `8246`, `8247`, `8248`, `8249`, `8252`, `8254`, `8256`, `8257`, `8258`, `8259`, `8260`, `8261`, `8263`, `8265`, `8266`, `8268`, `584`, `8270`, `8255`, `8272`, `8273`, `8274`, `8276`, `8278`, `8280`, `8281`, `8282`, `8284`, `8285`, `8286`, `8287`, `8289`, `8291`, `8293`, `8296`, `8297`, `8298`, `8299`, `8300`, `8301`, `8302`, `8304`, `8305`, `8306`, `8308`, `8310`, `8312`, `8313`, `8314`, `8316`, `8318`, `8320`, `8321`, `8322`, `8323`, `8324`, `8326`, `8327`, `8328`, `8329`, `8330`, `8331`, `8332`, `8333`, `8334`, `8335`, `8336`, `8337`, `8338`, `8339`, `8340`, `8341`, `8342`, `8343`, `8344`, `8345`, `8347`, `8348`, `8349`, `8350`, `8351`, `8352`, `8353`, `8354`, `8355`, `8356`, `8357`, `8359`, `8360`, `8362`, `8364`, `8366`, `8367`, `8368`, `8371`, `8372`, `8373`, `8374`, `8375`, `8376`, `8377`, `8378`, `8379`, `8380`, `8381`, `8382`, `8383`, `8384`, `8385`, `8387`, `8390`, `8391`, `8393`, `8394`, `8395`, `8397`, `8398`, `8399`, `8400`, `8401`, `8402`, `8403`, `8404`, `8406`, `8408`, `8409`, `8411`, `8412`, `8414`, `8415`, `8416`, `8417`, `8419`, `8422`, `8423`, `8425`, `8426`, `8428`, `8430`, `8431`, `8432`, `8433`, `8435`, `8436`, `8437`, `8438`, `8439`, `8441`, `8442`, `8443`, `8444`, `8445`, `8446`, `8448`, `8449`, `8450`, `8451`, `8452`, `8453`, `8454`, `8456`, `8457`, `8458`, `8461`, `8462`, `8464`, `8465`, `8466`, `8467`, `8468`, `8469`, `8470`, `8471`, `8473`, `8474`, `8475`, `8476`, `8477`, `8479`, `8482`, `8483`, `8486`, `8489`, `8490`, `8491`, `8493`, `8495`, `8496`, `8497`, `8498`, `8499`, `8500`, `8501`, `8502`, `8503`, `8504`, `8505`, `8506`, `8507`, `8509`, `8511`, `8512`, `8513`, `8514`, `8515`, `8517`, `8519`, `8520`, `8521`, `8522`, `8523`, `8524`, `8525`, `8526`, `8527`, `8529`, `8530`, `8532`, `8533`, `8534`, `8535`, `8536`, `8537`, `8539`, `8541`, `8542`, `8543`, `5344`, `8545`, `8546`, `8551`, `8552`, `8553`, `8554`, `8555`, `8556`, `8557`, `8558`, `8559`, `8560`, `8562`, `8565`, `8566`, `8567`, `8568`, `8569`, `8570`, `8571`, `8572`, `8573`, `8574`, `8575`, `8578`, `8579`, `8580`, `8582`, `8584`, `8585`, `8586`, `8587`, `8588`, `8589`, `8590`, `8591`, `8592`, `8593`, `8595`, `8596`, `8597`, `8598`, `8599`, `8600`, `8601`, `8602`, `3087`, `8603`, `8604`, `8605`, `8606`, `8607`, `8608`, `8609`, `8610`, `8611`, `8612`, `8613`, `8614`, `8616`, `8617`, `8618`, `8619`, `8620`, `8621`, `8623`, `8625`, `8626`, `8629`, `8631`, `8633`, `8634`, `8635`, `8637`, `8638`, `8639`, `8641`, `8642`, `8643`, `8645`, `8646`, `8647`, `8649`, `8650`, `8651`, `8652`, `8653`, `8654`, `8655`, `8656`, `8657`, `8658`, `8659`, `8660`, `8661`, `8662`, `8663`, `8664`, `8665`, `8666`, `8669`, `8670`, `8671`, `8672`, `8673`, `8674`, `8675`, `8676`, `8678`, `8679`, `8681`, `8682`, `8683`, `8684`, `8685`, `8687`, `8688`, `8689`, `8690`, `8691`, `8692`, `8694`, `8696`, `8698`, `8699`, `8700`, `8701`, `8702`, `8703`, `8704`, `8705`, `8706`, `8707`, `8708`, `8709`, `8710`, `8711`, `8712`, `8713`, `8714`, `8715`, `8716`, `8717`, `8718`, `8719`, `8720`, `8721`, `8722`, `8723`, `8724`, `8725`, `8726`, `8727`, `8728`, `8729`, `8730`, `8731`, `8732`, `8733`, `8734`, `8735`, `8736`, `8737`, `8738`, `8739`, `8740`, `8741`, `8742`, `8743`, `8744`, `8745`, `8746`, `8747`, `8748`, `8749`, `8750`, `8751`, `8752`, `8754`, `8755`, `8756`, `8757`, `8758`, `8759`, `8760`, `8761`, `8763`, `8764`, `8765`, `8766`, `8768`, `8769`, `8770`, `8771`, `8772`, `8773`, `8774`, `8775`, `8776`, `8777`, `8779`, `8780`, `8781`, `8782`, `8783`, `8784`, `8785`, `8786`, `8787`, `8788`, `8789`, `8790`, `8791`, `8792`, `8794`, `8795`, `8796`, `8797`, `8799`, `8800`, `8801`, `8802`, `8803`, `8804`, `8805`, `8806`, `8807`, `8810`, `8811`, `8812`, `8815`, `8816`, `8818`, `8819`, `8820`, `8821`, `8822`, `8823`, `8824`, `8825`, `8826`, `8828`, `8829`, `8830`, `8831`, `8833`, `8834`, `8835`, `8836`, `8837`, `8838`, `8840`, `8841`, `8843`, `8844`, `8845`, `8846`, `8847`, `8848`, `8849`, `8851`, `8853`, `8854`, `8855`, `8856`, `8858`, `8859`, `8860`, `8861`, `8862`, `8863`, `8864`, `8865`, `8867`, `8868`, `8869`, `8871`, `8872`, `8873`, `8874`, `8875`, `8876`, `8877`, `8878`, `8879`, `8880`, `8881`, `8882`, `8884`, `8886`, `8887`, `8888`, `8889`, `8890`, `8891`, `8892`, `8894`, `8895`, `8896`, `8899`, `8900`, `8901`, `8902`, `8903`, `8904`, `8906`, `8908`, `8910`, `8912`, `8914`, `8915`, `8916`, `8917`, `8918`, `8919`, `8921`, `8923`, `8925`, `8926`, `8927`, `8928`, `8930`, `8932`, `8934`, `8936`, `8938`, `8940`, `8942`, `8944`, `8946`, `8947`, `8949`, `8951`, `8953`, `8954`, `8955`, `8956`, `8957`, `8958`, `8959`, `8960`, `8961`, `8963`, `8965`, `8966`, `8968`, `8969`, `8971`, `8973`, `8975`, `8976`, `8977`, `8978`, `8980`, `8981`, `8982`, `8984`, `8986`, `8987`, `8988`, `8989`, `8991`, `8993`, `8994`, `8996`, `8998`, `9000`, `9002`, `9003`, `9005`, `9007`, `9008`, `9009`, `9010`, `9011`, `9012`, `9014`, `9016`, `9017`, `9019`, `9021`, `9023`, `9024`, `9026`, `985`, `2497`, `6237`, `6625`, `9028`, `9029`, `9031`, `9032`, `9034`, `9035`, `9036`, `9038`, `9040`, `9041`, `9042`, `9043`, `9044`, `9046`, `9047`, `9048`, `9050`, `9052`, `9053`, `9054`, `9055`, `9056`, `9058`, `9059`, `9060`, `9061`, `9062`, `9065`, `9066`, `9067`, `9068`, `3741`, `9069`, `9070`, `9071`, `9073`, `9074`, `9076`, `9077`, `9079`, `9081`, `9082`, `9084`, `9085`, `9086`, `9088`, `9089`, `9092`, `9093`, `9095`, `9096`, `9098`, `9099`, `9100`, `9101`, `9103`, `9104`, `9105`, `9107`, `9108`, `9110`, `9113`, `9115`, `9117`, `9118`, `9119`, `9120`, `9121`, `9122`, `9123`, `9124`, `9125`, `9126`, `9128`, `9130`, `9131`, `9132`, `9133`, `9135`, `9136`, `9137`, `9138`, `9139`, `9140`, `9143`, `9145`, `9147`, `9148`, `9150`, `9151`, `9152`, `9153`, `9154`, `9155`, `9157`, `9159`, `9160`, `9161`, `9162`, `9164`, `9165`, `9167`, `9169`, `4571`, `5714`, `9171`, `9173`, `9174`, `9176`, `9178`, `9179`, `9181`, `9182`, `9184`, `9186`, `9187`, `9188`, `9189`, `9190`, `9191`, `9192`, `9193`, `9195`, `9196`, `9197`, `9198`, `9200`, `9202`, `9203`, `9204`, `9205`, `9206`, `9207`, `9208`, `9209`, `9211`, `9212`, `9214`, `9215`, `9217`, `9218`, `9219`, `9220`, `9221`, `9222`, `9223`, `9224`, `9226`, `9228`, `9230`, `9231`, `9232`, `9234`, `9235`, `9237`, `9240`, `9242`, `9244`, `9246`, `9247`, `9249`, `9251`, `9252`, `9254`, `9256`, `9257`, `9258`, `9259`, `9260`, `9261`, `9262`, `9263`, `9264`, `9265`, `9266`, `9267`, `9268`, `9271`, `9273`, `9274`, `9275`, `9277`, `9278`, `9280`, `9281`, `9282`, `9283`, `9284`, `9285`, `9286`, `9287`, `9288`, `9289`, `9291`, `9292`, `9293`, `9294`, `9295`, `9297`, `9299`, `9300`, `9302`, `9304`, `9305`, `9306`, `9308`, `9309`, `9310`, `9311`, `9314`, `9316`, `9318`, `9320`, `9322`, `9323`, `9324`, `9327`, `9328`, `9330`, `9331`, `9332`, `9333`, `9334`, `9335`, `9336`, `9337`, `9338`, `9339`, `9340`, `9341`, `9342`, `9343`, `9346`, `9348`, `9349`, `9351`, `9352`, `9354`, `9355`, `9356`, `9357`, `9358`, `9359`, `9362`, `9363`, `9365`, `9367`, `9369`, `9370`, `9371`, `9372`, `9373`, `9374`, `9375`, `9376`, `9378`, `9379`, `9381`, `9382`, `9383`, `9384`, `9386`, `9387`, `9388`, `9389`, `9390`, `9391`, `9393`, `9394`, `9395`, `9396`, `9397`, `9398`, `9399`, `9400`, `9402`, `9403`, `9404`, `9405`, `9406`, `9407`, `9408`, `9409`, `9411`, `9413`, `9414`, `9415`, `9416`, `9417`, `9418`, `9420`, `9421`, `9422`, `9423`, `9424`, `9425`, `9427`, `9428`, `9429`, `9430`, `9431`, `9432`, `9434`, `9435`, `9437` | | **`experimental_arc_labeler`** | `ROOT`, `acl`, `advcl`, `advmod`, `advmod:locy`, `advmod:mode`, `advmod:que`, `advmod:tfrom`, `advmod:tlocy`, `advmod:to`, `advmod:tto`, `amod:att`, `amod:attlvc`, `appos`, `aux`, `case`, `cc`, `ccomp`, `ccomp:obj`, `ccomp:obl`, `ccomp:pred`, `compound`, `compound:preverb`, `conj`, `cop`, `csubj`, `dep`, `det`, `discourse`, `dislocated`, `flat:name`, `goeswith`, `iobj`, `list`, `mark`, `nmod`, `nmod:att`, `nmod:attlvc`, `nmod:obl`, `nsubj`, `nsubj:lvc`, `nummod`, `obj`, `obj:lvc`, `obl`, `obl:lvc`, `orphan`, `parataxis`, `punct`, `vocative`, `xcomp` | | **`ner`** | `LOC`, `MISC`, `ORG`, `PER` |","title":"Label Scheme"},{"location":"models_gen/index_trf/#accuracy","text":"Type Score TOKEN_ACC 100.00 TOKEN_P 99.86 TOKEN_R 99.93 TOKEN_F 99.89 SENTS_P 98.66 SENTS_R 98.66 SENTS_F 98.66 TAG_ACC 97.39 POS_ACC 97.38 MORPH_ACC 93.65 MORPH_MICRO_P 97.75 MORPH_MICRO_R 97.09 MORPH_MICRO_F 97.42 LEMMA_ACC 98.67 BOUND_DEP_LAS 87.15 BOUND_DEP_UAS 91.19 DEP_UAS 91.17 DEP_LAS 87.13 ENTS_P 90.25 ENTS_R 90.93 ENTS_F 90.59","title":"Accuracy"},{"location":"models_gen/install_lg/","text":"You can either install the model through pip : Installation # # Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.3) $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/v3.4.3/hu_core_news_lg-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_lg\" ) # Install a model with a specific version such as the latest one (3.4.3) huspacy . download ( \"hu_core_news_lg\" , \"3.4.3\" ) Available model versions: 3.2.1 , 3.2.2 , 3.3.0 , 3.3.1 , 3.4.0 , 3.4.1 , 3.4.2 , 3.4.3","title":"Installation"},{"location":"models_gen/install_lg/#installation","text":"# Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/main/hu_core_news_lg-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.3) $ pip install https://huggingface.co/huspacy/hu_core_news_lg/resolve/v3.4.3/hu_core_news_lg-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_lg\" ) # Install a model with a specific version such as the latest one (3.4.3) huspacy . download ( \"hu_core_news_lg\" , \"3.4.3\" ) Available model versions: 3.2.1 , 3.2.2 , 3.3.0 , 3.3.1 , 3.4.0 , 3.4.1 , 3.4.2 , 3.4.3","title":"Installation"},{"location":"models_gen/install_md/","text":"You can either install the model through pip : Installation # # Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/main/hu_core_news_md-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.1) $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/v3.4.1/hu_core_news_md-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_md\" ) # Install a model with a specific version such as the latest one (3.4.1) huspacy . download ( \"hu_core_news_md\" , \"3.4.1\" ) Available model versions: 3.4.1","title":"Installation"},{"location":"models_gen/install_md/#installation","text":"# Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/main/hu_core_news_md-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.4.1) $ pip install https://huggingface.co/huspacy/hu_core_news_md/resolve/v3.4.1/hu_core_news_md-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_md\" ) # Install a model with a specific version such as the latest one (3.4.1) huspacy . download ( \"hu_core_news_md\" , \"3.4.1\" ) Available model versions: 3.4.1","title":"Installation"},{"location":"models_gen/install_trf/","text":"You can either install the model through pip : Installation # # Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.2.4) $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/v3.2.4/hu_core_news_trf-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_trf\" ) # Install a model with a specific version such as the latest one (3.2.4) huspacy . download ( \"hu_core_news_trf\" , \"3.2.4\" ) Available model versions: 3.2.0 , 3.2.1 , 3.2.2 , 3.2.3 , 3.2.4","title":"Installation"},{"location":"models_gen/install_trf/#installation","text":"# Install the latest model $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/main/hu_core_news_trf-any-py3-none-any.whl # Install a model with a specific version such as the latest one (3.2.4) $ pip install https://huggingface.co/huspacy/hu_core_news_trf/resolve/v3.2.4/hu_core_news_trf-any-py3-none-any.whl or by using huspacy 's built-in facilities: import huspacy # Install the latest model huspacy . download ( \"hu_core_news_trf\" ) # Install a model with a specific version such as the latest one (3.2.4) huspacy . download ( \"hu_core_news_trf\" , \"3.2.4\" ) Available model versions: 3.2.0 , 3.2.1 , 3.2.2 , 3.2.3 , 3.2.4","title":"Installation"},{"location":"recipes/faq/","text":"Frequently asked questions # HuSpaCy is slow, what can I do? # Not it s not. :) You have several options to speed up your processing pipeline. If accuracy is not crucial use a smaller model: md < lg < trf Utilize GPU: use the following directive before loading the model. spacy . prefer_gpu () Batch processing of multiple documents are always faster. Use Language.pipe() method: texts = [ \"first doc\" , \"second doc\" ] docs = nlp . pipe ( texts ) Disable components not needed. When mining documents for named entities, the default model unnecessarily computes lemmata, PoS tags and dependency trees. You can easily disable them during model loading (c.f. spacy.load() or huspacy.load() ) or using Language.disable_pipe() nlp = huspacy . load ( \"hu_core_news_lg\" , disable = [ \"tagger\" ]) nlp . disable_pipe ( \"tagger\" ) The NER model usually confuses ORG and LOC entites, why is that? # The underlying model has been trained on corpora following the \"tag-for-meaning\" guideline which yields context dependent labels. For example referring to \"Budapest\" in the context of the Hungarian government should yield the ORG label while in other contexts it should be tagged as a LOC . Can I use HuSpaCy for my commercial software? # Yes, the tool is licensed under Apache 2.0 license, while all the models are CC BY-SA 4.0 .","title":"FAQ"},{"location":"recipes/faq/#frequently-asked-questions","text":"","title":" Frequently asked questions"},{"location":"recipes/faq/#huspacy-is-slow-what-can-i-do","text":"Not it s not. :) You have several options to speed up your processing pipeline. If accuracy is not crucial use a smaller model: md < lg < trf Utilize GPU: use the following directive before loading the model. spacy . prefer_gpu () Batch processing of multiple documents are always faster. Use Language.pipe() method: texts = [ \"first doc\" , \"second doc\" ] docs = nlp . pipe ( texts ) Disable components not needed. When mining documents for named entities, the default model unnecessarily computes lemmata, PoS tags and dependency trees. You can easily disable them during model loading (c.f. spacy.load() or huspacy.load() ) or using Language.disable_pipe() nlp = huspacy . load ( \"hu_core_news_lg\" , disable = [ \"tagger\" ]) nlp . disable_pipe ( \"tagger\" )","title":"HuSpaCy is slow, what can I do?"},{"location":"recipes/faq/#the-ner-model-usually-confuses-org-and-loc-entites-why-is-that","text":"The underlying model has been trained on corpora following the \"tag-for-meaning\" guideline which yields context dependent labels. For example referring to \"Budapest\" in the context of the Hungarian government should yield the ORG label while in other contexts it should be tagged as a LOC .","title":"The NER model usually confuses ORG and LOC entites, why is that?"},{"location":"recipes/faq/#can-i-use-huspacy-for-my-commercial-software","text":"Yes, the tool is licensed under Apache 2.0 license, while all the models are CC BY-SA 4.0 .","title":"Can I use HuSpaCy for my commercial software?"},{"location":"recipes/nerpp/","text":"There can be cases when the default four-type NER does not suffice, one needs a more fine-grained entity type system. Attila Novak developed a corpus and an entity recognition system consisting more than 30 entity types. We provide easy integration with his tool. Load # Loading the model can be achieved by adding the nerpp component. import huspacy import huspacy.integrations # Load the default lexicon nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"nerpp\" ) Please note that using this component requires transformers , torch and spacy-alignments to be installed. Installing HuSpaCy with trf extras automates this step: $ pip install huspacy [ trf ] Get entity annotations # The nerpp components stores entities as spans on the document under the \"ents\" key: doc = nlp ( \"A Ford Focus egy als\u00f3-k\u00f6z\u00e9pkateg\u00f3ri\u00e1s csal\u00e1di aut\u00f3\" ) print ( doc . spans [ \"ents\" ]) # [\"Ford Focus\"] print ( doc . spans [ \"ents\" ][ 0 ] . label_ ) # \"CAR\" Citing # If you use this component, please cite: @InProceedings { novak-novak:2022:LREC , author = {Nov{\\'{a}}k, Attila and Nov{\\'{a}}k, Borb{\\'{a}}la} , title = {NerKor+Cars-OntoNotes++} , booktitle = {Proceedings of the 13th Language Resources and Evaluation Conference (LREC 2022)} , month = {June} , year = {2022} , address = {Marseille, France} , publisher = {European Language Resources Association} , pages = {1907--1916} , url = {http://www.lrec-conf.org/proceedings/lrec2022/pdf/2022.lrec-1.203.pdf} }","title":"Extended entity recognition"},{"location":"recipes/nerpp/#load","text":"Loading the model can be achieved by adding the nerpp component. import huspacy import huspacy.integrations # Load the default lexicon nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"nerpp\" ) Please note that using this component requires transformers , torch and spacy-alignments to be installed. Installing HuSpaCy with trf extras automates this step: $ pip install huspacy [ trf ]","title":"Load"},{"location":"recipes/nerpp/#get-entity-annotations","text":"The nerpp components stores entities as spans on the document under the \"ents\" key: doc = nlp ( \"A Ford Focus egy als\u00f3-k\u00f6z\u00e9pkateg\u00f3ri\u00e1s csal\u00e1di aut\u00f3\" ) print ( doc . spans [ \"ents\" ]) # [\"Ford Focus\"] print ( doc . spans [ \"ents\" ][ 0 ] . label_ ) # \"CAR\"","title":"Get entity annotations"},{"location":"recipes/nerpp/#citing","text":"If you use this component, please cite: @InProceedings { novak-novak:2022:LREC , author = {Nov{\\'{a}}k, Attila and Nov{\\'{a}}k, Borb{\\'{a}}la} , title = {NerKor+Cars-OntoNotes++} , booktitle = {Proceedings of the 13th Language Resources and Evaluation Conference (LREC 2022)} , month = {June} , year = {2022} , address = {Marseille, France} , publisher = {European Language Resources Association} , pages = {1907--1916} , url = {http://www.lrec-conf.org/proceedings/lrec2022/pdf/2022.lrec-1.203.pdf} }","title":"Citing"},{"location":"recipes/roman_nums/","text":"In case you want to use the arabic value of roman numbers, you can use one of our optional pipeline steps. In order to process numbers, roman_to_arabic module should be added to the pipeline: import huspacy import huspacy.components nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"roman_to_arabic\" ) doc = nlp ( \"A IV. ker\u00fclet \u00dajpest.\" ) print ( doc [ 1 ] . lemma_ ) # Should yield \"4.\"","title":"Roman numbers"},{"location":"recipes/sentencizer/","text":"All models come with a machine learning based sentencizer. If by any reason, you want to rely on a rule-base one, HuSpacy got your back as it contains a classic sentence boundary detector component. In order to use it, you should replace the senter pipeline step: import huspacy import huspacy.components nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . replace_pipe ( \"senter\" , \"hun_sentencizer\" )","title":"Rule-base sentencizer"},{"location":"recipes/sentiment/","text":"HuSpaCy is shipped with two sentiment lexicons. The component loads up a lexicon and match words with it. The module can use two sentiment lexicons, the default one is the PolText Lab's resource while one can also load the PrecoSenti lexicon. Load the component # import huspacy import huspacy.integrations # Load the default lexicon nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"sentiment_lexicon\" ) # Load a specific lexicon nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"sentiment_lexicon\" , config = { \"lexicon_id\" : \"precognox\" }) Extract sentiment values # doc = nlp ( \"Ez szuper j\u00f3\" ) print ( doc . spans [ \"sentiment\" ]) # [\"szuper\", \"j\u00f3\"] print ( doc [ 1 ] . _ . sentiment ) # 'POS' print ( doc [ 2 ] . _ . sentiment ) # 'POS'","title":"Sentiment lexicons"},{"location":"recipes/sentiment/#load-the-component","text":"import huspacy import huspacy.integrations # Load the default lexicon nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"sentiment_lexicon\" ) # Load a specific lexicon nlp = huspacy . load ( \"hu_core_news_lg\" ) nlp . add_pipe ( \"sentiment_lexicon\" , config = { \"lexicon_id\" : \"precognox\" })","title":"Load the component"},{"location":"recipes/sentiment/#extract-sentiment-values","text":"doc = nlp ( \"Ez szuper j\u00f3\" ) print ( doc . spans [ \"sentiment\" ]) # [\"szuper\", \"j\u00f3\"] print ( doc [ 1 ] . _ . sentiment ) # 'POS' print ( doc [ 2 ] . _ . sentiment ) # 'POS'","title":"Extract sentiment values"},{"location":"reference/huspacy/__init__/","text":"download # download ( model_name = __DEFAULT_MODEL , model_version = __DEFAULT_VERSION ) Downloads a HuSpaCy model. Parameters: Name Type Description Default model_name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL model_version str model version, if not provided it defaults to the latest version (\"main\") __DEFAULT_VERSION Returns: Type Description None None get_valid_models # get_valid_models ( spacy_version = None ) Returns valid model names and versions for the given spacy version Parameters: Name Type Description Default spacy_version Optional [ str ] spaCy version to compare with None Returns: Type Description Dict [ str , List [ str ]] Dict[str, List[str]]: Valid model names and associated versions load # load ( name = __DEFAULT_MODEL , vocab = True , disable = None , exclude = None , config = None ) Loads a HuSpaCy model. Parameters: Name Type Description Default name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL vocab Vocab A Vocab object. If True, a vocab is created. True disable Iterable [ str ] Names of pipeline components to disable. Disabled pipes will be loaded but they won't be run unless you explicitly enable them by calling nlp.enable_pipe. None exclude Iterable [ str ] Names of pipeline components to exclude. Excluded components won't be loaded. None config Union [ Dict [ str , Any ], Config ] Config overrides as nested dict or dict None Returns: Name Type Description Language Language The loaded nlp object","title":"huspacy"},{"location":"reference/huspacy/__init__/#huspacy.download","text":"download ( model_name = __DEFAULT_MODEL , model_version = __DEFAULT_VERSION ) Downloads a HuSpaCy model. Parameters: Name Type Description Default model_name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL model_version str model version, if not provided it defaults to the latest version (\"main\") __DEFAULT_VERSION Returns: Type Description None None","title":"download()"},{"location":"reference/huspacy/__init__/#huspacy.get_valid_models","text":"get_valid_models ( spacy_version = None ) Returns valid model names and versions for the given spacy version Parameters: Name Type Description Default spacy_version Optional [ str ] spaCy version to compare with None Returns: Type Description Dict [ str , List [ str ]] Dict[str, List[str]]: Valid model names and associated versions","title":"get_valid_models()"},{"location":"reference/huspacy/__init__/#huspacy.load","text":"load ( name = __DEFAULT_MODEL , vocab = True , disable = None , exclude = None , config = None ) Loads a HuSpaCy model. Parameters: Name Type Description Default name str model name, if not provided it defaults to hu_core_news_lg __DEFAULT_MODEL vocab Vocab A Vocab object. If True, a vocab is created. True disable Iterable [ str ] Names of pipeline components to disable. Disabled pipes will be loaded but they won't be run unless you explicitly enable them by calling nlp.enable_pipe. None exclude Iterable [ str ] Names of pipeline components to exclude. Excluded components won't be loaded. None config Union [ Dict [ str , Any ], Config ] Config overrides as nested dict or dict None Returns: Name Type Description Language Language The loaded nlp object","title":"load()"},{"location":"reference/huspacy/utils/","text":"run_command # run_command ( cmd_list , * , stdin = None , capture = False ) Run a command on the command line as a subprocess. If the subprocess returns a non-zero exit code, a system exit is performed. command (List[str]): The command as a list of strings. stdin (Optional[Any]): stdin to read from or None. capture (bool): Whether to capture the output and errors. If False, the stdout and stderr will not be redirected, and if there's an error, sys.exit will be called with the return code. You should use capture=False when you want to turn over execution to the command, and capture=True when you want to run the command more like a function. RETURNS (Optional[CompletedProcess]): The process object.","title":"Utils"},{"location":"reference/huspacy/utils/#huspacy.utils.run_command","text":"run_command ( cmd_list , * , stdin = None , capture = False ) Run a command on the command line as a subprocess. If the subprocess returns a non-zero exit code, a system exit is performed. command (List[str]): The command as a list of strings. stdin (Optional[Any]): stdin to read from or None. capture (bool): Whether to capture the output and errors. If False, the stdout and stderr will not be redirected, and if there's an error, sys.exit will be called with the return code. You should use capture=False when you want to turn over execution to the command, and capture=True when you want to run the command more like a function. RETURNS (Optional[CompletedProcess]): The process object.","title":"run_command()"},{"location":"reference/huspacy/components/__init__/","text":"","title":"  init  "},{"location":"reference/huspacy/components/edit_tree_lemmatizer/","text":"DEFAULT_EDIT_TREE_LEMMATIZER_MODEL module-attribute # DEFAULT_EDIT_TREE_LEMMATIZER_MODEL = Config () . from_str ( default_model_config )[ 'model' ] default_model_config module-attribute # default_model_config = ' \\n [model] \\n @architectures = \"spacy.Tagger.v2\" \\n\\n [model.tok2vec] \\n @architectures = \"spacy.HashEmbedCNN.v2\" \\n pretrained_vectors = null \\n width = 96 \\n depth = 4 \\n embed_size = 2000 \\n window_size = 1 \\n maxout_pieces = 3 \\n subword_features = true \\n ' EditTreeLemmatizer # Bases: TrainablePipe Lemmatizer that lemmatizes each word using a predicted edit tree. backoff instance-attribute # backoff = backoff cfg instance-attribute # cfg : Dict [ str , Any ] = { 'labels' : []} min_tree_freq instance-attribute # min_tree_freq = min_tree_freq model instance-attribute # model = model name instance-attribute # name = name overwrite instance-attribute # overwrite = overwrite overwrite_labels instance-attribute # overwrite_labels = overwrite_labels scorer instance-attribute # scorer = scorer top_k instance-attribute # top_k = top_k tree2label instance-attribute # tree2label : Dict [ int , int ] = {} trees instance-attribute # trees = EditTrees ( self . vocab . strings ) vocab instance-attribute # vocab = vocab from_bytes # from_bytes ( bytes_data , * , exclude = tuple ()) from_disk # from_disk ( path , exclude = tuple ()) get_loss # get_loss ( examples , scores ) hide_labels property # hide_labels () initialize # initialize ( get_examples , * , nlp = None , labels = None ) label_data property # label_data () labels property # labels () Returns the labels currently added to the component. predict # predict ( docs ) set_annotations # set_annotations ( docs , batch_tree_ids ) to_bytes # to_bytes ( * , exclude = tuple ()) to_disk # to_disk ( path , exclude = tuple ()) debug # debug ( * args ) make_edit_tree_lemmatizer # make_edit_tree_lemmatizer ( nlp , name , model , backoff , min_tree_freq , overwrite , top_k , overwrite_labels , scorer ) Construct an EditTreeLemmatizer component.","title":"edit_tree_lemmatizer"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.DEFAULT_EDIT_TREE_LEMMATIZER_MODEL","text":"DEFAULT_EDIT_TREE_LEMMATIZER_MODEL = Config () . from_str ( default_model_config )[ 'model' ]","title":"DEFAULT_EDIT_TREE_LEMMATIZER_MODEL"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.default_model_config","text":"default_model_config = ' \\n [model] \\n @architectures = \"spacy.Tagger.v2\" \\n\\n [model.tok2vec] \\n @architectures = \"spacy.HashEmbedCNN.v2\" \\n pretrained_vectors = null \\n width = 96 \\n depth = 4 \\n embed_size = 2000 \\n window_size = 1 \\n maxout_pieces = 3 \\n subword_features = true \\n '","title":"default_model_config"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer","text":"Bases: TrainablePipe Lemmatizer that lemmatizes each word using a predicted edit tree.","title":"EditTreeLemmatizer"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.backoff","text":"backoff = backoff","title":"backoff"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.cfg","text":"cfg : Dict [ str , Any ] = { 'labels' : []}","title":"cfg"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.min_tree_freq","text":"min_tree_freq = min_tree_freq","title":"min_tree_freq"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.model","text":"model = model","title":"model"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.name","text":"name = name","title":"name"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.overwrite","text":"overwrite = overwrite","title":"overwrite"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.overwrite_labels","text":"overwrite_labels = overwrite_labels","title":"overwrite_labels"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.scorer","text":"scorer = scorer","title":"scorer"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.top_k","text":"top_k = top_k","title":"top_k"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.tree2label","text":"tree2label : Dict [ int , int ] = {}","title":"tree2label"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.trees","text":"trees = EditTrees ( self . vocab . strings )","title":"trees"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.vocab","text":"vocab = vocab","title":"vocab"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.from_bytes","text":"from_bytes ( bytes_data , * , exclude = tuple ())","title":"from_bytes()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.from_disk","text":"from_disk ( path , exclude = tuple ())","title":"from_disk()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.get_loss","text":"get_loss ( examples , scores )","title":"get_loss()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.hide_labels","text":"hide_labels ()","title":"hide_labels()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.initialize","text":"initialize ( get_examples , * , nlp = None , labels = None )","title":"initialize()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.label_data","text":"label_data ()","title":"label_data()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.labels","text":"labels () Returns the labels currently added to the component.","title":"labels()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.predict","text":"predict ( docs )","title":"predict()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.set_annotations","text":"set_annotations ( docs , batch_tree_ids )","title":"set_annotations()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.to_bytes","text":"to_bytes ( * , exclude = tuple ())","title":"to_bytes()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.EditTreeLemmatizer.to_disk","text":"to_disk ( path , exclude = tuple ())","title":"to_disk()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.debug","text":"debug ( * args )","title":"debug()"},{"location":"reference/huspacy/components/edit_tree_lemmatizer/#huspacy.components.edit_tree_lemmatizer.make_edit_tree_lemmatizer","text":"make_edit_tree_lemmatizer ( nlp , name , model , backoff , min_tree_freq , overwrite , top_k , overwrite_labels , scorer ) Construct an EditTreeLemmatizer component.","title":"make_edit_tree_lemmatizer()"},{"location":"reference/huspacy/components/lemma_postprocessing/","text":"This module contains various rule-based components aiming to improve on baseline lemmatization tools. LemmaSmoother # Bases: Pipe Smooths lemma by fixing common errors of the edit-tree lemmatizer. create_lemma_smoother staticmethod # create_lemma_smoother ( nlp , name ) RomanToArabic # Bases: Pipe Converts roman numerals to arabic numerals. create_component staticmethod # create_component ( nlp , name ) lemma_case_smoother # lemma_case_smoother ( doc ) Smooth lemma casing by POS. DEPRECATED: This is not needed anymore, as the lemmatizer is now case-insensitive. Parameters: Name Type Description Default doc Doc Input document. required Returns: Name Type Description Doc Doc Output document.","title":"lemma_postprocessing"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.LemmaSmoother","text":"Bases: Pipe Smooths lemma by fixing common errors of the edit-tree lemmatizer.","title":"LemmaSmoother"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.LemmaSmoother.create_lemma_smoother","text":"create_lemma_smoother ( nlp , name )","title":"create_lemma_smoother()"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.RomanToArabic","text":"Bases: Pipe Converts roman numerals to arabic numerals.","title":"RomanToArabic"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.RomanToArabic.create_component","text":"create_component ( nlp , name )","title":"create_component()"},{"location":"reference/huspacy/components/lemma_postprocessing/#huspacy.components.lemma_postprocessing.lemma_case_smoother","text":"lemma_case_smoother ( doc ) Smooth lemma casing by POS. DEPRECATED: This is not needed anymore, as the lemmatizer is now case-insensitive. Parameters: Name Type Description Default doc Doc Input document. required Returns: Name Type Description Doc Doc Output document.","title":"lemma_case_smoother()"},{"location":"reference/huspacy/components/lookup_lemmatizer/","text":"LookupLemmatizer # Bases: Pipe LookupLemmatizer learn (token, pos, morph. feat) -> lemma mappings during training, and applies them at prediction time. scorer instance-attribute # scorer = scorer source instance-attribute # source = source create staticmethod # create ( nlp , name , scorer , source ) from_disk # from_disk ( path , exclude = tuple ()) initialize # initialize ( get_examples , * , nlp = None ) to_disk # to_disk ( path , exclude = tuple ()) train # train ( sentences , min_occurrences = 1 ) Parameters: Name Type Description Default sentences Iterable [ Iterable [ Tuple [ str , str , str , str ]]] Sentences to learn the mappings from required min_occurrences int mapping occurring less than this threshold are not learned 1","title":"lookup_lemmatizer"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer","text":"Bases: Pipe LookupLemmatizer learn (token, pos, morph. feat) -> lemma mappings during training, and applies them at prediction time.","title":"LookupLemmatizer"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.scorer","text":"scorer = scorer","title":"scorer"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.source","text":"source = source","title":"source"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.create","text":"create ( nlp , name , scorer , source )","title":"create()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.from_disk","text":"from_disk ( path , exclude = tuple ())","title":"from_disk()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.initialize","text":"initialize ( get_examples , * , nlp = None )","title":"initialize()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.to_disk","text":"to_disk ( path , exclude = tuple ())","title":"to_disk()"},{"location":"reference/huspacy/components/lookup_lemmatizer/#huspacy.components.lookup_lemmatizer.LookupLemmatizer.train","text":"train ( sentences , min_occurrences = 1 ) Parameters: Name Type Description Default sentences Iterable [ Iterable [ Tuple [ str , str , str , str ]]] Sentences to learn the mappings from required min_occurrences int mapping occurring less than this threshold are not learned 1","title":"train()"},{"location":"reference/huspacy/components/sentencizer/","text":"HunSentencizer # Bases: Pipe Sentencizer component which uses simple rules to split the text to sentences. create_sentencizer staticmethod # create_sentencizer ( nlp , name )","title":"sentencizer"},{"location":"reference/huspacy/components/sentencizer/#huspacy.components.sentencizer.HunSentencizer","text":"Bases: Pipe Sentencizer component which uses simple rules to split the text to sentences.","title":"HunSentencizer"},{"location":"reference/huspacy/components/sentencizer/#huspacy.components.sentencizer.HunSentencizer.create_sentencizer","text":"create_sentencizer ( nlp , name )","title":"create_sentencizer()"},{"location":"reference/huspacy/integrations/__init__/","text":"","title":"  init  "},{"location":"reference/huspacy/integrations/nerpp/","text":"EntityRecognizerONPP # Bases: Pipe spaCy pipeline component for wrapping the ONPP NER model: https://huggingface.co/novakat/nerkor-cars-onpp-hubert MODEL_HF_PATH class-attribute # MODEL_HF_PATH = 'novakat/nerkor-cars-onpp-hubert' create # create ( nlp , name ) Creates an entity recognizer using a model which supports 30+ entity types. ( https://huggingface.co/novakat/nerkor-cars-onpp-hubert )","title":"Nerpp"},{"location":"reference/huspacy/integrations/nerpp/#huspacy.integrations.nerpp.EntityRecognizerONPP","text":"Bases: Pipe spaCy pipeline component for wrapping the ONPP NER model: https://huggingface.co/novakat/nerkor-cars-onpp-hubert","title":"EntityRecognizerONPP"},{"location":"reference/huspacy/integrations/nerpp/#huspacy.integrations.nerpp.EntityRecognizerONPP.MODEL_HF_PATH","text":"MODEL_HF_PATH = 'novakat/nerkor-cars-onpp-hubert'","title":"MODEL_HF_PATH"},{"location":"reference/huspacy/integrations/nerpp/#huspacy.integrations.nerpp.create","text":"create ( nlp , name ) Creates an entity recognizer using a model which supports 30+ entity types. ( https://huggingface.co/novakat/nerkor-cars-onpp-hubert )","title":"create()"},{"location":"reference/huspacy/integrations/sentiment/","text":"HunSentimentLexiconAnnotator # Bases: Pipe spaCy pipeline component for matching Hungarian sentiment lexicons in text. PolTextLexiconLoader # Lexicon loader for the Poltext sentiment lexicon load # load () PrecoSentiLoader # Lexicon loader for the Precognox sentiment lexicon load # load () create # create ( nlp , name , lexicon_id ) Creates a HunSentimentLexiconAnnotator object create_pattern # create_pattern ( words , label ) update_lexicons # update_lexicons () Update local sentiment lexicons by downloading the latest version from the Web","title":"Sentiment"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.HunSentimentLexiconAnnotator","text":"Bases: Pipe spaCy pipeline component for matching Hungarian sentiment lexicons in text.","title":"HunSentimentLexiconAnnotator"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PolTextLexiconLoader","text":"Lexicon loader for the Poltext sentiment lexicon","title":"PolTextLexiconLoader"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PolTextLexiconLoader.load","text":"load ()","title":"load()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PrecoSentiLoader","text":"Lexicon loader for the Precognox sentiment lexicon","title":"PrecoSentiLoader"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.PrecoSentiLoader.load","text":"load ()","title":"load()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.create","text":"create ( nlp , name , lexicon_id ) Creates a HunSentimentLexiconAnnotator object","title":"create()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.create_pattern","text":"create_pattern ( words , label )","title":"create_pattern()"},{"location":"reference/huspacy/integrations/sentiment/#huspacy.integrations.sentiment.update_lexicons","text":"update_lexicons () Update local sentiment lexicons by downloading the latest version from the Web","title":"update_lexicons()"}]}